### YamlMime:ManagedReference
items:
- uid: EasyPost.Models.API.CarrierAccount
  commentId: T:EasyPost.Models.API.CarrierAccount
  id: CarrierAccount
  parent: EasyPost.Models.API
  children:
  - EasyPost.Models.API.CarrierAccount.BillingType
  - EasyPost.Models.API.CarrierAccount.Credentials
  - EasyPost.Models.API.CarrierAccount.Delete
  - EasyPost.Models.API.CarrierAccount.Description
  - EasyPost.Models.API.CarrierAccount.Readable
  - EasyPost.Models.API.CarrierAccount.Reference
  - EasyPost.Models.API.CarrierAccount.TestCredentials
  - EasyPost.Models.API.CarrierAccount.Type
  - EasyPost.Models.API.CarrierAccount.Update(System.Collections.Generic.Dictionary{System.String,System.Object})
  langs:
  - csharp
  - vb
  name: CarrierAccount
  nameWithType: CarrierAccount
  fullName: EasyPost.Models.API.CarrierAccount
  type: Class
  source:
    remote:
      path: EasyPost/Models/API/CarrierAccount.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CarrierAccount
    path: Models/API/CarrierAccount.cs
    startLine: 11
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: 'public class CarrierAccount : EasyPostObject, IEasyPostObject'
    content.vb: >-
      Public Class CarrierAccount

          Inherits EasyPostObject

          Implements IEasyPostObject
  inheritance:
  - System.Object
  - EasyPost._base.WithClient
  - EasyPost._base.EasyPostObject
  implements:
  - EasyPost._base.IEasyPostObject
  inheritedMembers:
  - EasyPost._base.EasyPostObject.CreatedAt
  - EasyPost._base.EasyPostObject.Id
  - EasyPost._base.EasyPostObject.Mode
  - EasyPost._base.EasyPostObject.UpdatedAt
  - EasyPost._base.EasyPostObject.Equals(System.Object)
  - EasyPost._base.EasyPostObject.GetHashCode
  - EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EasyPost.Models.API.CarrierAccount.BillingType
  commentId: P:EasyPost.Models.API.CarrierAccount.BillingType
  id: BillingType
  parent: EasyPost.Models.API.CarrierAccount
  langs:
  - csharp
  - vb
  name: BillingType
  nameWithType: CarrierAccount.BillingType
  fullName: EasyPost.Models.API.CarrierAccount.BillingType
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/CarrierAccount.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: BillingType
    path: Models/API/CarrierAccount.cs
    startLine: 15
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("billing_type")]

      public string BillingType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("billing_type")>

      Public Property BillingType As String
  overload: EasyPost.Models.API.CarrierAccount.BillingType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: billing_type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.CarrierAccount.Credentials
  commentId: P:EasyPost.Models.API.CarrierAccount.Credentials
  id: Credentials
  parent: EasyPost.Models.API.CarrierAccount
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: CarrierAccount.Credentials
  fullName: EasyPost.Models.API.CarrierAccount.Credentials
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/CarrierAccount.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Credentials
    path: Models/API/CarrierAccount.cs
    startLine: 17
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("credentials")]

      public Dictionary<string, object> Credentials { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: >-
      <JsonProperty("credentials")>

      Public Property Credentials As Dictionary(Of String, Object)
  overload: EasyPost.Models.API.CarrierAccount.Credentials*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: credentials
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.CarrierAccount.Description
  commentId: P:EasyPost.Models.API.CarrierAccount.Description
  id: Description
  parent: EasyPost.Models.API.CarrierAccount
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: CarrierAccount.Description
  fullName: EasyPost.Models.API.CarrierAccount.Description
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/CarrierAccount.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Description
    path: Models/API/CarrierAccount.cs
    startLine: 19
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("description")]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("description")>

      Public Property Description As String
  overload: EasyPost.Models.API.CarrierAccount.Description*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: description
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.CarrierAccount.Readable
  commentId: P:EasyPost.Models.API.CarrierAccount.Readable
  id: Readable
  parent: EasyPost.Models.API.CarrierAccount
  langs:
  - csharp
  - vb
  name: Readable
  nameWithType: CarrierAccount.Readable
  fullName: EasyPost.Models.API.CarrierAccount.Readable
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/CarrierAccount.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Readable
    path: Models/API/CarrierAccount.cs
    startLine: 21
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("readable")]

      public string Readable { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("readable")>

      Public Property Readable As String
  overload: EasyPost.Models.API.CarrierAccount.Readable*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: readable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.CarrierAccount.Reference
  commentId: P:EasyPost.Models.API.CarrierAccount.Reference
  id: Reference
  parent: EasyPost.Models.API.CarrierAccount
  langs:
  - csharp
  - vb
  name: Reference
  nameWithType: CarrierAccount.Reference
  fullName: EasyPost.Models.API.CarrierAccount.Reference
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/CarrierAccount.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Reference
    path: Models/API/CarrierAccount.cs
    startLine: 23
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("reference")]

      public string Reference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("reference")>

      Public Property Reference As String
  overload: EasyPost.Models.API.CarrierAccount.Reference*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: reference
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.CarrierAccount.TestCredentials
  commentId: P:EasyPost.Models.API.CarrierAccount.TestCredentials
  id: TestCredentials
  parent: EasyPost.Models.API.CarrierAccount
  langs:
  - csharp
  - vb
  name: TestCredentials
  nameWithType: CarrierAccount.TestCredentials
  fullName: EasyPost.Models.API.CarrierAccount.TestCredentials
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/CarrierAccount.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: TestCredentials
    path: Models/API/CarrierAccount.cs
    startLine: 25
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("test_credentials")]

      public Dictionary<string, object> TestCredentials { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: >-
      <JsonProperty("test_credentials")>

      Public Property TestCredentials As Dictionary(Of String, Object)
  overload: EasyPost.Models.API.CarrierAccount.TestCredentials*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: test_credentials
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.CarrierAccount.Type
  commentId: P:EasyPost.Models.API.CarrierAccount.Type
  id: Type
  parent: EasyPost.Models.API.CarrierAccount
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: CarrierAccount.Type
  fullName: EasyPost.Models.API.CarrierAccount.Type
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/CarrierAccount.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Type
    path: Models/API/CarrierAccount.cs
    startLine: 28
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("type")]

      public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("type")>

      Public Property Type As String
  overload: EasyPost.Models.API.CarrierAccount.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.CarrierAccount.Update(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:EasyPost.Models.API.CarrierAccount.Update(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: Update(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: EasyPost.Models.API.CarrierAccount
  langs:
  - csharp
  - vb
  name: Update(Dictionary<String, Object>)
  nameWithType: CarrierAccount.Update(Dictionary<String, Object>)
  fullName: EasyPost.Models.API.CarrierAccount.Update(System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: EasyPost/Models/API/CarrierAccount.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Update
    path: Models/API/CarrierAccount.cs
    startLine: 44
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  summary: "\nUpdate this CarrierAccount.\n"
  example: []
  syntax:
    content: public async Task<CarrierAccount> Update(Dictionary<string, object> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: See CarrierAccount.Create for more details.
    return:
      type: System.Threading.Tasks.Task{EasyPost.Models.API.CarrierAccount}
      description: The updated CarrierAccount.
    content.vb: Public Function Update(parameters As Dictionary(Of String, Object)) As Task(Of CarrierAccount)
  overload: EasyPost.Models.API.CarrierAccount.Update*
  nameWithType.vb: CarrierAccount.Update(Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: EasyPost.Models.API.CarrierAccount.Update(System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: Update(Dictionary(Of String, Object))
- uid: EasyPost.Models.API.CarrierAccount.Delete
  commentId: M:EasyPost.Models.API.CarrierAccount.Delete
  id: Delete
  parent: EasyPost.Models.API.CarrierAccount
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: CarrierAccount.Delete()
  fullName: EasyPost.Models.API.CarrierAccount.Delete()
  type: Method
  source:
    remote:
      path: EasyPost/Models/API/CarrierAccount.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Delete
    path: Models/API/CarrierAccount.cs
    startLine: 56
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  summary: "\nRemove this CarrierAccount from your account.\n"
  example: []
  syntax:
    content: public async Task Delete()
    return:
      type: System.Threading.Tasks.Task
      description: Whether the request was successful or not.
    content.vb: Public Function Delete As Task
  overload: EasyPost.Models.API.CarrierAccount.Delete*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: EasyPost.Models.API
  commentId: N:EasyPost.Models.API
  name: EasyPost.Models.API
  nameWithType: EasyPost.Models.API
  fullName: EasyPost.Models.API
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EasyPost._base.WithClient
  commentId: T:EasyPost._base.WithClient
  parent: EasyPost._base
  name: WithClient
  nameWithType: WithClient
  fullName: EasyPost._base.WithClient
- uid: EasyPost._base.EasyPostObject
  commentId: T:EasyPost._base.EasyPostObject
  parent: EasyPost._base
  name: EasyPostObject
  nameWithType: EasyPostObject
  fullName: EasyPost._base.EasyPostObject
- uid: EasyPost._base.IEasyPostObject
  commentId: T:EasyPost._base.IEasyPostObject
  parent: EasyPost._base
  name: IEasyPostObject
  nameWithType: IEasyPostObject
  fullName: EasyPost._base.IEasyPostObject
- uid: EasyPost._base.EasyPostObject.CreatedAt
  commentId: P:EasyPost._base.EasyPostObject.CreatedAt
  parent: EasyPost._base.EasyPostObject
  name: CreatedAt
  nameWithType: EasyPostObject.CreatedAt
  fullName: EasyPost._base.EasyPostObject.CreatedAt
- uid: EasyPost._base.EasyPostObject.Id
  commentId: P:EasyPost._base.EasyPostObject.Id
  parent: EasyPost._base.EasyPostObject
  name: Id
  nameWithType: EasyPostObject.Id
  fullName: EasyPost._base.EasyPostObject.Id
- uid: EasyPost._base.EasyPostObject.Mode
  commentId: P:EasyPost._base.EasyPostObject.Mode
  parent: EasyPost._base.EasyPostObject
  name: Mode
  nameWithType: EasyPostObject.Mode
  fullName: EasyPost._base.EasyPostObject.Mode
- uid: EasyPost._base.EasyPostObject.UpdatedAt
  commentId: P:EasyPost._base.EasyPostObject.UpdatedAt
  parent: EasyPost._base.EasyPostObject
  name: UpdatedAt
  nameWithType: EasyPostObject.UpdatedAt
  fullName: EasyPost._base.EasyPostObject.UpdatedAt
- uid: EasyPost._base.EasyPostObject.Equals(System.Object)
  commentId: M:EasyPost._base.EasyPostObject.Equals(System.Object)
  parent: EasyPost._base.EasyPostObject
  isExternal: true
  name: Equals(Object)
  nameWithType: EasyPostObject.Equals(Object)
  fullName: EasyPost._base.EasyPostObject.Equals(System.Object)
  spec.csharp:
  - uid: EasyPost._base.EasyPostObject.Equals(System.Object)
    name: Equals
    nameWithType: EasyPostObject.Equals
    fullName: EasyPost._base.EasyPostObject.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostObject.Equals(System.Object)
    name: Equals
    nameWithType: EasyPostObject.Equals
    fullName: EasyPost._base.EasyPostObject.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.EasyPostObject.GetHashCode
  commentId: M:EasyPost._base.EasyPostObject.GetHashCode
  parent: EasyPost._base.EasyPostObject
  name: GetHashCode()
  nameWithType: EasyPostObject.GetHashCode()
  fullName: EasyPost._base.EasyPostObject.GetHashCode()
  spec.csharp:
  - uid: EasyPost._base.EasyPostObject.GetHashCode
    name: GetHashCode
    nameWithType: EasyPostObject.GetHashCode
    fullName: EasyPost._base.EasyPostObject.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostObject.GetHashCode
    name: GetHashCode
    nameWithType: EasyPostObject.GetHashCode
    fullName: EasyPost._base.EasyPostObject.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.EasyPostObject
  isExternal: true
  name: Update<T>(Method, String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: EasyPostObject.Update<T>(Method, String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.EasyPostObject.Update<T>(RestSharp.Method, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: EasyPostObject.Update(Of T)(Method, String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.EasyPostObject.Update(Of T)(RestSharp.Method, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Update(Of T)(Method, String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Update<T>
    nameWithType: EasyPostObject.Update<T>
    fullName: EasyPost._base.EasyPostObject.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Update(Of T)
    nameWithType: EasyPostObject.Update(Of T)
    fullName: EasyPost._base.EasyPostObject.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Create<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Create<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Create<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Create(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Create(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Create(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Create<T>
    nameWithType: WithClient.Create<T>
    fullName: EasyPost._base.WithClient.Create<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Create(Of T)
    nameWithType: WithClient.Create(Of T)
    fullName: EasyPost._base.WithClient.Create(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: CreateNoResponse(String, Dictionary<String, Object>, ApiVersion)
  nameWithType: WithClient.CreateNoResponse(String, Dictionary<String, Object>, ApiVersion)
  fullName: EasyPost._base.WithClient.CreateNoResponse(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.CreateNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  fullName.vb: EasyPost._base.WithClient.CreateNoResponse(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), EasyPost._base.ApiVersion)
  name.vb: CreateNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: CreateNoResponse
    nameWithType: WithClient.CreateNoResponse
    fullName: EasyPost._base.WithClient.CreateNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: CreateNoResponse
    nameWithType: WithClient.CreateNoResponse
    fullName: EasyPost._base.WithClient.CreateNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Delete<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Delete<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Delete<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Delete(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Delete(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Delete(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Delete<T>
    nameWithType: WithClient.Delete<T>
    fullName: EasyPost._base.WithClient.Delete<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Delete(Of T)
    nameWithType: WithClient.Delete(Of T)
    fullName: EasyPost._base.WithClient.Delete(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: DeleteNoResponse(String, Dictionary<String, Object>, ApiVersion)
  nameWithType: WithClient.DeleteNoResponse(String, Dictionary<String, Object>, ApiVersion)
  fullName: EasyPost._base.WithClient.DeleteNoResponse(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.DeleteNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  fullName.vb: EasyPost._base.WithClient.DeleteNoResponse(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), EasyPost._base.ApiVersion)
  name.vb: DeleteNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: DeleteNoResponse
    nameWithType: WithClient.DeleteNoResponse
    fullName: EasyPost._base.WithClient.DeleteNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: DeleteNoResponse
    nameWithType: WithClient.DeleteNoResponse
    fullName: EasyPost._base.WithClient.DeleteNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Get<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Get<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Get<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Get(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Get(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Get(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Get<T>
    nameWithType: WithClient.Get<T>
    fullName: EasyPost._base.WithClient.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Get(Of T)
    nameWithType: WithClient.Get(Of T)
    fullName: EasyPost._base.WithClient.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: List<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.List<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.List<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.List(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.List(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: List(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: List<T>
    nameWithType: WithClient.List<T>
    fullName: EasyPost._base.WithClient.List<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: List(Of T)
    nameWithType: WithClient.List(Of T)
    fullName: EasyPost._base.WithClient.List(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Request<T>(Method, String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Request<T>(Method, String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Request<T>(RestSharp.Method, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Request(Of T)(Method, String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Request(Of T)(RestSharp.Method, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Request(Of T)(Method, String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Request<T>
    nameWithType: WithClient.Request<T>
    fullName: EasyPost._base.WithClient.Request<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Request(Of T)
    nameWithType: WithClient.Request(Of T)
    fullName: EasyPost._base.WithClient.Request(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Request(Method, String, Dictionary<String, Object>, ApiVersion)
  nameWithType: WithClient.Request(Method, String, Dictionary<String, Object>, ApiVersion)
  fullName: EasyPost._base.WithClient.Request(RestSharp.Method, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Request(Method, String, Dictionary(Of String, Object), ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Request(RestSharp.Method, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), EasyPost._base.ApiVersion)
  name.vb: Request(Method, String, Dictionary(Of String, Object), ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: Request
    nameWithType: WithClient.Request
    fullName: EasyPost._base.WithClient.Request
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: Request
    nameWithType: WithClient.Request
    fullName: EasyPost._base.WithClient.Request
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Update<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Update<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Update<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Update(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Update(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Update(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Update<T>
    nameWithType: WithClient.Update<T>
    fullName: EasyPost._base.WithClient.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Update(Of T)
    nameWithType: WithClient.Update(Of T)
    fullName: EasyPost._base.WithClient.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: UpdateNoResponse(String, Dictionary<String, Object>, ApiVersion)
  nameWithType: WithClient.UpdateNoResponse(String, Dictionary<String, Object>, ApiVersion)
  fullName: EasyPost._base.WithClient.UpdateNoResponse(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.UpdateNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  fullName.vb: EasyPost._base.WithClient.UpdateNoResponse(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), EasyPost._base.ApiVersion)
  name.vb: UpdateNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: UpdateNoResponse
    nameWithType: WithClient.UpdateNoResponse
    fullName: EasyPost._base.WithClient.UpdateNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: UpdateNoResponse
    nameWithType: WithClient.UpdateNoResponse
    fullName: EasyPost._base.WithClient.UpdateNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasyPost._base
  commentId: N:EasyPost._base
  name: EasyPost._base
  nameWithType: EasyPost._base
  fullName: EasyPost._base
- uid: EasyPost.Models.API.CarrierAccount.BillingType*
  commentId: Overload:EasyPost.Models.API.CarrierAccount.BillingType
  name: BillingType
  nameWithType: CarrierAccount.BillingType
  fullName: EasyPost.Models.API.CarrierAccount.BillingType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EasyPost.Models.API.CarrierAccount.Credentials*
  commentId: Overload:EasyPost.Models.API.CarrierAccount.Credentials
  name: Credentials
  nameWithType: CarrierAccount.Credentials
  fullName: EasyPost.Models.API.CarrierAccount.Credentials
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EasyPost.Models.API.CarrierAccount.Description*
  commentId: Overload:EasyPost.Models.API.CarrierAccount.Description
  name: Description
  nameWithType: CarrierAccount.Description
  fullName: EasyPost.Models.API.CarrierAccount.Description
- uid: EasyPost.Models.API.CarrierAccount.Readable*
  commentId: Overload:EasyPost.Models.API.CarrierAccount.Readable
  name: Readable
  nameWithType: CarrierAccount.Readable
  fullName: EasyPost.Models.API.CarrierAccount.Readable
- uid: EasyPost.Models.API.CarrierAccount.Reference*
  commentId: Overload:EasyPost.Models.API.CarrierAccount.Reference
  name: Reference
  nameWithType: CarrierAccount.Reference
  fullName: EasyPost.Models.API.CarrierAccount.Reference
- uid: EasyPost.Models.API.CarrierAccount.TestCredentials*
  commentId: Overload:EasyPost.Models.API.CarrierAccount.TestCredentials
  name: TestCredentials
  nameWithType: CarrierAccount.TestCredentials
  fullName: EasyPost.Models.API.CarrierAccount.TestCredentials
- uid: EasyPost.Models.API.CarrierAccount.Type*
  commentId: Overload:EasyPost.Models.API.CarrierAccount.Type
  name: Type
  nameWithType: CarrierAccount.Type
  fullName: EasyPost.Models.API.CarrierAccount.Type
- uid: EasyPost.Models.API.CarrierAccount.Update*
  commentId: Overload:EasyPost.Models.API.CarrierAccount.Update
  name: Update
  nameWithType: CarrierAccount.Update
  fullName: EasyPost.Models.API.CarrierAccount.Update
- uid: System.Threading.Tasks.Task{EasyPost.Models.API.CarrierAccount}
  commentId: T:System.Threading.Tasks.Task{EasyPost.Models.API.CarrierAccount}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CarrierAccount>
  nameWithType: Task<CarrierAccount>
  fullName: System.Threading.Tasks.Task<EasyPost.Models.API.CarrierAccount>
  nameWithType.vb: Task(Of CarrierAccount)
  fullName.vb: System.Threading.Tasks.Task(Of EasyPost.Models.API.CarrierAccount)
  name.vb: Task(Of CarrierAccount)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EasyPost.Models.API.CarrierAccount
    name: CarrierAccount
    nameWithType: CarrierAccount
    fullName: EasyPost.Models.API.CarrierAccount
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EasyPost.Models.API.CarrierAccount
    name: CarrierAccount
    nameWithType: CarrierAccount
    fullName: EasyPost.Models.API.CarrierAccount
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: EasyPost.Models.API.CarrierAccount.Delete*
  commentId: Overload:EasyPost.Models.API.CarrierAccount.Delete
  name: Delete
  nameWithType: CarrierAccount.Delete
  fullName: EasyPost.Models.API.CarrierAccount.Delete
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
