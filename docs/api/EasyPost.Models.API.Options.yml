### YamlMime:ManagedReference
items:
- uid: EasyPost.Models.API.Options
  commentId: T:EasyPost.Models.API.Options
  id: Options
  parent: EasyPost.Models.API
  children:
  - EasyPost.Models.API.Options.AdditionalHandling
  - EasyPost.Models.API.Options.AddressValidationLevel
  - EasyPost.Models.API.Options.Alcohol
  - EasyPost.Models.API.Options.BillingRef
  - EasyPost.Models.API.Options.BillReceiverAccount
  - EasyPost.Models.API.Options.BillReceiverPostalCode
  - EasyPost.Models.API.Options.BillThirdPartyAccount
  - EasyPost.Models.API.Options.BillThirdPartyCountry
  - EasyPost.Models.API.Options.BillThirdPartyPostalCode
  - EasyPost.Models.API.Options.ByDrone
  - EasyPost.Models.API.Options.CarbonNeutral
  - EasyPost.Models.API.Options.CarrierInsuranceAmount
  - EasyPost.Models.API.Options.CarrierNotificationEmail
  - EasyPost.Models.API.Options.CarrierNotificationSms
  - EasyPost.Models.API.Options.CertifiedMail
  - EasyPost.Models.API.Options.CodAddressId
  - EasyPost.Models.API.Options.CodAmount
  - EasyPost.Models.API.Options.CodMethod
  - EasyPost.Models.API.Options.CommercialInvoiceFormat
  - EasyPost.Models.API.Options.CommercialInvoiceLetterhead
  - EasyPost.Models.API.Options.CommercialInvoiceSignature
  - EasyPost.Models.API.Options.CommercialInvoiceSize
  - EasyPost.Models.API.Options.CostCenter
  - EasyPost.Models.API.Options.Currency
  - EasyPost.Models.API.Options.CustomsBrokerAddressId
  - EasyPost.Models.API.Options.CustomsIncludeShipping
  - EasyPost.Models.API.Options.DeclaredValue
  - EasyPost.Models.API.Options.DeliveredDutyPaid
  - EasyPost.Models.API.Options.DeliveryConfirmation
  - EasyPost.Models.API.Options.DeliveryMaxDatetime
  - EasyPost.Models.API.Options.DeliveryTimePreference
  - EasyPost.Models.API.Options.DropoffMaxDatetime
  - EasyPost.Models.API.Options.DropoffType
  - EasyPost.Models.API.Options.DryIce
  - EasyPost.Models.API.Options.DryIceMedical
  - EasyPost.Models.API.Options.DryIceWeight
  - EasyPost.Models.API.Options.DutyPayment
  - EasyPost.Models.API.Options.DutyPaymentAccount
  - EasyPost.Models.API.Options.Endorsement
  - EasyPost.Models.API.Options.EndShipperId
  - EasyPost.Models.API.Options.FreightCharge
  - EasyPost.Models.API.Options.Group
  - EasyPost.Models.API.Options.HandlingInstructions
  - EasyPost.Models.API.Options.Hazmat
  - EasyPost.Models.API.Options.HoldForPickup
  - EasyPost.Models.API.Options.ImageFormat
  - EasyPost.Models.API.Options.ImporterAddressId
  - EasyPost.Models.API.Options.ImportFederalTaxId
  - EasyPost.Models.API.Options.ImportStateTaxId
  - EasyPost.Models.API.Options.Incoterm
  - EasyPost.Models.API.Options.InvoiceNumber
  - EasyPost.Models.API.Options.LabelDate
  - EasyPost.Models.API.Options.LabelFormat
  - EasyPost.Models.API.Options.LabelSize
  - EasyPost.Models.API.Options.LicenseNumber
  - EasyPost.Models.API.Options.Machinable
  - EasyPost.Models.API.Options.NeutralDelivery
  - EasyPost.Models.API.Options.NonContract
  - EasyPost.Models.API.Options.OverlabelConstructCode
  - EasyPost.Models.API.Options.OverlabelOriginalTrackingNumber
  - EasyPost.Models.API.Options.PartiesToTransactionAreRelated
  - EasyPost.Models.API.Options.Payment
  - EasyPost.Models.API.Options.PeelAndReturn
  - EasyPost.Models.API.Options.PickupMaxDatetime
  - EasyPost.Models.API.Options.PickupMinDatetime
  - EasyPost.Models.API.Options.PoSort
  - EasyPost.Models.API.Options.PostageLabelInline
  - EasyPost.Models.API.Options.PrintCustom
  - EasyPost.Models.API.Options.PrintCustom1
  - EasyPost.Models.API.Options.PrintCustom1Barcode
  - EasyPost.Models.API.Options.PrintCustom1Code
  - EasyPost.Models.API.Options.PrintCustom2
  - EasyPost.Models.API.Options.PrintCustom2Barcode
  - EasyPost.Models.API.Options.PrintCustom2Code
  - EasyPost.Models.API.Options.PrintCustom3
  - EasyPost.Models.API.Options.PrintCustom3Barcode
  - EasyPost.Models.API.Options.PrintCustom3Code
  - EasyPost.Models.API.Options.PrintRate
  - EasyPost.Models.API.Options.ReceiverLiquorLicense
  - EasyPost.Models.API.Options.RegisteredMail
  - EasyPost.Models.API.Options.RegisteredMailAmount
  - EasyPost.Models.API.Options.ReturnReceipt
  - EasyPost.Models.API.Options.ReturnService
  - EasyPost.Models.API.Options.SaturdayDelivery
  - EasyPost.Models.API.Options.SettlementMethod
  - EasyPost.Models.API.Options.SmartpostHub
  - EasyPost.Models.API.Options.SmartpostManifest
  - EasyPost.Models.API.Options.SpecialRatesEligibility
  - EasyPost.Models.API.Options.SuppressEtd
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: Options
  fullName: EasyPost.Models.API.Options
  type: Class
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Options
    path: Models/API/Options.cs
    startLine: 7
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: 'public class Options : EasyPostObject, IEasyPostObject'
    content.vb: >-
      Public Class Options

          Inherits EasyPostObject

          Implements IEasyPostObject
  inheritance:
  - System.Object
  - EasyPost._base.WithClient
  - EasyPost._base.EasyPostObject
  implements:
  - EasyPost._base.IEasyPostObject
  inheritedMembers:
  - EasyPost._base.EasyPostObject.CreatedAt
  - EasyPost._base.EasyPostObject.Id
  - EasyPost._base.EasyPostObject.Mode
  - EasyPost._base.EasyPostObject.UpdatedAt
  - EasyPost._base.EasyPostObject.Equals(System.Object)
  - EasyPost._base.EasyPostObject.GetHashCode
  - EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EasyPost.Models.API.Options.AdditionalHandling
  commentId: P:EasyPost.Models.API.Options.AdditionalHandling
  id: AdditionalHandling
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: AdditionalHandling
  nameWithType: Options.AdditionalHandling
  fullName: EasyPost.Models.API.Options.AdditionalHandling
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: AdditionalHandling
    path: Models/API/Options.cs
    startLine: 11
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("additional_handling")]

      public bool? AdditionalHandling { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("additional_handling")>

      Public Property AdditionalHandling As Boolean?
  overload: EasyPost.Models.API.Options.AdditionalHandling*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: additional_handling
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.AddressValidationLevel
  commentId: P:EasyPost.Models.API.Options.AddressValidationLevel
  id: AddressValidationLevel
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: AddressValidationLevel
  nameWithType: Options.AddressValidationLevel
  fullName: EasyPost.Models.API.Options.AddressValidationLevel
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: AddressValidationLevel
    path: Models/API/Options.cs
    startLine: 13
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("address_validation_level")]

      public string AddressValidationLevel { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("address_validation_level")>

      Public Property AddressValidationLevel As String
  overload: EasyPost.Models.API.Options.AddressValidationLevel*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: address_validation_level
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.Alcohol
  commentId: P:EasyPost.Models.API.Options.Alcohol
  id: Alcohol
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: Alcohol
  nameWithType: Options.Alcohol
  fullName: EasyPost.Models.API.Options.Alcohol
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Alcohol
    path: Models/API/Options.cs
    startLine: 15
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("alcohol")]

      public bool? Alcohol { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("alcohol")>

      Public Property Alcohol As Boolean?
  overload: EasyPost.Models.API.Options.Alcohol*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: alcohol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.BillingRef
  commentId: P:EasyPost.Models.API.Options.BillingRef
  id: BillingRef
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: BillingRef
  nameWithType: Options.BillingRef
  fullName: EasyPost.Models.API.Options.BillingRef
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: BillingRef
    path: Models/API/Options.cs
    startLine: 17
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("billing_ref")]

      public string BillingRef { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("billing_ref")>

      Public Property BillingRef As String
  overload: EasyPost.Models.API.Options.BillingRef*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: billing_ref
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.BillReceiverAccount
  commentId: P:EasyPost.Models.API.Options.BillReceiverAccount
  id: BillReceiverAccount
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: BillReceiverAccount
  nameWithType: Options.BillReceiverAccount
  fullName: EasyPost.Models.API.Options.BillReceiverAccount
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: BillReceiverAccount
    path: Models/API/Options.cs
    startLine: 19
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("bill_receiver_account")]

      public string BillReceiverAccount { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("bill_receiver_account")>

      Public Property BillReceiverAccount As String
  overload: EasyPost.Models.API.Options.BillReceiverAccount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bill_receiver_account
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.BillReceiverPostalCode
  commentId: P:EasyPost.Models.API.Options.BillReceiverPostalCode
  id: BillReceiverPostalCode
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: BillReceiverPostalCode
  nameWithType: Options.BillReceiverPostalCode
  fullName: EasyPost.Models.API.Options.BillReceiverPostalCode
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: BillReceiverPostalCode
    path: Models/API/Options.cs
    startLine: 21
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("bill_receiver_postal_code")]

      public string BillReceiverPostalCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("bill_receiver_postal_code")>

      Public Property BillReceiverPostalCode As String
  overload: EasyPost.Models.API.Options.BillReceiverPostalCode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bill_receiver_postal_code
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.BillThirdPartyAccount
  commentId: P:EasyPost.Models.API.Options.BillThirdPartyAccount
  id: BillThirdPartyAccount
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: BillThirdPartyAccount
  nameWithType: Options.BillThirdPartyAccount
  fullName: EasyPost.Models.API.Options.BillThirdPartyAccount
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: BillThirdPartyAccount
    path: Models/API/Options.cs
    startLine: 23
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("bill_third_party_account")]

      public string BillThirdPartyAccount { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("bill_third_party_account")>

      Public Property BillThirdPartyAccount As String
  overload: EasyPost.Models.API.Options.BillThirdPartyAccount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bill_third_party_account
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.BillThirdPartyCountry
  commentId: P:EasyPost.Models.API.Options.BillThirdPartyCountry
  id: BillThirdPartyCountry
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: BillThirdPartyCountry
  nameWithType: Options.BillThirdPartyCountry
  fullName: EasyPost.Models.API.Options.BillThirdPartyCountry
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: BillThirdPartyCountry
    path: Models/API/Options.cs
    startLine: 25
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("bill_third_party_country")]

      public string BillThirdPartyCountry { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("bill_third_party_country")>

      Public Property BillThirdPartyCountry As String
  overload: EasyPost.Models.API.Options.BillThirdPartyCountry*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bill_third_party_country
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.BillThirdPartyPostalCode
  commentId: P:EasyPost.Models.API.Options.BillThirdPartyPostalCode
  id: BillThirdPartyPostalCode
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: BillThirdPartyPostalCode
  nameWithType: Options.BillThirdPartyPostalCode
  fullName: EasyPost.Models.API.Options.BillThirdPartyPostalCode
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: BillThirdPartyPostalCode
    path: Models/API/Options.cs
    startLine: 27
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("bill_third_party_postal_code")]

      public string BillThirdPartyPostalCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("bill_third_party_postal_code")>

      Public Property BillThirdPartyPostalCode As String
  overload: EasyPost.Models.API.Options.BillThirdPartyPostalCode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bill_third_party_postal_code
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.ByDrone
  commentId: P:EasyPost.Models.API.Options.ByDrone
  id: ByDrone
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: ByDrone
  nameWithType: Options.ByDrone
  fullName: EasyPost.Models.API.Options.ByDrone
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ByDrone
    path: Models/API/Options.cs
    startLine: 29
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("by_drone")]

      public bool? ByDrone { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("by_drone")>

      Public Property ByDrone As Boolean?
  overload: EasyPost.Models.API.Options.ByDrone*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: by_drone
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CarbonNeutral
  commentId: P:EasyPost.Models.API.Options.CarbonNeutral
  id: CarbonNeutral
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CarbonNeutral
  nameWithType: Options.CarbonNeutral
  fullName: EasyPost.Models.API.Options.CarbonNeutral
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CarbonNeutral
    path: Models/API/Options.cs
    startLine: 31
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("carbon_neutral")]

      public bool? CarbonNeutral { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("carbon_neutral")>

      Public Property CarbonNeutral As Boolean?
  overload: EasyPost.Models.API.Options.CarbonNeutral*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: carbon_neutral
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CarrierInsuranceAmount
  commentId: P:EasyPost.Models.API.Options.CarrierInsuranceAmount
  id: CarrierInsuranceAmount
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CarrierInsuranceAmount
  nameWithType: Options.CarrierInsuranceAmount
  fullName: EasyPost.Models.API.Options.CarrierInsuranceAmount
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CarrierInsuranceAmount
    path: Models/API/Options.cs
    startLine: 33
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("carrier_insurance_amount")]

      public string CarrierInsuranceAmount { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("carrier_insurance_amount")>

      Public Property CarrierInsuranceAmount As String
  overload: EasyPost.Models.API.Options.CarrierInsuranceAmount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: carrier_insurance_amount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CarrierNotificationEmail
  commentId: P:EasyPost.Models.API.Options.CarrierNotificationEmail
  id: CarrierNotificationEmail
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CarrierNotificationEmail
  nameWithType: Options.CarrierNotificationEmail
  fullName: EasyPost.Models.API.Options.CarrierNotificationEmail
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CarrierNotificationEmail
    path: Models/API/Options.cs
    startLine: 35
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("carrier_notification_email")]

      public string CarrierNotificationEmail { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("carrier_notification_email")>

      Public Property CarrierNotificationEmail As String
  overload: EasyPost.Models.API.Options.CarrierNotificationEmail*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: carrier_notification_email
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CarrierNotificationSms
  commentId: P:EasyPost.Models.API.Options.CarrierNotificationSms
  id: CarrierNotificationSms
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CarrierNotificationSms
  nameWithType: Options.CarrierNotificationSms
  fullName: EasyPost.Models.API.Options.CarrierNotificationSms
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CarrierNotificationSms
    path: Models/API/Options.cs
    startLine: 37
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("carrier_notification_sms")]

      public string CarrierNotificationSms { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("carrier_notification_sms")>

      Public Property CarrierNotificationSms As String
  overload: EasyPost.Models.API.Options.CarrierNotificationSms*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: carrier_notification_sms
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CertifiedMail
  commentId: P:EasyPost.Models.API.Options.CertifiedMail
  id: CertifiedMail
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CertifiedMail
  nameWithType: Options.CertifiedMail
  fullName: EasyPost.Models.API.Options.CertifiedMail
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CertifiedMail
    path: Models/API/Options.cs
    startLine: 39
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("certified_mail")]

      public bool? CertifiedMail { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("certified_mail")>

      Public Property CertifiedMail As Boolean?
  overload: EasyPost.Models.API.Options.CertifiedMail*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: certified_mail
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CodAddressId
  commentId: P:EasyPost.Models.API.Options.CodAddressId
  id: CodAddressId
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CodAddressId
  nameWithType: Options.CodAddressId
  fullName: EasyPost.Models.API.Options.CodAddressId
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CodAddressId
    path: Models/API/Options.cs
    startLine: 41
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("cod_address_id")]

      public string CodAddressId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("cod_address_id")>

      Public Property CodAddressId As String
  overload: EasyPost.Models.API.Options.CodAddressId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cod_address_id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CodAmount
  commentId: P:EasyPost.Models.API.Options.CodAmount
  id: CodAmount
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CodAmount
  nameWithType: Options.CodAmount
  fullName: EasyPost.Models.API.Options.CodAmount
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CodAmount
    path: Models/API/Options.cs
    startLine: 43
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("cod_amount")]

      public string CodAmount { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("cod_amount")>

      Public Property CodAmount As String
  overload: EasyPost.Models.API.Options.CodAmount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cod_amount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CodMethod
  commentId: P:EasyPost.Models.API.Options.CodMethod
  id: CodMethod
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CodMethod
  nameWithType: Options.CodMethod
  fullName: EasyPost.Models.API.Options.CodMethod
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CodMethod
    path: Models/API/Options.cs
    startLine: 45
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("cod_method")]

      public string CodMethod { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("cod_method")>

      Public Property CodMethod As String
  overload: EasyPost.Models.API.Options.CodMethod*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cod_method
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CommercialInvoiceFormat
  commentId: P:EasyPost.Models.API.Options.CommercialInvoiceFormat
  id: CommercialInvoiceFormat
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CommercialInvoiceFormat
  nameWithType: Options.CommercialInvoiceFormat
  fullName: EasyPost.Models.API.Options.CommercialInvoiceFormat
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CommercialInvoiceFormat
    path: Models/API/Options.cs
    startLine: 47
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("commercial_invoice_format")]

      public string CommercialInvoiceFormat { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("commercial_invoice_format")>

      Public Property CommercialInvoiceFormat As String
  overload: EasyPost.Models.API.Options.CommercialInvoiceFormat*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: commercial_invoice_format
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CommercialInvoiceLetterhead
  commentId: P:EasyPost.Models.API.Options.CommercialInvoiceLetterhead
  id: CommercialInvoiceLetterhead
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CommercialInvoiceLetterhead
  nameWithType: Options.CommercialInvoiceLetterhead
  fullName: EasyPost.Models.API.Options.CommercialInvoiceLetterhead
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CommercialInvoiceLetterhead
    path: Models/API/Options.cs
    startLine: 49
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("commercial_invoice_letterhead")]

      public string CommercialInvoiceLetterhead { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("commercial_invoice_letterhead")>

      Public Property CommercialInvoiceLetterhead As String
  overload: EasyPost.Models.API.Options.CommercialInvoiceLetterhead*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: commercial_invoice_letterhead
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CommercialInvoiceSignature
  commentId: P:EasyPost.Models.API.Options.CommercialInvoiceSignature
  id: CommercialInvoiceSignature
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CommercialInvoiceSignature
  nameWithType: Options.CommercialInvoiceSignature
  fullName: EasyPost.Models.API.Options.CommercialInvoiceSignature
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CommercialInvoiceSignature
    path: Models/API/Options.cs
    startLine: 51
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("commercial_invoice_signature")]

      public string CommercialInvoiceSignature { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("commercial_invoice_signature")>

      Public Property CommercialInvoiceSignature As String
  overload: EasyPost.Models.API.Options.CommercialInvoiceSignature*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: commercial_invoice_signature
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CommercialInvoiceSize
  commentId: P:EasyPost.Models.API.Options.CommercialInvoiceSize
  id: CommercialInvoiceSize
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CommercialInvoiceSize
  nameWithType: Options.CommercialInvoiceSize
  fullName: EasyPost.Models.API.Options.CommercialInvoiceSize
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CommercialInvoiceSize
    path: Models/API/Options.cs
    startLine: 53
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("commercial_invoice_size")]

      public string CommercialInvoiceSize { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("commercial_invoice_size")>

      Public Property CommercialInvoiceSize As String
  overload: EasyPost.Models.API.Options.CommercialInvoiceSize*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: commercial_invoice_size
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CostCenter
  commentId: P:EasyPost.Models.API.Options.CostCenter
  id: CostCenter
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CostCenter
  nameWithType: Options.CostCenter
  fullName: EasyPost.Models.API.Options.CostCenter
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CostCenter
    path: Models/API/Options.cs
    startLine: 55
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("cost_center")]

      public string CostCenter { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("cost_center")>

      Public Property CostCenter As String
  overload: EasyPost.Models.API.Options.CostCenter*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cost_center
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.Currency
  commentId: P:EasyPost.Models.API.Options.Currency
  id: Currency
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: Currency
  nameWithType: Options.Currency
  fullName: EasyPost.Models.API.Options.Currency
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Currency
    path: Models/API/Options.cs
    startLine: 57
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("currency")]

      public string Currency { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("currency")>

      Public Property Currency As String
  overload: EasyPost.Models.API.Options.Currency*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: currency
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CustomsBrokerAddressId
  commentId: P:EasyPost.Models.API.Options.CustomsBrokerAddressId
  id: CustomsBrokerAddressId
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CustomsBrokerAddressId
  nameWithType: Options.CustomsBrokerAddressId
  fullName: EasyPost.Models.API.Options.CustomsBrokerAddressId
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CustomsBrokerAddressId
    path: Models/API/Options.cs
    startLine: 59
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("customs_broker_address_id")]

      public string CustomsBrokerAddressId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("customs_broker_address_id")>

      Public Property CustomsBrokerAddressId As String
  overload: EasyPost.Models.API.Options.CustomsBrokerAddressId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: customs_broker_address_id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.CustomsIncludeShipping
  commentId: P:EasyPost.Models.API.Options.CustomsIncludeShipping
  id: CustomsIncludeShipping
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: CustomsIncludeShipping
  nameWithType: Options.CustomsIncludeShipping
  fullName: EasyPost.Models.API.Options.CustomsIncludeShipping
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CustomsIncludeShipping
    path: Models/API/Options.cs
    startLine: 61
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("customs_include_shipping")]

      public string CustomsIncludeShipping { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("customs_include_shipping")>

      Public Property CustomsIncludeShipping As String
  overload: EasyPost.Models.API.Options.CustomsIncludeShipping*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: customs_include_shipping
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.DeclaredValue
  commentId: P:EasyPost.Models.API.Options.DeclaredValue
  id: DeclaredValue
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: DeclaredValue
  nameWithType: Options.DeclaredValue
  fullName: EasyPost.Models.API.Options.DeclaredValue
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: DeclaredValue
    path: Models/API/Options.cs
    startLine: 63
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("declared_value")]

      public double? DeclaredValue { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("declared_value")>

      Public Property DeclaredValue As Double?
  overload: EasyPost.Models.API.Options.DeclaredValue*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: declared_value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.DeliveredDutyPaid
  commentId: P:EasyPost.Models.API.Options.DeliveredDutyPaid
  id: DeliveredDutyPaid
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: DeliveredDutyPaid
  nameWithType: Options.DeliveredDutyPaid
  fullName: EasyPost.Models.API.Options.DeliveredDutyPaid
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: DeliveredDutyPaid
    path: Models/API/Options.cs
    startLine: 65
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("delivered_duty_paid")]

      public bool? DeliveredDutyPaid { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("delivered_duty_paid")>

      Public Property DeliveredDutyPaid As Boolean?
  overload: EasyPost.Models.API.Options.DeliveredDutyPaid*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: delivered_duty_paid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.DeliveryConfirmation
  commentId: P:EasyPost.Models.API.Options.DeliveryConfirmation
  id: DeliveryConfirmation
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: DeliveryConfirmation
  nameWithType: Options.DeliveryConfirmation
  fullName: EasyPost.Models.API.Options.DeliveryConfirmation
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: DeliveryConfirmation
    path: Models/API/Options.cs
    startLine: 67
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("delivery_confirmation")]

      public string DeliveryConfirmation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("delivery_confirmation")>

      Public Property DeliveryConfirmation As String
  overload: EasyPost.Models.API.Options.DeliveryConfirmation*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: delivery_confirmation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.DeliveryTimePreference
  commentId: P:EasyPost.Models.API.Options.DeliveryTimePreference
  id: DeliveryTimePreference
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: DeliveryTimePreference
  nameWithType: Options.DeliveryTimePreference
  fullName: EasyPost.Models.API.Options.DeliveryTimePreference
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: DeliveryTimePreference
    path: Models/API/Options.cs
    startLine: 69
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("delivery_time_preference")]

      public string DeliveryTimePreference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("delivery_time_preference")>

      Public Property DeliveryTimePreference As String
  overload: EasyPost.Models.API.Options.DeliveryTimePreference*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: delivery_time_preference
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.DeliveryMaxDatetime
  commentId: P:EasyPost.Models.API.Options.DeliveryMaxDatetime
  id: DeliveryMaxDatetime
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: DeliveryMaxDatetime
  nameWithType: Options.DeliveryMaxDatetime
  fullName: EasyPost.Models.API.Options.DeliveryMaxDatetime
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: DeliveryMaxDatetime
    path: Models/API/Options.cs
    startLine: 71
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("delivery_max_datetime")]

      public string DeliveryMaxDatetime { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("delivery_max_datetime")>

      Public Property DeliveryMaxDatetime As String
  overload: EasyPost.Models.API.Options.DeliveryMaxDatetime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: delivery_max_datetime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.DropoffMaxDatetime
  commentId: P:EasyPost.Models.API.Options.DropoffMaxDatetime
  id: DropoffMaxDatetime
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: DropoffMaxDatetime
  nameWithType: Options.DropoffMaxDatetime
  fullName: EasyPost.Models.API.Options.DropoffMaxDatetime
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: DropoffMaxDatetime
    path: Models/API/Options.cs
    startLine: 73
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("dropoff_max_datetime")]

      public DateTime? DropoffMaxDatetime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("dropoff_max_datetime")>

      Public Property DropoffMaxDatetime As Date?
  overload: EasyPost.Models.API.Options.DropoffMaxDatetime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dropoff_max_datetime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.DropoffType
  commentId: P:EasyPost.Models.API.Options.DropoffType
  id: DropoffType
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: DropoffType
  nameWithType: Options.DropoffType
  fullName: EasyPost.Models.API.Options.DropoffType
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: DropoffType
    path: Models/API/Options.cs
    startLine: 75
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("dropoff_type")]

      public string DropoffType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("dropoff_type")>

      Public Property DropoffType As String
  overload: EasyPost.Models.API.Options.DropoffType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dropoff_type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.DryIce
  commentId: P:EasyPost.Models.API.Options.DryIce
  id: DryIce
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: DryIce
  nameWithType: Options.DryIce
  fullName: EasyPost.Models.API.Options.DryIce
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: DryIce
    path: Models/API/Options.cs
    startLine: 77
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("dry_ice")]

      public bool? DryIce { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("dry_ice")>

      Public Property DryIce As Boolean?
  overload: EasyPost.Models.API.Options.DryIce*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dry_ice
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.DryIceMedical
  commentId: P:EasyPost.Models.API.Options.DryIceMedical
  id: DryIceMedical
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: DryIceMedical
  nameWithType: Options.DryIceMedical
  fullName: EasyPost.Models.API.Options.DryIceMedical
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: DryIceMedical
    path: Models/API/Options.cs
    startLine: 79
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("dry_ice_medical")]

      public string DryIceMedical { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("dry_ice_medical")>

      Public Property DryIceMedical As String
  overload: EasyPost.Models.API.Options.DryIceMedical*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dry_ice_medical
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.DryIceWeight
  commentId: P:EasyPost.Models.API.Options.DryIceWeight
  id: DryIceWeight
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: DryIceWeight
  nameWithType: Options.DryIceWeight
  fullName: EasyPost.Models.API.Options.DryIceWeight
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: DryIceWeight
    path: Models/API/Options.cs
    startLine: 81
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("dry_ice_weight")]

      public string DryIceWeight { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("dry_ice_weight")>

      Public Property DryIceWeight As String
  overload: EasyPost.Models.API.Options.DryIceWeight*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dry_ice_weight
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.DutyPayment
  commentId: P:EasyPost.Models.API.Options.DutyPayment
  id: DutyPayment
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: DutyPayment
  nameWithType: Options.DutyPayment
  fullName: EasyPost.Models.API.Options.DutyPayment
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: DutyPayment
    path: Models/API/Options.cs
    startLine: 83
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("duty_payment")]

      public Dictionary<string, object> DutyPayment { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: >-
      <JsonProperty("duty_payment")>

      Public Property DutyPayment As Dictionary(Of String, Object)
  overload: EasyPost.Models.API.Options.DutyPayment*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: duty_payment
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.DutyPaymentAccount
  commentId: P:EasyPost.Models.API.Options.DutyPaymentAccount
  id: DutyPaymentAccount
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: DutyPaymentAccount
  nameWithType: Options.DutyPaymentAccount
  fullName: EasyPost.Models.API.Options.DutyPaymentAccount
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: DutyPaymentAccount
    path: Models/API/Options.cs
    startLine: 85
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("duty_payment_account")]

      public string DutyPaymentAccount { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("duty_payment_account")>

      Public Property DutyPaymentAccount As String
  overload: EasyPost.Models.API.Options.DutyPaymentAccount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: duty_payment_account
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.Endorsement
  commentId: P:EasyPost.Models.API.Options.Endorsement
  id: Endorsement
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: Endorsement
  nameWithType: Options.Endorsement
  fullName: EasyPost.Models.API.Options.Endorsement
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Endorsement
    path: Models/API/Options.cs
    startLine: 87
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("endorsement")]

      public string Endorsement { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("endorsement")>

      Public Property Endorsement As String
  overload: EasyPost.Models.API.Options.Endorsement*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: endorsement
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.EndShipperId
  commentId: P:EasyPost.Models.API.Options.EndShipperId
  id: EndShipperId
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: EndShipperId
  nameWithType: Options.EndShipperId
  fullName: EasyPost.Models.API.Options.EndShipperId
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: EndShipperId
    path: Models/API/Options.cs
    startLine: 89
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("end_shipper_id")]

      public string EndShipperId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("end_shipper_id")>

      Public Property EndShipperId As String
  overload: EasyPost.Models.API.Options.EndShipperId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: end_shipper_id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.FreightCharge
  commentId: P:EasyPost.Models.API.Options.FreightCharge
  id: FreightCharge
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: FreightCharge
  nameWithType: Options.FreightCharge
  fullName: EasyPost.Models.API.Options.FreightCharge
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: FreightCharge
    path: Models/API/Options.cs
    startLine: 91
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("freight_charge")]

      public string FreightCharge { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("freight_charge")>

      Public Property FreightCharge As String
  overload: EasyPost.Models.API.Options.FreightCharge*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: freight_charge
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.Group
  commentId: P:EasyPost.Models.API.Options.Group
  id: Group
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: Options.Group
  fullName: EasyPost.Models.API.Options.Group
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Group
    path: Models/API/Options.cs
    startLine: 93
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("group")]

      public string Group { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("group")>

      Public Property Group As String
  overload: EasyPost.Models.API.Options.Group*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: group
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.HandlingInstructions
  commentId: P:EasyPost.Models.API.Options.HandlingInstructions
  id: HandlingInstructions
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: HandlingInstructions
  nameWithType: Options.HandlingInstructions
  fullName: EasyPost.Models.API.Options.HandlingInstructions
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: HandlingInstructions
    path: Models/API/Options.cs
    startLine: 95
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("handling_instructions")]

      public string HandlingInstructions { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("handling_instructions")>

      Public Property HandlingInstructions As String
  overload: EasyPost.Models.API.Options.HandlingInstructions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: handling_instructions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.Hazmat
  commentId: P:EasyPost.Models.API.Options.Hazmat
  id: Hazmat
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: Hazmat
  nameWithType: Options.Hazmat
  fullName: EasyPost.Models.API.Options.Hazmat
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Hazmat
    path: Models/API/Options.cs
    startLine: 97
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("hazmat")]

      public string Hazmat { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("hazmat")>

      Public Property Hazmat As String
  overload: EasyPost.Models.API.Options.Hazmat*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: hazmat
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.HoldForPickup
  commentId: P:EasyPost.Models.API.Options.HoldForPickup
  id: HoldForPickup
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: HoldForPickup
  nameWithType: Options.HoldForPickup
  fullName: EasyPost.Models.API.Options.HoldForPickup
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: HoldForPickup
    path: Models/API/Options.cs
    startLine: 99
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("hold_for_pickup")]

      public bool? HoldForPickup { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("hold_for_pickup")>

      Public Property HoldForPickup As Boolean?
  overload: EasyPost.Models.API.Options.HoldForPickup*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: hold_for_pickup
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.ImageFormat
  commentId: P:EasyPost.Models.API.Options.ImageFormat
  id: ImageFormat
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: ImageFormat
  nameWithType: Options.ImageFormat
  fullName: EasyPost.Models.API.Options.ImageFormat
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ImageFormat
    path: Models/API/Options.cs
    startLine: 101
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("image_format")]

      public string ImageFormat { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("image_format")>

      Public Property ImageFormat As String
  overload: EasyPost.Models.API.Options.ImageFormat*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: image_format
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.ImporterAddressId
  commentId: P:EasyPost.Models.API.Options.ImporterAddressId
  id: ImporterAddressId
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: ImporterAddressId
  nameWithType: Options.ImporterAddressId
  fullName: EasyPost.Models.API.Options.ImporterAddressId
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ImporterAddressId
    path: Models/API/Options.cs
    startLine: 103
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("importer_address_id")]

      public string ImporterAddressId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("importer_address_id")>

      Public Property ImporterAddressId As String
  overload: EasyPost.Models.API.Options.ImporterAddressId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: importer_address_id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.ImportFederalTaxId
  commentId: P:EasyPost.Models.API.Options.ImportFederalTaxId
  id: ImportFederalTaxId
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: ImportFederalTaxId
  nameWithType: Options.ImportFederalTaxId
  fullName: EasyPost.Models.API.Options.ImportFederalTaxId
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ImportFederalTaxId
    path: Models/API/Options.cs
    startLine: 105
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("import_federal_tax_id")]

      public string ImportFederalTaxId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("import_federal_tax_id")>

      Public Property ImportFederalTaxId As String
  overload: EasyPost.Models.API.Options.ImportFederalTaxId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: import_federal_tax_id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.ImportStateTaxId
  commentId: P:EasyPost.Models.API.Options.ImportStateTaxId
  id: ImportStateTaxId
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: ImportStateTaxId
  nameWithType: Options.ImportStateTaxId
  fullName: EasyPost.Models.API.Options.ImportStateTaxId
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ImportStateTaxId
    path: Models/API/Options.cs
    startLine: 107
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("import_state_tax_id")]

      public string ImportStateTaxId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("import_state_tax_id")>

      Public Property ImportStateTaxId As String
  overload: EasyPost.Models.API.Options.ImportStateTaxId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: import_state_tax_id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.Incoterm
  commentId: P:EasyPost.Models.API.Options.Incoterm
  id: Incoterm
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: Incoterm
  nameWithType: Options.Incoterm
  fullName: EasyPost.Models.API.Options.Incoterm
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Incoterm
    path: Models/API/Options.cs
    startLine: 109
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("incoterm")]

      public string Incoterm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("incoterm")>

      Public Property Incoterm As String
  overload: EasyPost.Models.API.Options.Incoterm*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: incoterm
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.InvoiceNumber
  commentId: P:EasyPost.Models.API.Options.InvoiceNumber
  id: InvoiceNumber
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: InvoiceNumber
  nameWithType: Options.InvoiceNumber
  fullName: EasyPost.Models.API.Options.InvoiceNumber
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: InvoiceNumber
    path: Models/API/Options.cs
    startLine: 111
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("invoice_number")]

      public string InvoiceNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("invoice_number")>

      Public Property InvoiceNumber As String
  overload: EasyPost.Models.API.Options.InvoiceNumber*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: invoice_number
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.LabelDate
  commentId: P:EasyPost.Models.API.Options.LabelDate
  id: LabelDate
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: LabelDate
  nameWithType: Options.LabelDate
  fullName: EasyPost.Models.API.Options.LabelDate
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: LabelDate
    path: Models/API/Options.cs
    startLine: 113
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("label_date")]

      public DateTime? LabelDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("label_date")>

      Public Property LabelDate As Date?
  overload: EasyPost.Models.API.Options.LabelDate*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: label_date
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.LabelFormat
  commentId: P:EasyPost.Models.API.Options.LabelFormat
  id: LabelFormat
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: LabelFormat
  nameWithType: Options.LabelFormat
  fullName: EasyPost.Models.API.Options.LabelFormat
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: LabelFormat
    path: Models/API/Options.cs
    startLine: 115
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("label_format")]

      public string LabelFormat { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("label_format")>

      Public Property LabelFormat As String
  overload: EasyPost.Models.API.Options.LabelFormat*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: label_format
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.LabelSize
  commentId: P:EasyPost.Models.API.Options.LabelSize
  id: LabelSize
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: LabelSize
  nameWithType: Options.LabelSize
  fullName: EasyPost.Models.API.Options.LabelSize
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: LabelSize
    path: Models/API/Options.cs
    startLine: 117
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("label_size")]

      public string LabelSize { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("label_size")>

      Public Property LabelSize As String
  overload: EasyPost.Models.API.Options.LabelSize*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: label_size
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.LicenseNumber
  commentId: P:EasyPost.Models.API.Options.LicenseNumber
  id: LicenseNumber
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: LicenseNumber
  nameWithType: Options.LicenseNumber
  fullName: EasyPost.Models.API.Options.LicenseNumber
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: LicenseNumber
    path: Models/API/Options.cs
    startLine: 119
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("license_number")]

      public string LicenseNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("license_number")>

      Public Property LicenseNumber As String
  overload: EasyPost.Models.API.Options.LicenseNumber*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: license_number
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.Machinable
  commentId: P:EasyPost.Models.API.Options.Machinable
  id: Machinable
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: Machinable
  nameWithType: Options.Machinable
  fullName: EasyPost.Models.API.Options.Machinable
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Machinable
    path: Models/API/Options.cs
    startLine: 121
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("machinable")]

      public string Machinable { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("machinable")>

      Public Property Machinable As String
  overload: EasyPost.Models.API.Options.Machinable*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: machinable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.NeutralDelivery
  commentId: P:EasyPost.Models.API.Options.NeutralDelivery
  id: NeutralDelivery
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: NeutralDelivery
  nameWithType: Options.NeutralDelivery
  fullName: EasyPost.Models.API.Options.NeutralDelivery
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: NeutralDelivery
    path: Models/API/Options.cs
    startLine: 123
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("neutral_delivery")]

      public bool? NeutralDelivery { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("neutral_delivery")>

      Public Property NeutralDelivery As Boolean?
  overload: EasyPost.Models.API.Options.NeutralDelivery*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: neutral_delivery
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.NonContract
  commentId: P:EasyPost.Models.API.Options.NonContract
  id: NonContract
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: NonContract
  nameWithType: Options.NonContract
  fullName: EasyPost.Models.API.Options.NonContract
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: NonContract
    path: Models/API/Options.cs
    startLine: 125
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("non_contact")]

      public bool? NonContract { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("non_contact")>

      Public Property NonContract As Boolean?
  overload: EasyPost.Models.API.Options.NonContract*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: non_contact
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.OverlabelConstructCode
  commentId: P:EasyPost.Models.API.Options.OverlabelConstructCode
  id: OverlabelConstructCode
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: OverlabelConstructCode
  nameWithType: Options.OverlabelConstructCode
  fullName: EasyPost.Models.API.Options.OverlabelConstructCode
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: OverlabelConstructCode
    path: Models/API/Options.cs
    startLine: 127
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("overlabel_construct_code")]

      public string OverlabelConstructCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("overlabel_construct_code")>

      Public Property OverlabelConstructCode As String
  overload: EasyPost.Models.API.Options.OverlabelConstructCode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: overlabel_construct_code
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.OverlabelOriginalTrackingNumber
  commentId: P:EasyPost.Models.API.Options.OverlabelOriginalTrackingNumber
  id: OverlabelOriginalTrackingNumber
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: OverlabelOriginalTrackingNumber
  nameWithType: Options.OverlabelOriginalTrackingNumber
  fullName: EasyPost.Models.API.Options.OverlabelOriginalTrackingNumber
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: OverlabelOriginalTrackingNumber
    path: Models/API/Options.cs
    startLine: 129
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("overlabel_construct_tracking_number")]

      public string OverlabelOriginalTrackingNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("overlabel_construct_tracking_number")>

      Public Property OverlabelOriginalTrackingNumber As String
  overload: EasyPost.Models.API.Options.OverlabelOriginalTrackingNumber*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: overlabel_construct_tracking_number
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PartiesToTransactionAreRelated
  commentId: P:EasyPost.Models.API.Options.PartiesToTransactionAreRelated
  id: PartiesToTransactionAreRelated
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PartiesToTransactionAreRelated
  nameWithType: Options.PartiesToTransactionAreRelated
  fullName: EasyPost.Models.API.Options.PartiesToTransactionAreRelated
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PartiesToTransactionAreRelated
    path: Models/API/Options.cs
    startLine: 131
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("parties_to_transaction_are_related")]

      public string PartiesToTransactionAreRelated { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("parties_to_transaction_are_related")>

      Public Property PartiesToTransactionAreRelated As String
  overload: EasyPost.Models.API.Options.PartiesToTransactionAreRelated*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: parties_to_transaction_are_related
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.Payment
  commentId: P:EasyPost.Models.API.Options.Payment
  id: Payment
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: Payment
  nameWithType: Options.Payment
  fullName: EasyPost.Models.API.Options.Payment
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Payment
    path: Models/API/Options.cs
    startLine: 133
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("payment")]

      public Dictionary<string, object> Payment { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: >-
      <JsonProperty("payment")>

      Public Property Payment As Dictionary(Of String, Object)
  overload: EasyPost.Models.API.Options.Payment*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: payment
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PeelAndReturn
  commentId: P:EasyPost.Models.API.Options.PeelAndReturn
  id: PeelAndReturn
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PeelAndReturn
  nameWithType: Options.PeelAndReturn
  fullName: EasyPost.Models.API.Options.PeelAndReturn
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PeelAndReturn
    path: Models/API/Options.cs
    startLine: 135
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("peel_and_return")]

      public bool? PeelAndReturn { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("peel_and_return")>

      Public Property PeelAndReturn As Boolean?
  overload: EasyPost.Models.API.Options.PeelAndReturn*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: peel_and_return
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PickupMaxDatetime
  commentId: P:EasyPost.Models.API.Options.PickupMaxDatetime
  id: PickupMaxDatetime
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PickupMaxDatetime
  nameWithType: Options.PickupMaxDatetime
  fullName: EasyPost.Models.API.Options.PickupMaxDatetime
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PickupMaxDatetime
    path: Models/API/Options.cs
    startLine: 137
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("pickup_max_datetime")]

      public DateTime? PickupMaxDatetime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("pickup_max_datetime")>

      Public Property PickupMaxDatetime As Date?
  overload: EasyPost.Models.API.Options.PickupMaxDatetime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: pickup_max_datetime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PickupMinDatetime
  commentId: P:EasyPost.Models.API.Options.PickupMinDatetime
  id: PickupMinDatetime
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PickupMinDatetime
  nameWithType: Options.PickupMinDatetime
  fullName: EasyPost.Models.API.Options.PickupMinDatetime
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PickupMinDatetime
    path: Models/API/Options.cs
    startLine: 139
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("pickup_min_datetime")]

      public DateTime? PickupMinDatetime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("pickup_min_datetime")>

      Public Property PickupMinDatetime As Date?
  overload: EasyPost.Models.API.Options.PickupMinDatetime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: pickup_min_datetime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PoSort
  commentId: P:EasyPost.Models.API.Options.PoSort
  id: PoSort
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PoSort
  nameWithType: Options.PoSort
  fullName: EasyPost.Models.API.Options.PoSort
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PoSort
    path: Models/API/Options.cs
    startLine: 141
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("po_sort")]

      public string PoSort { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("po_sort")>

      Public Property PoSort As String
  overload: EasyPost.Models.API.Options.PoSort*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: po_sort
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PostageLabelInline
  commentId: P:EasyPost.Models.API.Options.PostageLabelInline
  id: PostageLabelInline
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PostageLabelInline
  nameWithType: Options.PostageLabelInline
  fullName: EasyPost.Models.API.Options.PostageLabelInline
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PostageLabelInline
    path: Models/API/Options.cs
    startLine: 143
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("postage_label_inline")]

      public bool? PostageLabelInline { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("postage_label_inline")>

      Public Property PostageLabelInline As Boolean?
  overload: EasyPost.Models.API.Options.PostageLabelInline*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: postage_label_inline
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PrintCustom
  commentId: P:EasyPost.Models.API.Options.PrintCustom
  id: PrintCustom
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PrintCustom
  nameWithType: Options.PrintCustom
  fullName: EasyPost.Models.API.Options.PrintCustom
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PrintCustom
    path: Models/API/Options.cs
    startLine: 145
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("print_custom")]

      public List<Dictionary<string, object>> PrintCustom { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
    content.vb: >-
      <JsonProperty("print_custom")>

      Public Property PrintCustom As List(Of Dictionary(Of String, Object))
  overload: EasyPost.Models.API.Options.PrintCustom*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: print_custom
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PrintCustom1
  commentId: P:EasyPost.Models.API.Options.PrintCustom1
  id: PrintCustom1
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PrintCustom1
  nameWithType: Options.PrintCustom1
  fullName: EasyPost.Models.API.Options.PrintCustom1
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PrintCustom1
    path: Models/API/Options.cs
    startLine: 147
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("print_custom_1")]

      public string PrintCustom1 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("print_custom_1")>

      Public Property PrintCustom1 As String
  overload: EasyPost.Models.API.Options.PrintCustom1*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: print_custom_1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PrintCustom1Barcode
  commentId: P:EasyPost.Models.API.Options.PrintCustom1Barcode
  id: PrintCustom1Barcode
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PrintCustom1Barcode
  nameWithType: Options.PrintCustom1Barcode
  fullName: EasyPost.Models.API.Options.PrintCustom1Barcode
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PrintCustom1Barcode
    path: Models/API/Options.cs
    startLine: 149
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("print_custom_1_barcode")]

      public bool? PrintCustom1Barcode { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("print_custom_1_barcode")>

      Public Property PrintCustom1Barcode As Boolean?
  overload: EasyPost.Models.API.Options.PrintCustom1Barcode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: print_custom_1_barcode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PrintCustom1Code
  commentId: P:EasyPost.Models.API.Options.PrintCustom1Code
  id: PrintCustom1Code
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PrintCustom1Code
  nameWithType: Options.PrintCustom1Code
  fullName: EasyPost.Models.API.Options.PrintCustom1Code
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PrintCustom1Code
    path: Models/API/Options.cs
    startLine: 151
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("print_custom_1_code")]

      public string PrintCustom1Code { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("print_custom_1_code")>

      Public Property PrintCustom1Code As String
  overload: EasyPost.Models.API.Options.PrintCustom1Code*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: print_custom_1_code
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PrintCustom2
  commentId: P:EasyPost.Models.API.Options.PrintCustom2
  id: PrintCustom2
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PrintCustom2
  nameWithType: Options.PrintCustom2
  fullName: EasyPost.Models.API.Options.PrintCustom2
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PrintCustom2
    path: Models/API/Options.cs
    startLine: 153
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("print_custom_2")]

      public string PrintCustom2 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("print_custom_2")>

      Public Property PrintCustom2 As String
  overload: EasyPost.Models.API.Options.PrintCustom2*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: print_custom_2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PrintCustom2Barcode
  commentId: P:EasyPost.Models.API.Options.PrintCustom2Barcode
  id: PrintCustom2Barcode
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PrintCustom2Barcode
  nameWithType: Options.PrintCustom2Barcode
  fullName: EasyPost.Models.API.Options.PrintCustom2Barcode
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PrintCustom2Barcode
    path: Models/API/Options.cs
    startLine: 155
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("print_custom_2_barcode")]

      public bool? PrintCustom2Barcode { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("print_custom_2_barcode")>

      Public Property PrintCustom2Barcode As Boolean?
  overload: EasyPost.Models.API.Options.PrintCustom2Barcode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: print_custom_2_barcode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PrintCustom2Code
  commentId: P:EasyPost.Models.API.Options.PrintCustom2Code
  id: PrintCustom2Code
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PrintCustom2Code
  nameWithType: Options.PrintCustom2Code
  fullName: EasyPost.Models.API.Options.PrintCustom2Code
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PrintCustom2Code
    path: Models/API/Options.cs
    startLine: 157
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("print_custom_2_code")]

      public string PrintCustom2Code { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("print_custom_2_code")>

      Public Property PrintCustom2Code As String
  overload: EasyPost.Models.API.Options.PrintCustom2Code*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: print_custom_2_code
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PrintCustom3
  commentId: P:EasyPost.Models.API.Options.PrintCustom3
  id: PrintCustom3
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PrintCustom3
  nameWithType: Options.PrintCustom3
  fullName: EasyPost.Models.API.Options.PrintCustom3
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PrintCustom3
    path: Models/API/Options.cs
    startLine: 159
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("print_custom_3")]

      public string PrintCustom3 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("print_custom_3")>

      Public Property PrintCustom3 As String
  overload: EasyPost.Models.API.Options.PrintCustom3*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: print_custom_3
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PrintCustom3Barcode
  commentId: P:EasyPost.Models.API.Options.PrintCustom3Barcode
  id: PrintCustom3Barcode
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PrintCustom3Barcode
  nameWithType: Options.PrintCustom3Barcode
  fullName: EasyPost.Models.API.Options.PrintCustom3Barcode
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PrintCustom3Barcode
    path: Models/API/Options.cs
    startLine: 161
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("print_custom_3_barcode")]

      public bool? PrintCustom3Barcode { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("print_custom_3_barcode")>

      Public Property PrintCustom3Barcode As Boolean?
  overload: EasyPost.Models.API.Options.PrintCustom3Barcode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: print_custom_3_barcode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PrintCustom3Code
  commentId: P:EasyPost.Models.API.Options.PrintCustom3Code
  id: PrintCustom3Code
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PrintCustom3Code
  nameWithType: Options.PrintCustom3Code
  fullName: EasyPost.Models.API.Options.PrintCustom3Code
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PrintCustom3Code
    path: Models/API/Options.cs
    startLine: 163
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("print_custom_3_code")]

      public string PrintCustom3Code { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("print_custom_3_code")>

      Public Property PrintCustom3Code As String
  overload: EasyPost.Models.API.Options.PrintCustom3Code*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: print_custom_3_code
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.PrintRate
  commentId: P:EasyPost.Models.API.Options.PrintRate
  id: PrintRate
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: PrintRate
  nameWithType: Options.PrintRate
  fullName: EasyPost.Models.API.Options.PrintRate
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PrintRate
    path: Models/API/Options.cs
    startLine: 165
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("print_rate")]

      public bool? PrintRate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("print_rate")>

      Public Property PrintRate As Boolean?
  overload: EasyPost.Models.API.Options.PrintRate*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: print_rate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.ReceiverLiquorLicense
  commentId: P:EasyPost.Models.API.Options.ReceiverLiquorLicense
  id: ReceiverLiquorLicense
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: ReceiverLiquorLicense
  nameWithType: Options.ReceiverLiquorLicense
  fullName: EasyPost.Models.API.Options.ReceiverLiquorLicense
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ReceiverLiquorLicense
    path: Models/API/Options.cs
    startLine: 167
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("receiver_liquor_license")]

      public string ReceiverLiquorLicense { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("receiver_liquor_license")>

      Public Property ReceiverLiquorLicense As String
  overload: EasyPost.Models.API.Options.ReceiverLiquorLicense*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: receiver_liquor_license
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.RegisteredMail
  commentId: P:EasyPost.Models.API.Options.RegisteredMail
  id: RegisteredMail
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: RegisteredMail
  nameWithType: Options.RegisteredMail
  fullName: EasyPost.Models.API.Options.RegisteredMail
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: RegisteredMail
    path: Models/API/Options.cs
    startLine: 169
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("registered_mail")]

      public bool? RegisteredMail { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("registered_mail")>

      Public Property RegisteredMail As Boolean?
  overload: EasyPost.Models.API.Options.RegisteredMail*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: registered_mail
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.RegisteredMailAmount
  commentId: P:EasyPost.Models.API.Options.RegisteredMailAmount
  id: RegisteredMailAmount
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: RegisteredMailAmount
  nameWithType: Options.RegisteredMailAmount
  fullName: EasyPost.Models.API.Options.RegisteredMailAmount
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: RegisteredMailAmount
    path: Models/API/Options.cs
    startLine: 171
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("registered_mail_amount")]

      public double? RegisteredMailAmount { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("registered_mail_amount")>

      Public Property RegisteredMailAmount As Double?
  overload: EasyPost.Models.API.Options.RegisteredMailAmount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: registered_mail_amount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.ReturnReceipt
  commentId: P:EasyPost.Models.API.Options.ReturnReceipt
  id: ReturnReceipt
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: ReturnReceipt
  nameWithType: Options.ReturnReceipt
  fullName: EasyPost.Models.API.Options.ReturnReceipt
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ReturnReceipt
    path: Models/API/Options.cs
    startLine: 173
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("return_receipt")]

      public bool? ReturnReceipt { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("return_receipt")>

      Public Property ReturnReceipt As Boolean?
  overload: EasyPost.Models.API.Options.ReturnReceipt*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: return_receipt
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.ReturnService
  commentId: P:EasyPost.Models.API.Options.ReturnService
  id: ReturnService
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: ReturnService
  nameWithType: Options.ReturnService
  fullName: EasyPost.Models.API.Options.ReturnService
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ReturnService
    path: Models/API/Options.cs
    startLine: 175
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("return_service")]

      public string ReturnService { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("return_service")>

      Public Property ReturnService As String
  overload: EasyPost.Models.API.Options.ReturnService*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: return_service
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.SaturdayDelivery
  commentId: P:EasyPost.Models.API.Options.SaturdayDelivery
  id: SaturdayDelivery
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: SaturdayDelivery
  nameWithType: Options.SaturdayDelivery
  fullName: EasyPost.Models.API.Options.SaturdayDelivery
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: SaturdayDelivery
    path: Models/API/Options.cs
    startLine: 177
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("saturday_delivery")]

      public bool? SaturdayDelivery { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("saturday_delivery")>

      Public Property SaturdayDelivery As Boolean?
  overload: EasyPost.Models.API.Options.SaturdayDelivery*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: saturday_delivery
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.SettlementMethod
  commentId: P:EasyPost.Models.API.Options.SettlementMethod
  id: SettlementMethod
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: SettlementMethod
  nameWithType: Options.SettlementMethod
  fullName: EasyPost.Models.API.Options.SettlementMethod
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: SettlementMethod
    path: Models/API/Options.cs
    startLine: 179
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("settlement_method")]

      public string SettlementMethod { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("settlement_method")>

      Public Property SettlementMethod As String
  overload: EasyPost.Models.API.Options.SettlementMethod*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: settlement_method
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.SmartpostHub
  commentId: P:EasyPost.Models.API.Options.SmartpostHub
  id: SmartpostHub
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: SmartpostHub
  nameWithType: Options.SmartpostHub
  fullName: EasyPost.Models.API.Options.SmartpostHub
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: SmartpostHub
    path: Models/API/Options.cs
    startLine: 181
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("smartpost_hub")]

      public string SmartpostHub { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("smartpost_hub")>

      Public Property SmartpostHub As String
  overload: EasyPost.Models.API.Options.SmartpostHub*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: smartpost_hub
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.SmartpostManifest
  commentId: P:EasyPost.Models.API.Options.SmartpostManifest
  id: SmartpostManifest
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: SmartpostManifest
  nameWithType: Options.SmartpostManifest
  fullName: EasyPost.Models.API.Options.SmartpostManifest
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: SmartpostManifest
    path: Models/API/Options.cs
    startLine: 183
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("smartpost_manifest")]

      public string SmartpostManifest { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("smartpost_manifest")>

      Public Property SmartpostManifest As String
  overload: EasyPost.Models.API.Options.SmartpostManifest*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: smartpost_manifest
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.SpecialRatesEligibility
  commentId: P:EasyPost.Models.API.Options.SpecialRatesEligibility
  id: SpecialRatesEligibility
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: SpecialRatesEligibility
  nameWithType: Options.SpecialRatesEligibility
  fullName: EasyPost.Models.API.Options.SpecialRatesEligibility
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: SpecialRatesEligibility
    path: Models/API/Options.cs
    startLine: 185
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("special_rates_eligibility")]

      public string SpecialRatesEligibility { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("special_rates_eligibility")>

      Public Property SpecialRatesEligibility As String
  overload: EasyPost.Models.API.Options.SpecialRatesEligibility*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: special_rates_eligibility
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.API.Options.SuppressEtd
  commentId: P:EasyPost.Models.API.Options.SuppressEtd
  id: SuppressEtd
  parent: EasyPost.Models.API.Options
  langs:
  - csharp
  - vb
  name: SuppressEtd
  nameWithType: Options.SuppressEtd
  fullName: EasyPost.Models.API.Options.SuppressEtd
  type: Property
  source:
    remote:
      path: EasyPost/Models/API/Options.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: SuppressEtd
    path: Models/API/Options.cs
    startLine: 187
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: >-
      [JsonProperty("suppress_etd")]

      public bool? SuppressEtd { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("suppress_etd")>

      Public Property SuppressEtd As Boolean?
  overload: EasyPost.Models.API.Options.SuppressEtd*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: suppress_etd
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EasyPost.Models.API
  commentId: N:EasyPost.Models.API
  name: EasyPost.Models.API
  nameWithType: EasyPost.Models.API
  fullName: EasyPost.Models.API
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EasyPost._base.WithClient
  commentId: T:EasyPost._base.WithClient
  parent: EasyPost._base
  name: WithClient
  nameWithType: WithClient
  fullName: EasyPost._base.WithClient
- uid: EasyPost._base.EasyPostObject
  commentId: T:EasyPost._base.EasyPostObject
  parent: EasyPost._base
  name: EasyPostObject
  nameWithType: EasyPostObject
  fullName: EasyPost._base.EasyPostObject
- uid: EasyPost._base.IEasyPostObject
  commentId: T:EasyPost._base.IEasyPostObject
  parent: EasyPost._base
  name: IEasyPostObject
  nameWithType: IEasyPostObject
  fullName: EasyPost._base.IEasyPostObject
- uid: EasyPost._base.EasyPostObject.CreatedAt
  commentId: P:EasyPost._base.EasyPostObject.CreatedAt
  parent: EasyPost._base.EasyPostObject
  name: CreatedAt
  nameWithType: EasyPostObject.CreatedAt
  fullName: EasyPost._base.EasyPostObject.CreatedAt
- uid: EasyPost._base.EasyPostObject.Id
  commentId: P:EasyPost._base.EasyPostObject.Id
  parent: EasyPost._base.EasyPostObject
  name: Id
  nameWithType: EasyPostObject.Id
  fullName: EasyPost._base.EasyPostObject.Id
- uid: EasyPost._base.EasyPostObject.Mode
  commentId: P:EasyPost._base.EasyPostObject.Mode
  parent: EasyPost._base.EasyPostObject
  name: Mode
  nameWithType: EasyPostObject.Mode
  fullName: EasyPost._base.EasyPostObject.Mode
- uid: EasyPost._base.EasyPostObject.UpdatedAt
  commentId: P:EasyPost._base.EasyPostObject.UpdatedAt
  parent: EasyPost._base.EasyPostObject
  name: UpdatedAt
  nameWithType: EasyPostObject.UpdatedAt
  fullName: EasyPost._base.EasyPostObject.UpdatedAt
- uid: EasyPost._base.EasyPostObject.Equals(System.Object)
  commentId: M:EasyPost._base.EasyPostObject.Equals(System.Object)
  parent: EasyPost._base.EasyPostObject
  isExternal: true
  name: Equals(Object)
  nameWithType: EasyPostObject.Equals(Object)
  fullName: EasyPost._base.EasyPostObject.Equals(System.Object)
  spec.csharp:
  - uid: EasyPost._base.EasyPostObject.Equals(System.Object)
    name: Equals
    nameWithType: EasyPostObject.Equals
    fullName: EasyPost._base.EasyPostObject.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostObject.Equals(System.Object)
    name: Equals
    nameWithType: EasyPostObject.Equals
    fullName: EasyPost._base.EasyPostObject.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.EasyPostObject.GetHashCode
  commentId: M:EasyPost._base.EasyPostObject.GetHashCode
  parent: EasyPost._base.EasyPostObject
  name: GetHashCode()
  nameWithType: EasyPostObject.GetHashCode()
  fullName: EasyPost._base.EasyPostObject.GetHashCode()
  spec.csharp:
  - uid: EasyPost._base.EasyPostObject.GetHashCode
    name: GetHashCode
    nameWithType: EasyPostObject.GetHashCode
    fullName: EasyPost._base.EasyPostObject.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostObject.GetHashCode
    name: GetHashCode
    nameWithType: EasyPostObject.GetHashCode
    fullName: EasyPost._base.EasyPostObject.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.EasyPostObject
  isExternal: true
  name: Update<T>(Method, String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: EasyPostObject.Update<T>(Method, String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.EasyPostObject.Update<T>(RestSharp.Method, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: EasyPostObject.Update(Of T)(Method, String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.EasyPostObject.Update(Of T)(RestSharp.Method, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Update(Of T)(Method, String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Update<T>
    nameWithType: EasyPostObject.Update<T>
    fullName: EasyPost._base.EasyPostObject.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Update(Of T)
    nameWithType: EasyPostObject.Update(Of T)
    fullName: EasyPost._base.EasyPostObject.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Create<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Create<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Create<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Create(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Create(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Create(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Create<T>
    nameWithType: WithClient.Create<T>
    fullName: EasyPost._base.WithClient.Create<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Create(Of T)
    nameWithType: WithClient.Create(Of T)
    fullName: EasyPost._base.WithClient.Create(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: CreateNoResponse(String, Dictionary<String, Object>, ApiVersion)
  nameWithType: WithClient.CreateNoResponse(String, Dictionary<String, Object>, ApiVersion)
  fullName: EasyPost._base.WithClient.CreateNoResponse(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.CreateNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  fullName.vb: EasyPost._base.WithClient.CreateNoResponse(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), EasyPost._base.ApiVersion)
  name.vb: CreateNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: CreateNoResponse
    nameWithType: WithClient.CreateNoResponse
    fullName: EasyPost._base.WithClient.CreateNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: CreateNoResponse
    nameWithType: WithClient.CreateNoResponse
    fullName: EasyPost._base.WithClient.CreateNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Delete<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Delete<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Delete<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Delete(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Delete(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Delete(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Delete<T>
    nameWithType: WithClient.Delete<T>
    fullName: EasyPost._base.WithClient.Delete<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Delete(Of T)
    nameWithType: WithClient.Delete(Of T)
    fullName: EasyPost._base.WithClient.Delete(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: DeleteNoResponse(String, Dictionary<String, Object>, ApiVersion)
  nameWithType: WithClient.DeleteNoResponse(String, Dictionary<String, Object>, ApiVersion)
  fullName: EasyPost._base.WithClient.DeleteNoResponse(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.DeleteNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  fullName.vb: EasyPost._base.WithClient.DeleteNoResponse(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), EasyPost._base.ApiVersion)
  name.vb: DeleteNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: DeleteNoResponse
    nameWithType: WithClient.DeleteNoResponse
    fullName: EasyPost._base.WithClient.DeleteNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: DeleteNoResponse
    nameWithType: WithClient.DeleteNoResponse
    fullName: EasyPost._base.WithClient.DeleteNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Get<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Get<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Get<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Get(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Get(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Get(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Get<T>
    nameWithType: WithClient.Get<T>
    fullName: EasyPost._base.WithClient.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Get(Of T)
    nameWithType: WithClient.Get(Of T)
    fullName: EasyPost._base.WithClient.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: List<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.List<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.List<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.List(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.List(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: List(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: List<T>
    nameWithType: WithClient.List<T>
    fullName: EasyPost._base.WithClient.List<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: List(Of T)
    nameWithType: WithClient.List(Of T)
    fullName: EasyPost._base.WithClient.List(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Request<T>(Method, String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Request<T>(Method, String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Request<T>(RestSharp.Method, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Request(Of T)(Method, String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Request(Of T)(RestSharp.Method, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Request(Of T)(Method, String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Request<T>
    nameWithType: WithClient.Request<T>
    fullName: EasyPost._base.WithClient.Request<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Request(Of T)
    nameWithType: WithClient.Request(Of T)
    fullName: EasyPost._base.WithClient.Request(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Request(Method, String, Dictionary<String, Object>, ApiVersion)
  nameWithType: WithClient.Request(Method, String, Dictionary<String, Object>, ApiVersion)
  fullName: EasyPost._base.WithClient.Request(RestSharp.Method, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Request(Method, String, Dictionary(Of String, Object), ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Request(RestSharp.Method, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), EasyPost._base.ApiVersion)
  name.vb: Request(Method, String, Dictionary(Of String, Object), ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: Request
    nameWithType: WithClient.Request
    fullName: EasyPost._base.WithClient.Request
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: Request
    nameWithType: WithClient.Request
    fullName: EasyPost._base.WithClient.Request
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Update<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Update<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Update<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Update(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Update(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Update(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Update<T>
    nameWithType: WithClient.Update<T>
    fullName: EasyPost._base.WithClient.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Update(Of T)
    nameWithType: WithClient.Update(Of T)
    fullName: EasyPost._base.WithClient.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: UpdateNoResponse(String, Dictionary<String, Object>, ApiVersion)
  nameWithType: WithClient.UpdateNoResponse(String, Dictionary<String, Object>, ApiVersion)
  fullName: EasyPost._base.WithClient.UpdateNoResponse(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.UpdateNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  fullName.vb: EasyPost._base.WithClient.UpdateNoResponse(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), EasyPost._base.ApiVersion)
  name.vb: UpdateNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: UpdateNoResponse
    nameWithType: WithClient.UpdateNoResponse
    fullName: EasyPost._base.WithClient.UpdateNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: UpdateNoResponse
    nameWithType: WithClient.UpdateNoResponse
    fullName: EasyPost._base.WithClient.UpdateNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasyPost._base
  commentId: N:EasyPost._base
  name: EasyPost._base
  nameWithType: EasyPost._base
  fullName: EasyPost._base
- uid: EasyPost.Models.API.Options.AdditionalHandling*
  commentId: Overload:EasyPost.Models.API.Options.AdditionalHandling
  name: AdditionalHandling
  nameWithType: Options.AdditionalHandling
  fullName: EasyPost.Models.API.Options.AdditionalHandling
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Models.API.Options.AddressValidationLevel*
  commentId: Overload:EasyPost.Models.API.Options.AddressValidationLevel
  name: AddressValidationLevel
  nameWithType: Options.AddressValidationLevel
  fullName: EasyPost.Models.API.Options.AddressValidationLevel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EasyPost.Models.API.Options.Alcohol*
  commentId: Overload:EasyPost.Models.API.Options.Alcohol
  name: Alcohol
  nameWithType: Options.Alcohol
  fullName: EasyPost.Models.API.Options.Alcohol
- uid: EasyPost.Models.API.Options.BillingRef*
  commentId: Overload:EasyPost.Models.API.Options.BillingRef
  name: BillingRef
  nameWithType: Options.BillingRef
  fullName: EasyPost.Models.API.Options.BillingRef
- uid: EasyPost.Models.API.Options.BillReceiverAccount*
  commentId: Overload:EasyPost.Models.API.Options.BillReceiverAccount
  name: BillReceiverAccount
  nameWithType: Options.BillReceiverAccount
  fullName: EasyPost.Models.API.Options.BillReceiverAccount
- uid: EasyPost.Models.API.Options.BillReceiverPostalCode*
  commentId: Overload:EasyPost.Models.API.Options.BillReceiverPostalCode
  name: BillReceiverPostalCode
  nameWithType: Options.BillReceiverPostalCode
  fullName: EasyPost.Models.API.Options.BillReceiverPostalCode
- uid: EasyPost.Models.API.Options.BillThirdPartyAccount*
  commentId: Overload:EasyPost.Models.API.Options.BillThirdPartyAccount
  name: BillThirdPartyAccount
  nameWithType: Options.BillThirdPartyAccount
  fullName: EasyPost.Models.API.Options.BillThirdPartyAccount
- uid: EasyPost.Models.API.Options.BillThirdPartyCountry*
  commentId: Overload:EasyPost.Models.API.Options.BillThirdPartyCountry
  name: BillThirdPartyCountry
  nameWithType: Options.BillThirdPartyCountry
  fullName: EasyPost.Models.API.Options.BillThirdPartyCountry
- uid: EasyPost.Models.API.Options.BillThirdPartyPostalCode*
  commentId: Overload:EasyPost.Models.API.Options.BillThirdPartyPostalCode
  name: BillThirdPartyPostalCode
  nameWithType: Options.BillThirdPartyPostalCode
  fullName: EasyPost.Models.API.Options.BillThirdPartyPostalCode
- uid: EasyPost.Models.API.Options.ByDrone*
  commentId: Overload:EasyPost.Models.API.Options.ByDrone
  name: ByDrone
  nameWithType: Options.ByDrone
  fullName: EasyPost.Models.API.Options.ByDrone
- uid: EasyPost.Models.API.Options.CarbonNeutral*
  commentId: Overload:EasyPost.Models.API.Options.CarbonNeutral
  name: CarbonNeutral
  nameWithType: Options.CarbonNeutral
  fullName: EasyPost.Models.API.Options.CarbonNeutral
- uid: EasyPost.Models.API.Options.CarrierInsuranceAmount*
  commentId: Overload:EasyPost.Models.API.Options.CarrierInsuranceAmount
  name: CarrierInsuranceAmount
  nameWithType: Options.CarrierInsuranceAmount
  fullName: EasyPost.Models.API.Options.CarrierInsuranceAmount
- uid: EasyPost.Models.API.Options.CarrierNotificationEmail*
  commentId: Overload:EasyPost.Models.API.Options.CarrierNotificationEmail
  name: CarrierNotificationEmail
  nameWithType: Options.CarrierNotificationEmail
  fullName: EasyPost.Models.API.Options.CarrierNotificationEmail
- uid: EasyPost.Models.API.Options.CarrierNotificationSms*
  commentId: Overload:EasyPost.Models.API.Options.CarrierNotificationSms
  name: CarrierNotificationSms
  nameWithType: Options.CarrierNotificationSms
  fullName: EasyPost.Models.API.Options.CarrierNotificationSms
- uid: EasyPost.Models.API.Options.CertifiedMail*
  commentId: Overload:EasyPost.Models.API.Options.CertifiedMail
  name: CertifiedMail
  nameWithType: Options.CertifiedMail
  fullName: EasyPost.Models.API.Options.CertifiedMail
- uid: EasyPost.Models.API.Options.CodAddressId*
  commentId: Overload:EasyPost.Models.API.Options.CodAddressId
  name: CodAddressId
  nameWithType: Options.CodAddressId
  fullName: EasyPost.Models.API.Options.CodAddressId
- uid: EasyPost.Models.API.Options.CodAmount*
  commentId: Overload:EasyPost.Models.API.Options.CodAmount
  name: CodAmount
  nameWithType: Options.CodAmount
  fullName: EasyPost.Models.API.Options.CodAmount
- uid: EasyPost.Models.API.Options.CodMethod*
  commentId: Overload:EasyPost.Models.API.Options.CodMethod
  name: CodMethod
  nameWithType: Options.CodMethod
  fullName: EasyPost.Models.API.Options.CodMethod
- uid: EasyPost.Models.API.Options.CommercialInvoiceFormat*
  commentId: Overload:EasyPost.Models.API.Options.CommercialInvoiceFormat
  name: CommercialInvoiceFormat
  nameWithType: Options.CommercialInvoiceFormat
  fullName: EasyPost.Models.API.Options.CommercialInvoiceFormat
- uid: EasyPost.Models.API.Options.CommercialInvoiceLetterhead*
  commentId: Overload:EasyPost.Models.API.Options.CommercialInvoiceLetterhead
  name: CommercialInvoiceLetterhead
  nameWithType: Options.CommercialInvoiceLetterhead
  fullName: EasyPost.Models.API.Options.CommercialInvoiceLetterhead
- uid: EasyPost.Models.API.Options.CommercialInvoiceSignature*
  commentId: Overload:EasyPost.Models.API.Options.CommercialInvoiceSignature
  name: CommercialInvoiceSignature
  nameWithType: Options.CommercialInvoiceSignature
  fullName: EasyPost.Models.API.Options.CommercialInvoiceSignature
- uid: EasyPost.Models.API.Options.CommercialInvoiceSize*
  commentId: Overload:EasyPost.Models.API.Options.CommercialInvoiceSize
  name: CommercialInvoiceSize
  nameWithType: Options.CommercialInvoiceSize
  fullName: EasyPost.Models.API.Options.CommercialInvoiceSize
- uid: EasyPost.Models.API.Options.CostCenter*
  commentId: Overload:EasyPost.Models.API.Options.CostCenter
  name: CostCenter
  nameWithType: Options.CostCenter
  fullName: EasyPost.Models.API.Options.CostCenter
- uid: EasyPost.Models.API.Options.Currency*
  commentId: Overload:EasyPost.Models.API.Options.Currency
  name: Currency
  nameWithType: Options.Currency
  fullName: EasyPost.Models.API.Options.Currency
- uid: EasyPost.Models.API.Options.CustomsBrokerAddressId*
  commentId: Overload:EasyPost.Models.API.Options.CustomsBrokerAddressId
  name: CustomsBrokerAddressId
  nameWithType: Options.CustomsBrokerAddressId
  fullName: EasyPost.Models.API.Options.CustomsBrokerAddressId
- uid: EasyPost.Models.API.Options.CustomsIncludeShipping*
  commentId: Overload:EasyPost.Models.API.Options.CustomsIncludeShipping
  name: CustomsIncludeShipping
  nameWithType: Options.CustomsIncludeShipping
  fullName: EasyPost.Models.API.Options.CustomsIncludeShipping
- uid: EasyPost.Models.API.Options.DeclaredValue*
  commentId: Overload:EasyPost.Models.API.Options.DeclaredValue
  name: DeclaredValue
  nameWithType: Options.DeclaredValue
  fullName: EasyPost.Models.API.Options.DeclaredValue
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Models.API.Options.DeliveredDutyPaid*
  commentId: Overload:EasyPost.Models.API.Options.DeliveredDutyPaid
  name: DeliveredDutyPaid
  nameWithType: Options.DeliveredDutyPaid
  fullName: EasyPost.Models.API.Options.DeliveredDutyPaid
- uid: EasyPost.Models.API.Options.DeliveryConfirmation*
  commentId: Overload:EasyPost.Models.API.Options.DeliveryConfirmation
  name: DeliveryConfirmation
  nameWithType: Options.DeliveryConfirmation
  fullName: EasyPost.Models.API.Options.DeliveryConfirmation
- uid: EasyPost.Models.API.Options.DeliveryTimePreference*
  commentId: Overload:EasyPost.Models.API.Options.DeliveryTimePreference
  name: DeliveryTimePreference
  nameWithType: Options.DeliveryTimePreference
  fullName: EasyPost.Models.API.Options.DeliveryTimePreference
- uid: EasyPost.Models.API.Options.DeliveryMaxDatetime*
  commentId: Overload:EasyPost.Models.API.Options.DeliveryMaxDatetime
  name: DeliveryMaxDatetime
  nameWithType: Options.DeliveryMaxDatetime
  fullName: EasyPost.Models.API.Options.DeliveryMaxDatetime
- uid: EasyPost.Models.API.Options.DropoffMaxDatetime*
  commentId: Overload:EasyPost.Models.API.Options.DropoffMaxDatetime
  name: DropoffMaxDatetime
  nameWithType: Options.DropoffMaxDatetime
  fullName: EasyPost.Models.API.Options.DropoffMaxDatetime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Models.API.Options.DropoffType*
  commentId: Overload:EasyPost.Models.API.Options.DropoffType
  name: DropoffType
  nameWithType: Options.DropoffType
  fullName: EasyPost.Models.API.Options.DropoffType
- uid: EasyPost.Models.API.Options.DryIce*
  commentId: Overload:EasyPost.Models.API.Options.DryIce
  name: DryIce
  nameWithType: Options.DryIce
  fullName: EasyPost.Models.API.Options.DryIce
- uid: EasyPost.Models.API.Options.DryIceMedical*
  commentId: Overload:EasyPost.Models.API.Options.DryIceMedical
  name: DryIceMedical
  nameWithType: Options.DryIceMedical
  fullName: EasyPost.Models.API.Options.DryIceMedical
- uid: EasyPost.Models.API.Options.DryIceWeight*
  commentId: Overload:EasyPost.Models.API.Options.DryIceWeight
  name: DryIceWeight
  nameWithType: Options.DryIceWeight
  fullName: EasyPost.Models.API.Options.DryIceWeight
- uid: EasyPost.Models.API.Options.DutyPayment*
  commentId: Overload:EasyPost.Models.API.Options.DutyPayment
  name: DutyPayment
  nameWithType: Options.DutyPayment
  fullName: EasyPost.Models.API.Options.DutyPayment
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EasyPost.Models.API.Options.DutyPaymentAccount*
  commentId: Overload:EasyPost.Models.API.Options.DutyPaymentAccount
  name: DutyPaymentAccount
  nameWithType: Options.DutyPaymentAccount
  fullName: EasyPost.Models.API.Options.DutyPaymentAccount
- uid: EasyPost.Models.API.Options.Endorsement*
  commentId: Overload:EasyPost.Models.API.Options.Endorsement
  name: Endorsement
  nameWithType: Options.Endorsement
  fullName: EasyPost.Models.API.Options.Endorsement
- uid: EasyPost.Models.API.Options.EndShipperId*
  commentId: Overload:EasyPost.Models.API.Options.EndShipperId
  name: EndShipperId
  nameWithType: Options.EndShipperId
  fullName: EasyPost.Models.API.Options.EndShipperId
- uid: EasyPost.Models.API.Options.FreightCharge*
  commentId: Overload:EasyPost.Models.API.Options.FreightCharge
  name: FreightCharge
  nameWithType: Options.FreightCharge
  fullName: EasyPost.Models.API.Options.FreightCharge
- uid: EasyPost.Models.API.Options.Group*
  commentId: Overload:EasyPost.Models.API.Options.Group
  name: Group
  nameWithType: Options.Group
  fullName: EasyPost.Models.API.Options.Group
- uid: EasyPost.Models.API.Options.HandlingInstructions*
  commentId: Overload:EasyPost.Models.API.Options.HandlingInstructions
  name: HandlingInstructions
  nameWithType: Options.HandlingInstructions
  fullName: EasyPost.Models.API.Options.HandlingInstructions
- uid: EasyPost.Models.API.Options.Hazmat*
  commentId: Overload:EasyPost.Models.API.Options.Hazmat
  name: Hazmat
  nameWithType: Options.Hazmat
  fullName: EasyPost.Models.API.Options.Hazmat
- uid: EasyPost.Models.API.Options.HoldForPickup*
  commentId: Overload:EasyPost.Models.API.Options.HoldForPickup
  name: HoldForPickup
  nameWithType: Options.HoldForPickup
  fullName: EasyPost.Models.API.Options.HoldForPickup
- uid: EasyPost.Models.API.Options.ImageFormat*
  commentId: Overload:EasyPost.Models.API.Options.ImageFormat
  name: ImageFormat
  nameWithType: Options.ImageFormat
  fullName: EasyPost.Models.API.Options.ImageFormat
- uid: EasyPost.Models.API.Options.ImporterAddressId*
  commentId: Overload:EasyPost.Models.API.Options.ImporterAddressId
  name: ImporterAddressId
  nameWithType: Options.ImporterAddressId
  fullName: EasyPost.Models.API.Options.ImporterAddressId
- uid: EasyPost.Models.API.Options.ImportFederalTaxId*
  commentId: Overload:EasyPost.Models.API.Options.ImportFederalTaxId
  name: ImportFederalTaxId
  nameWithType: Options.ImportFederalTaxId
  fullName: EasyPost.Models.API.Options.ImportFederalTaxId
- uid: EasyPost.Models.API.Options.ImportStateTaxId*
  commentId: Overload:EasyPost.Models.API.Options.ImportStateTaxId
  name: ImportStateTaxId
  nameWithType: Options.ImportStateTaxId
  fullName: EasyPost.Models.API.Options.ImportStateTaxId
- uid: EasyPost.Models.API.Options.Incoterm*
  commentId: Overload:EasyPost.Models.API.Options.Incoterm
  name: Incoterm
  nameWithType: Options.Incoterm
  fullName: EasyPost.Models.API.Options.Incoterm
- uid: EasyPost.Models.API.Options.InvoiceNumber*
  commentId: Overload:EasyPost.Models.API.Options.InvoiceNumber
  name: InvoiceNumber
  nameWithType: Options.InvoiceNumber
  fullName: EasyPost.Models.API.Options.InvoiceNumber
- uid: EasyPost.Models.API.Options.LabelDate*
  commentId: Overload:EasyPost.Models.API.Options.LabelDate
  name: LabelDate
  nameWithType: Options.LabelDate
  fullName: EasyPost.Models.API.Options.LabelDate
- uid: EasyPost.Models.API.Options.LabelFormat*
  commentId: Overload:EasyPost.Models.API.Options.LabelFormat
  name: LabelFormat
  nameWithType: Options.LabelFormat
  fullName: EasyPost.Models.API.Options.LabelFormat
- uid: EasyPost.Models.API.Options.LabelSize*
  commentId: Overload:EasyPost.Models.API.Options.LabelSize
  name: LabelSize
  nameWithType: Options.LabelSize
  fullName: EasyPost.Models.API.Options.LabelSize
- uid: EasyPost.Models.API.Options.LicenseNumber*
  commentId: Overload:EasyPost.Models.API.Options.LicenseNumber
  name: LicenseNumber
  nameWithType: Options.LicenseNumber
  fullName: EasyPost.Models.API.Options.LicenseNumber
- uid: EasyPost.Models.API.Options.Machinable*
  commentId: Overload:EasyPost.Models.API.Options.Machinable
  name: Machinable
  nameWithType: Options.Machinable
  fullName: EasyPost.Models.API.Options.Machinable
- uid: EasyPost.Models.API.Options.NeutralDelivery*
  commentId: Overload:EasyPost.Models.API.Options.NeutralDelivery
  name: NeutralDelivery
  nameWithType: Options.NeutralDelivery
  fullName: EasyPost.Models.API.Options.NeutralDelivery
- uid: EasyPost.Models.API.Options.NonContract*
  commentId: Overload:EasyPost.Models.API.Options.NonContract
  name: NonContract
  nameWithType: Options.NonContract
  fullName: EasyPost.Models.API.Options.NonContract
- uid: EasyPost.Models.API.Options.OverlabelConstructCode*
  commentId: Overload:EasyPost.Models.API.Options.OverlabelConstructCode
  name: OverlabelConstructCode
  nameWithType: Options.OverlabelConstructCode
  fullName: EasyPost.Models.API.Options.OverlabelConstructCode
- uid: EasyPost.Models.API.Options.OverlabelOriginalTrackingNumber*
  commentId: Overload:EasyPost.Models.API.Options.OverlabelOriginalTrackingNumber
  name: OverlabelOriginalTrackingNumber
  nameWithType: Options.OverlabelOriginalTrackingNumber
  fullName: EasyPost.Models.API.Options.OverlabelOriginalTrackingNumber
- uid: EasyPost.Models.API.Options.PartiesToTransactionAreRelated*
  commentId: Overload:EasyPost.Models.API.Options.PartiesToTransactionAreRelated
  name: PartiesToTransactionAreRelated
  nameWithType: Options.PartiesToTransactionAreRelated
  fullName: EasyPost.Models.API.Options.PartiesToTransactionAreRelated
- uid: EasyPost.Models.API.Options.Payment*
  commentId: Overload:EasyPost.Models.API.Options.Payment
  name: Payment
  nameWithType: Options.Payment
  fullName: EasyPost.Models.API.Options.Payment
- uid: EasyPost.Models.API.Options.PeelAndReturn*
  commentId: Overload:EasyPost.Models.API.Options.PeelAndReturn
  name: PeelAndReturn
  nameWithType: Options.PeelAndReturn
  fullName: EasyPost.Models.API.Options.PeelAndReturn
- uid: EasyPost.Models.API.Options.PickupMaxDatetime*
  commentId: Overload:EasyPost.Models.API.Options.PickupMaxDatetime
  name: PickupMaxDatetime
  nameWithType: Options.PickupMaxDatetime
  fullName: EasyPost.Models.API.Options.PickupMaxDatetime
- uid: EasyPost.Models.API.Options.PickupMinDatetime*
  commentId: Overload:EasyPost.Models.API.Options.PickupMinDatetime
  name: PickupMinDatetime
  nameWithType: Options.PickupMinDatetime
  fullName: EasyPost.Models.API.Options.PickupMinDatetime
- uid: EasyPost.Models.API.Options.PoSort*
  commentId: Overload:EasyPost.Models.API.Options.PoSort
  name: PoSort
  nameWithType: Options.PoSort
  fullName: EasyPost.Models.API.Options.PoSort
- uid: EasyPost.Models.API.Options.PostageLabelInline*
  commentId: Overload:EasyPost.Models.API.Options.PostageLabelInline
  name: PostageLabelInline
  nameWithType: Options.PostageLabelInline
  fullName: EasyPost.Models.API.Options.PostageLabelInline
- uid: EasyPost.Models.API.Options.PrintCustom*
  commentId: Overload:EasyPost.Models.API.Options.PrintCustom
  name: PrintCustom
  nameWithType: Options.PrintCustom
  fullName: EasyPost.Models.API.Options.PrintCustom
- uid: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Dictionary<String, Object>>
  nameWithType: List<Dictionary<String, Object>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.Dictionary<System.String, System.Object>>
  nameWithType.vb: List(Of Dictionary(Of String, Object))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: List(Of Dictionary(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Models.API.Options.PrintCustom1*
  commentId: Overload:EasyPost.Models.API.Options.PrintCustom1
  name: PrintCustom1
  nameWithType: Options.PrintCustom1
  fullName: EasyPost.Models.API.Options.PrintCustom1
- uid: EasyPost.Models.API.Options.PrintCustom1Barcode*
  commentId: Overload:EasyPost.Models.API.Options.PrintCustom1Barcode
  name: PrintCustom1Barcode
  nameWithType: Options.PrintCustom1Barcode
  fullName: EasyPost.Models.API.Options.PrintCustom1Barcode
- uid: EasyPost.Models.API.Options.PrintCustom1Code*
  commentId: Overload:EasyPost.Models.API.Options.PrintCustom1Code
  name: PrintCustom1Code
  nameWithType: Options.PrintCustom1Code
  fullName: EasyPost.Models.API.Options.PrintCustom1Code
- uid: EasyPost.Models.API.Options.PrintCustom2*
  commentId: Overload:EasyPost.Models.API.Options.PrintCustom2
  name: PrintCustom2
  nameWithType: Options.PrintCustom2
  fullName: EasyPost.Models.API.Options.PrintCustom2
- uid: EasyPost.Models.API.Options.PrintCustom2Barcode*
  commentId: Overload:EasyPost.Models.API.Options.PrintCustom2Barcode
  name: PrintCustom2Barcode
  nameWithType: Options.PrintCustom2Barcode
  fullName: EasyPost.Models.API.Options.PrintCustom2Barcode
- uid: EasyPost.Models.API.Options.PrintCustom2Code*
  commentId: Overload:EasyPost.Models.API.Options.PrintCustom2Code
  name: PrintCustom2Code
  nameWithType: Options.PrintCustom2Code
  fullName: EasyPost.Models.API.Options.PrintCustom2Code
- uid: EasyPost.Models.API.Options.PrintCustom3*
  commentId: Overload:EasyPost.Models.API.Options.PrintCustom3
  name: PrintCustom3
  nameWithType: Options.PrintCustom3
  fullName: EasyPost.Models.API.Options.PrintCustom3
- uid: EasyPost.Models.API.Options.PrintCustom3Barcode*
  commentId: Overload:EasyPost.Models.API.Options.PrintCustom3Barcode
  name: PrintCustom3Barcode
  nameWithType: Options.PrintCustom3Barcode
  fullName: EasyPost.Models.API.Options.PrintCustom3Barcode
- uid: EasyPost.Models.API.Options.PrintCustom3Code*
  commentId: Overload:EasyPost.Models.API.Options.PrintCustom3Code
  name: PrintCustom3Code
  nameWithType: Options.PrintCustom3Code
  fullName: EasyPost.Models.API.Options.PrintCustom3Code
- uid: EasyPost.Models.API.Options.PrintRate*
  commentId: Overload:EasyPost.Models.API.Options.PrintRate
  name: PrintRate
  nameWithType: Options.PrintRate
  fullName: EasyPost.Models.API.Options.PrintRate
- uid: EasyPost.Models.API.Options.ReceiverLiquorLicense*
  commentId: Overload:EasyPost.Models.API.Options.ReceiverLiquorLicense
  name: ReceiverLiquorLicense
  nameWithType: Options.ReceiverLiquorLicense
  fullName: EasyPost.Models.API.Options.ReceiverLiquorLicense
- uid: EasyPost.Models.API.Options.RegisteredMail*
  commentId: Overload:EasyPost.Models.API.Options.RegisteredMail
  name: RegisteredMail
  nameWithType: Options.RegisteredMail
  fullName: EasyPost.Models.API.Options.RegisteredMail
- uid: EasyPost.Models.API.Options.RegisteredMailAmount*
  commentId: Overload:EasyPost.Models.API.Options.RegisteredMailAmount
  name: RegisteredMailAmount
  nameWithType: Options.RegisteredMailAmount
  fullName: EasyPost.Models.API.Options.RegisteredMailAmount
- uid: EasyPost.Models.API.Options.ReturnReceipt*
  commentId: Overload:EasyPost.Models.API.Options.ReturnReceipt
  name: ReturnReceipt
  nameWithType: Options.ReturnReceipt
  fullName: EasyPost.Models.API.Options.ReturnReceipt
- uid: EasyPost.Models.API.Options.ReturnService*
  commentId: Overload:EasyPost.Models.API.Options.ReturnService
  name: ReturnService
  nameWithType: Options.ReturnService
  fullName: EasyPost.Models.API.Options.ReturnService
- uid: EasyPost.Models.API.Options.SaturdayDelivery*
  commentId: Overload:EasyPost.Models.API.Options.SaturdayDelivery
  name: SaturdayDelivery
  nameWithType: Options.SaturdayDelivery
  fullName: EasyPost.Models.API.Options.SaturdayDelivery
- uid: EasyPost.Models.API.Options.SettlementMethod*
  commentId: Overload:EasyPost.Models.API.Options.SettlementMethod
  name: SettlementMethod
  nameWithType: Options.SettlementMethod
  fullName: EasyPost.Models.API.Options.SettlementMethod
- uid: EasyPost.Models.API.Options.SmartpostHub*
  commentId: Overload:EasyPost.Models.API.Options.SmartpostHub
  name: SmartpostHub
  nameWithType: Options.SmartpostHub
  fullName: EasyPost.Models.API.Options.SmartpostHub
- uid: EasyPost.Models.API.Options.SmartpostManifest*
  commentId: Overload:EasyPost.Models.API.Options.SmartpostManifest
  name: SmartpostManifest
  nameWithType: Options.SmartpostManifest
  fullName: EasyPost.Models.API.Options.SmartpostManifest
- uid: EasyPost.Models.API.Options.SpecialRatesEligibility*
  commentId: Overload:EasyPost.Models.API.Options.SpecialRatesEligibility
  name: SpecialRatesEligibility
  nameWithType: Options.SpecialRatesEligibility
  fullName: EasyPost.Models.API.Options.SpecialRatesEligibility
- uid: EasyPost.Models.API.Options.SuppressEtd*
  commentId: Overload:EasyPost.Models.API.Options.SuppressEtd
  name: SuppressEtd
  nameWithType: Options.SuppressEtd
  fullName: EasyPost.Models.API.Options.SuppressEtd
