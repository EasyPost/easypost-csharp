### YamlMime:ManagedReference
items:
- uid: EasyPost._base.EasyPostClient
  commentId: T:EasyPost._base.EasyPostClient
  id: EasyPostClient
  parent: EasyPost._base
  children:
  - EasyPost._base.EasyPostClient.#ctor(System.String,System.String,System.Net.Http.HttpClient)
  - EasyPost._base.EasyPostClient.Clone``1(System.String,System.String,System.Net.Http.HttpClient)
  - EasyPost._base.EasyPostClient.Configuration
  - EasyPost._base.EasyPostClient.Equals(System.Object)
  - EasyPost._base.EasyPostClient.GetHashCode
  - EasyPost._base.EasyPostClient.GetService``1
  langs:
  - csharp
  - vb
  name: EasyPostClient
  nameWithType: EasyPostClient
  fullName: EasyPost._base.EasyPostClient
  type: Class
  source:
    remote:
      path: EasyPost/_base/EasyPostClient.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: EasyPostClient
    path: _base/EasyPostClient.cs
    startLine: 19
  assemblies:
  - EasyPost
  namespace: EasyPost._base
  syntax:
    content: public abstract class EasyPostClient
    content.vb: Public MustInherit Class EasyPostClient
  inheritance:
  - System.Object
  derivedClasses:
  - EasyPost.BetaClient
  - EasyPost.Client
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EasyPost._base.EasyPostClient.Configuration
  commentId: F:EasyPost._base.EasyPostClient.Configuration
  id: Configuration
  parent: EasyPost._base.EasyPostClient
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: EasyPostClient.Configuration
  fullName: EasyPost._base.EasyPostClient.Configuration
  type: Field
  source:
    remote:
      path: EasyPost/_base/EasyPostClient.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Configuration
    path: _base/EasyPostClient.cs
    startLine: 21
  assemblies:
  - EasyPost
  namespace: EasyPost._base
  syntax:
    content: public readonly ClientConfiguration Configuration
    return:
      type: EasyPost.Http.ClientConfiguration
    content.vb: Public ReadOnly Configuration As ClientConfiguration
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EasyPost._base.EasyPostClient.#ctor(System.String,System.String,System.Net.Http.HttpClient)
  commentId: M:EasyPost._base.EasyPostClient.#ctor(System.String,System.String,System.Net.Http.HttpClient)
  id: '#ctor(System.String,System.String,System.Net.Http.HttpClient)'
  parent: EasyPost._base.EasyPostClient
  langs:
  - csharp
  - vb
  name: EasyPostClient(String, String, HttpClient)
  nameWithType: EasyPostClient.EasyPostClient(String, String, HttpClient)
  fullName: EasyPost._base.EasyPostClient.EasyPostClient(System.String, System.String, System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: EasyPost/_base/EasyPostClient.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: .ctor
    path: _base/EasyPostClient.cs
    startLine: 35
  assemblies:
  - EasyPost
  namespace: EasyPost._base
  summary: "\nInitializes a new instance of the <xref href=\"EasyPost._base.EasyPostClient\" data-throw-if-not-resolved=\"false\"></xref> class.\nConstructor for the EasyPost client.\n"
  example: []
  syntax:
    content: protected EasyPostClient(string apiKey, string baseUrl = null, HttpClient customHttpClient = null)
    parameters:
    - id: apiKey
      type: System.String
      description: API key to use with this client.
    - id: baseUrl
      type: System.String
      description: Base URL to use with this client. This will override `apiVersion`.
    - id: customHttpClient
      type: System.Net.Http.HttpClient
      description: "\nCustom HttpClient to pass into RestSharp if needed. Mostly for debug purposes, not\nadvised for general use.\n"
    content.vb: Protected Sub New(apiKey As String, baseUrl As String = Nothing, customHttpClient As HttpClient = Nothing)
  overload: EasyPost._base.EasyPostClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EasyPost._base.EasyPostClient.GetService``1
  commentId: M:EasyPost._base.EasyPostClient.GetService``1
  id: GetService``1
  parent: EasyPost._base.EasyPostClient
  langs:
  - csharp
  - vb
  name: GetService<T>()
  nameWithType: EasyPostClient.GetService<T>()
  fullName: EasyPost._base.EasyPostClient.GetService<T>()
  type: Method
  source:
    remote:
      path: EasyPost/_base/EasyPostClient.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: GetService
    path: _base/EasyPostClient.cs
    startLine: 211
  assemblies:
  - EasyPost
  namespace: EasyPost._base
  summary: "\nGet a service instance.\n"
  example: []
  syntax:
    content: >-
      protected T GetService<T>()

          where T : IEasyPostService
    typeParameters:
    - id: T
      description: Type of service class to instantiate.
    return:
      type: '{T}'
      description: A T-type instance.
    content.vb: Protected Function GetService(Of T As IEasyPostService) As T
  overload: EasyPost._base.EasyPostClient.GetService*
  nameWithType.vb: EasyPostClient.GetService(Of T)()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EasyPost._base.EasyPostClient.GetService(Of T)()
  name.vb: GetService(Of T)()
- uid: EasyPost._base.EasyPostClient.Equals(System.Object)
  commentId: M:EasyPost._base.EasyPostClient.Equals(System.Object)
  id: Equals(System.Object)
  parent: EasyPost._base.EasyPostClient
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: EasyPostClient.Equals(Object)
  fullName: EasyPost._base.EasyPostClient.Equals(System.Object)
  type: Method
  source:
    remote:
      path: EasyPost/_base/EasyPostClient.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Equals
    path: _base/EasyPostClient.cs
    startLine: 236
  assemblies:
  - EasyPost
  namespace: EasyPost._base
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: EasyPost._base.EasyPostClient.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EasyPost._base.EasyPostClient.GetHashCode
  commentId: M:EasyPost._base.EasyPostClient.GetHashCode
  id: GetHashCode
  parent: EasyPost._base.EasyPostClient
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: EasyPostClient.GetHashCode()
  fullName: EasyPost._base.EasyPostClient.GetHashCode()
  type: Method
  source:
    remote:
      path: EasyPost/_base/EasyPostClient.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: GetHashCode
    path: _base/EasyPostClient.cs
    startLine: 238
  assemblies:
  - EasyPost
  namespace: EasyPost._base
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: EasyPost._base.EasyPostClient.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EasyPost._base.EasyPostClient.Clone``1(System.String,System.String,System.Net.Http.HttpClient)
  commentId: M:EasyPost._base.EasyPostClient.Clone``1(System.String,System.String,System.Net.Http.HttpClient)
  id: Clone``1(System.String,System.String,System.Net.Http.HttpClient)
  parent: EasyPost._base.EasyPostClient
  langs:
  - csharp
  - vb
  name: Clone<T>(String, String, HttpClient)
  nameWithType: EasyPostClient.Clone<T>(String, String, HttpClient)
  fullName: EasyPost._base.EasyPostClient.Clone<T>(System.String, System.String, System.Net.Http.HttpClient)
  type: Method
  source:
    remote:
      path: EasyPost/_base/EasyPostClient.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Clone
    path: _base/EasyPostClient.cs
    startLine: 250
  assemblies:
  - EasyPost
  namespace: EasyPost._base
  summary: "\nMake a copy of this client, with the ability to override API key, API base, and HttpClient.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method does not always function as expected. Create a new Client instead.")]

      public T Clone<T>(string overrideApiKey = null, string overrideApiBase = null, HttpClient overrideHttpClient = null)

          where T : EasyPostClient
    parameters:
    - id: overrideApiKey
      type: System.String
      description: Optional alternate API key to use.
    - id: overrideApiBase
      type: System.String
      description: Optional alternate API base to use.
    - id: overrideHttpClient
      type: System.Net.Http.HttpClient
      description: Optional alternate HttpClient to use.
    typeParameters:
    - id: T
      description: Type of client to duplicate.
    return:
      type: '{T}'
      description: A T-type client object.
    content.vb: >-
      <Obsolete("This method does not always function as expected. Create a new Client instead.")>

      Public Function Clone(Of T As EasyPostClient)(overrideApiKey As String = Nothing, overrideApiBase As String = Nothing, overrideHttpClient As HttpClient = Nothing) As T
  overload: EasyPost._base.EasyPostClient.Clone*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method does not always function as expected. Create a new Client instead.
  nameWithType.vb: EasyPostClient.Clone(Of T)(String, String, HttpClient)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EasyPost._base.EasyPostClient.Clone(Of T)(System.String, System.String, System.Net.Http.HttpClient)
  name.vb: Clone(Of T)(String, String, HttpClient)
references:
- uid: EasyPost._base
  commentId: N:EasyPost._base
  name: EasyPost._base
  nameWithType: EasyPost._base
  fullName: EasyPost._base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasyPost.Http.ClientConfiguration
  commentId: T:EasyPost.Http.ClientConfiguration
  parent: EasyPost.Http
  name: ClientConfiguration
  nameWithType: ClientConfiguration
  fullName: EasyPost.Http.ClientConfiguration
- uid: EasyPost.Http
  commentId: N:EasyPost.Http
  name: EasyPost.Http
  nameWithType: EasyPost.Http
  fullName: EasyPost.Http
- uid: EasyPost._base.EasyPostClient
  commentId: T:EasyPost._base.EasyPostClient
  parent: EasyPost._base
  name: EasyPostClient
  nameWithType: EasyPostClient
  fullName: EasyPost._base.EasyPostClient
- uid: EasyPost._base.EasyPostClient.#ctor*
  commentId: Overload:EasyPost._base.EasyPostClient.#ctor
  name: EasyPostClient
  nameWithType: EasyPostClient.EasyPostClient
  fullName: EasyPost._base.EasyPostClient.EasyPostClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: EasyPost._base.EasyPostClient.GetService*
  commentId: Overload:EasyPost._base.EasyPostClient.GetService
  name: GetService
  nameWithType: EasyPostClient.GetService
  fullName: EasyPost._base.EasyPostClient.GetService
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.EasyPostClient.Equals*
  commentId: Overload:EasyPost._base.EasyPostClient.Equals
  name: Equals
  nameWithType: EasyPostClient.Equals
  fullName: EasyPost._base.EasyPostClient.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.EasyPostClient.GetHashCode*
  commentId: Overload:EasyPost._base.EasyPostClient.GetHashCode
  name: GetHashCode
  nameWithType: EasyPostClient.GetHashCode
  fullName: EasyPost._base.EasyPostClient.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EasyPost._base.EasyPostClient.Clone*
  commentId: Overload:EasyPost._base.EasyPostClient.Clone
  name: Clone
  nameWithType: EasyPostClient.Clone
  fullName: EasyPost._base.EasyPostClient.Clone
