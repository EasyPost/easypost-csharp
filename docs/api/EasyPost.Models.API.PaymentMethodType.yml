### YamlMime:ManagedReference
items:
- uid: EasyPost.Models.API.PaymentMethodType
  commentId: T:EasyPost.Models.API.PaymentMethodType
  id: PaymentMethodType
  parent: EasyPost.Models.API
  children:
  - EasyPost.Models.API.PaymentMethodType.BankAccount
  - EasyPost.Models.API.PaymentMethodType.CreditCard
  langs:
  - csharp
  - vb
  name: PaymentMethodType
  nameWithType: PaymentMethodType
  fullName: EasyPost.Models.API.PaymentMethodType
  type: Class
  source:
    remote:
      path: EasyPost/Models/API/PaymentMethodType.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PaymentMethodType
    path: Models/API/PaymentMethodType.cs
    startLine: 4
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: 'public class PaymentMethodType : ValueEnum, IComparable, IEnum'
    content.vb: >-
      Public Class PaymentMethodType

          Inherits ValueEnum

          Implements IComparable, IEnum
  inheritance:
  - System.Object
  - EasyPost.Utilities.Enum
  - EasyPost.Utilities.ValueEnum
  implements:
  - System.IComparable
  - EasyPost.Utilities.IEnum
  inheritedMembers:
  - EasyPost.Utilities.ValueEnum.ToString
  - EasyPost.Utilities.ValueEnum.Equals(System.Object)
  - EasyPost.Utilities.ValueEnum.GetHashCode
  - EasyPost.Utilities.Enum.CompareTo(System.Object)
  - EasyPost.Utilities.Enum.GetAll``1
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EasyPost.Models.API.PaymentMethodType.BankAccount
  commentId: F:EasyPost.Models.API.PaymentMethodType.BankAccount
  id: BankAccount
  parent: EasyPost.Models.API.PaymentMethodType
  langs:
  - csharp
  - vb
  name: BankAccount
  nameWithType: PaymentMethodType.BankAccount
  fullName: EasyPost.Models.API.PaymentMethodType.BankAccount
  type: Field
  source:
    remote:
      path: EasyPost/Models/API/PaymentMethodType.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: BankAccount
    path: Models/API/PaymentMethodType.cs
    startLine: 6
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: public static readonly PaymentMethodType BankAccount
    return:
      type: EasyPost.Models.API.PaymentMethodType
    content.vb: Public Shared ReadOnly BankAccount As PaymentMethodType
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EasyPost.Models.API.PaymentMethodType.CreditCard
  commentId: F:EasyPost.Models.API.PaymentMethodType.CreditCard
  id: CreditCard
  parent: EasyPost.Models.API.PaymentMethodType
  langs:
  - csharp
  - vb
  name: CreditCard
  nameWithType: PaymentMethodType.CreditCard
  fullName: EasyPost.Models.API.PaymentMethodType.CreditCard
  type: Field
  source:
    remote:
      path: EasyPost/Models/API/PaymentMethodType.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CreditCard
    path: Models/API/PaymentMethodType.cs
    startLine: 7
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.API
  syntax:
    content: public static readonly PaymentMethodType CreditCard
    return:
      type: EasyPost.Models.API.PaymentMethodType
    content.vb: Public Shared ReadOnly CreditCard As PaymentMethodType
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: EasyPost.Models.API
  commentId: N:EasyPost.Models.API
  name: EasyPost.Models.API
  nameWithType: EasyPost.Models.API
  fullName: EasyPost.Models.API
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EasyPost.Utilities.Enum
  commentId: T:EasyPost.Utilities.Enum
  parent: EasyPost.Utilities
  name: Enum
  nameWithType: Enum
  fullName: EasyPost.Utilities.Enum
- uid: EasyPost.Utilities.ValueEnum
  commentId: T:EasyPost.Utilities.ValueEnum
  parent: EasyPost.Utilities
  name: ValueEnum
  nameWithType: ValueEnum
  fullName: EasyPost.Utilities.ValueEnum
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: EasyPost.Utilities.IEnum
  commentId: T:EasyPost.Utilities.IEnum
  parent: EasyPost.Utilities
  name: IEnum
  nameWithType: IEnum
  fullName: EasyPost.Utilities.IEnum
- uid: EasyPost.Utilities.ValueEnum.ToString
  commentId: M:EasyPost.Utilities.ValueEnum.ToString
  parent: EasyPost.Utilities.ValueEnum
  name: ToString()
  nameWithType: ValueEnum.ToString()
  fullName: EasyPost.Utilities.ValueEnum.ToString()
  spec.csharp:
  - uid: EasyPost.Utilities.ValueEnum.ToString
    name: ToString
    nameWithType: ValueEnum.ToString
    fullName: EasyPost.Utilities.ValueEnum.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost.Utilities.ValueEnum.ToString
    name: ToString
    nameWithType: ValueEnum.ToString
    fullName: EasyPost.Utilities.ValueEnum.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Utilities.ValueEnum.Equals(System.Object)
  commentId: M:EasyPost.Utilities.ValueEnum.Equals(System.Object)
  parent: EasyPost.Utilities.ValueEnum
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueEnum.Equals(Object)
  fullName: EasyPost.Utilities.ValueEnum.Equals(System.Object)
  spec.csharp:
  - uid: EasyPost.Utilities.ValueEnum.Equals(System.Object)
    name: Equals
    nameWithType: ValueEnum.Equals
    fullName: EasyPost.Utilities.ValueEnum.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost.Utilities.ValueEnum.Equals(System.Object)
    name: Equals
    nameWithType: ValueEnum.Equals
    fullName: EasyPost.Utilities.ValueEnum.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Utilities.ValueEnum.GetHashCode
  commentId: M:EasyPost.Utilities.ValueEnum.GetHashCode
  parent: EasyPost.Utilities.ValueEnum
  name: GetHashCode()
  nameWithType: ValueEnum.GetHashCode()
  fullName: EasyPost.Utilities.ValueEnum.GetHashCode()
  spec.csharp:
  - uid: EasyPost.Utilities.ValueEnum.GetHashCode
    name: GetHashCode
    nameWithType: ValueEnum.GetHashCode
    fullName: EasyPost.Utilities.ValueEnum.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost.Utilities.ValueEnum.GetHashCode
    name: GetHashCode
    nameWithType: ValueEnum.GetHashCode
    fullName: EasyPost.Utilities.ValueEnum.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Utilities.Enum.CompareTo(System.Object)
  commentId: M:EasyPost.Utilities.Enum.CompareTo(System.Object)
  parent: EasyPost.Utilities.Enum
  isExternal: true
  name: CompareTo(Object)
  nameWithType: Enum.CompareTo(Object)
  fullName: EasyPost.Utilities.Enum.CompareTo(System.Object)
  spec.csharp:
  - uid: EasyPost.Utilities.Enum.CompareTo(System.Object)
    name: CompareTo
    nameWithType: Enum.CompareTo
    fullName: EasyPost.Utilities.Enum.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost.Utilities.Enum.CompareTo(System.Object)
    name: CompareTo
    nameWithType: Enum.CompareTo
    fullName: EasyPost.Utilities.Enum.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Utilities.Enum.GetAll``1
  commentId: M:EasyPost.Utilities.Enum.GetAll``1
  parent: EasyPost.Utilities.Enum
  name: GetAll<T>()
  nameWithType: Enum.GetAll<T>()
  fullName: EasyPost.Utilities.Enum.GetAll<T>()
  nameWithType.vb: Enum.GetAll(Of T)()
  fullName.vb: EasyPost.Utilities.Enum.GetAll(Of T)()
  name.vb: GetAll(Of T)()
  spec.csharp:
  - uid: EasyPost.Utilities.Enum.GetAll``1
    name: GetAll<T>
    nameWithType: Enum.GetAll<T>
    fullName: EasyPost.Utilities.Enum.GetAll<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost.Utilities.Enum.GetAll``1
    name: GetAll(Of T)
    nameWithType: Enum.GetAll(Of T)
    fullName: EasyPost.Utilities.Enum.GetAll(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasyPost.Utilities
  commentId: N:EasyPost.Utilities
  name: EasyPost.Utilities
  nameWithType: EasyPost.Utilities
  fullName: EasyPost.Utilities
- uid: EasyPost.Models.API.PaymentMethodType
  commentId: T:EasyPost.Models.API.PaymentMethodType
  parent: EasyPost.Models.API
  name: PaymentMethodType
  nameWithType: PaymentMethodType
  fullName: EasyPost.Models.API.PaymentMethodType
