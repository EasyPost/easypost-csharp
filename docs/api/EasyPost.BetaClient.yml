### YamlMime:ManagedReference
items:
- uid: EasyPost.BetaClient
  commentId: T:EasyPost.BetaClient
  id: BetaClient
  parent: EasyPost
  children:
  - EasyPost.BetaClient.Referral
  langs:
  - csharp
  - vb
  name: BetaClient
  nameWithType: BetaClient
  fullName: EasyPost.BetaClient
  type: Class
  source:
    remote:
      path: EasyPost/BetaClient.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: BetaClient
    path: BetaClient.cs
    startLine: 9
  assemblies:
  - EasyPost
  namespace: EasyPost
  summary: "\nAccess beta EasyPost API endpoints.\n"
  example: []
  syntax:
    content: 'public class BetaClient : EasyPostClient'
    content.vb: >-
      Public Class BetaClient

          Inherits EasyPostClient
  inheritance:
  - System.Object
  - EasyPost._base.EasyPostClient
  inheritedMembers:
  - EasyPost._base.EasyPostClient.Configuration
  - EasyPost._base.EasyPostClient.GetService``1
  - EasyPost._base.EasyPostClient.Equals(System.Object)
  - EasyPost._base.EasyPostClient.GetHashCode
  - EasyPost._base.EasyPostClient.Clone``1(System.String,System.String,System.Net.Http.HttpClient)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EasyPost.BetaClient.Referral
  commentId: P:EasyPost.BetaClient.Referral
  id: Referral
  parent: EasyPost.BetaClient
  langs:
  - csharp
  - vb
  name: Referral
  nameWithType: BetaClient.Referral
  fullName: EasyPost.BetaClient.Referral
  type: Property
  source:
    remote:
      path: EasyPost/BetaClient.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Referral
    path: BetaClient.cs
    startLine: 24
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public ReferralService Referral { get; }
    parameters: []
    return:
      type: EasyPost.Services.Beta.ReferralService
    content.vb: Public ReadOnly Property Referral As ReferralService
  overload: EasyPost.BetaClient.Referral*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EasyPost
  commentId: N:EasyPost
  name: EasyPost
  nameWithType: EasyPost
  fullName: EasyPost
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EasyPost._base.EasyPostClient
  commentId: T:EasyPost._base.EasyPostClient
  parent: EasyPost._base
  name: EasyPostClient
  nameWithType: EasyPostClient
  fullName: EasyPost._base.EasyPostClient
- uid: EasyPost._base.EasyPostClient.Configuration
  commentId: F:EasyPost._base.EasyPostClient.Configuration
  parent: EasyPost._base.EasyPostClient
  name: Configuration
  nameWithType: EasyPostClient.Configuration
  fullName: EasyPost._base.EasyPostClient.Configuration
- uid: EasyPost._base.EasyPostClient.GetService``1
  commentId: M:EasyPost._base.EasyPostClient.GetService``1
  parent: EasyPost._base.EasyPostClient
  name: GetService<T>()
  nameWithType: EasyPostClient.GetService<T>()
  fullName: EasyPost._base.EasyPostClient.GetService<T>()
  nameWithType.vb: EasyPostClient.GetService(Of T)()
  fullName.vb: EasyPost._base.EasyPostClient.GetService(Of T)()
  name.vb: GetService(Of T)()
  spec.csharp:
  - uid: EasyPost._base.EasyPostClient.GetService``1
    name: GetService<T>
    nameWithType: EasyPostClient.GetService<T>
    fullName: EasyPost._base.EasyPostClient.GetService<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostClient.GetService``1
    name: GetService(Of T)
    nameWithType: EasyPostClient.GetService(Of T)
    fullName: EasyPost._base.EasyPostClient.GetService(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.EasyPostClient.Equals(System.Object)
  commentId: M:EasyPost._base.EasyPostClient.Equals(System.Object)
  parent: EasyPost._base.EasyPostClient
  isExternal: true
  name: Equals(Object)
  nameWithType: EasyPostClient.Equals(Object)
  fullName: EasyPost._base.EasyPostClient.Equals(System.Object)
  spec.csharp:
  - uid: EasyPost._base.EasyPostClient.Equals(System.Object)
    name: Equals
    nameWithType: EasyPostClient.Equals
    fullName: EasyPost._base.EasyPostClient.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostClient.Equals(System.Object)
    name: Equals
    nameWithType: EasyPostClient.Equals
    fullName: EasyPost._base.EasyPostClient.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.EasyPostClient.GetHashCode
  commentId: M:EasyPost._base.EasyPostClient.GetHashCode
  parent: EasyPost._base.EasyPostClient
  name: GetHashCode()
  nameWithType: EasyPostClient.GetHashCode()
  fullName: EasyPost._base.EasyPostClient.GetHashCode()
  spec.csharp:
  - uid: EasyPost._base.EasyPostClient.GetHashCode
    name: GetHashCode
    nameWithType: EasyPostClient.GetHashCode
    fullName: EasyPost._base.EasyPostClient.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostClient.GetHashCode
    name: GetHashCode
    nameWithType: EasyPostClient.GetHashCode
    fullName: EasyPost._base.EasyPostClient.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.EasyPostClient.Clone``1(System.String,System.String,System.Net.Http.HttpClient)
  commentId: M:EasyPost._base.EasyPostClient.Clone``1(System.String,System.String,System.Net.Http.HttpClient)
  parent: EasyPost._base.EasyPostClient
  isExternal: true
  name: Clone<T>(String, String, HttpClient)
  nameWithType: EasyPostClient.Clone<T>(String, String, HttpClient)
  fullName: EasyPost._base.EasyPostClient.Clone<T>(System.String, System.String, System.Net.Http.HttpClient)
  nameWithType.vb: EasyPostClient.Clone(Of T)(String, String, HttpClient)
  fullName.vb: EasyPost._base.EasyPostClient.Clone(Of T)(System.String, System.String, System.Net.Http.HttpClient)
  name.vb: Clone(Of T)(String, String, HttpClient)
  spec.csharp:
  - uid: EasyPost._base.EasyPostClient.Clone``1(System.String,System.String,System.Net.Http.HttpClient)
    name: Clone<T>
    nameWithType: EasyPostClient.Clone<T>
    fullName: EasyPost._base.EasyPostClient.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostClient.Clone``1(System.String,System.String,System.Net.Http.HttpClient)
    name: Clone(Of T)
    nameWithType: EasyPostClient.Clone(Of T)
    fullName: EasyPost._base.EasyPostClient.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasyPost._base
  commentId: N:EasyPost._base
  name: EasyPost._base
  nameWithType: EasyPost._base
  fullName: EasyPost._base
- uid: EasyPost.BetaClient.Referral*
  commentId: Overload:EasyPost.BetaClient.Referral
  name: Referral
  nameWithType: BetaClient.Referral
  fullName: EasyPost.BetaClient.Referral
- uid: EasyPost.Services.Beta.ReferralService
  commentId: T:EasyPost.Services.Beta.ReferralService
  parent: EasyPost.Services.Beta
  name: ReferralService
  nameWithType: ReferralService
  fullName: EasyPost.Services.Beta.ReferralService
- uid: EasyPost.Services.Beta
  commentId: N:EasyPost.Services.Beta
  name: EasyPost.Services.Beta
  nameWithType: EasyPost.Services.Beta
  fullName: EasyPost.Services.Beta
