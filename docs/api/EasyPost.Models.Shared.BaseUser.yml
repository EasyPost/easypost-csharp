### YamlMime:ManagedReference
items:
- uid: EasyPost.Models.Shared.BaseUser
  commentId: T:EasyPost.Models.Shared.BaseUser
  id: BaseUser
  parent: EasyPost.Models.Shared
  children:
  - EasyPost.Models.Shared.BaseUser.ApiKeys
  - EasyPost.Models.Shared.BaseUser.Balance
  - EasyPost.Models.Shared.BaseUser.Children
  - EasyPost.Models.Shared.BaseUser.Email
  - EasyPost.Models.Shared.BaseUser.Name
  - EasyPost.Models.Shared.BaseUser.ParentId
  - EasyPost.Models.Shared.BaseUser.Password
  - EasyPost.Models.Shared.BaseUser.PasswordConfirmation
  - EasyPost.Models.Shared.BaseUser.PhoneNumber
  - EasyPost.Models.Shared.BaseUser.PricePerShipment
  - EasyPost.Models.Shared.BaseUser.RechargeAmount
  - EasyPost.Models.Shared.BaseUser.RechargeThreshold
  - EasyPost.Models.Shared.BaseUser.SecondaryRechargeAmount
  langs:
  - csharp
  - vb
  name: BaseUser
  nameWithType: BaseUser
  fullName: EasyPost.Models.Shared.BaseUser
  type: Class
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: BaseUser
    path: Models/Shared/BaseUser.cs
    startLine: 7
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: 'public class BaseUser : EasyPostObject, IEasyPostObject'
    content.vb: >-
      Public Class BaseUser

          Inherits EasyPostObject

          Implements IEasyPostObject
  inheritance:
  - System.Object
  - EasyPost._base.WithClient
  - EasyPost._base.EasyPostObject
  derivedClasses:
  - EasyPost.Models.API.ReferralCustomer
  - EasyPost.Models.API.User
  implements:
  - EasyPost._base.IEasyPostObject
  inheritedMembers:
  - EasyPost._base.EasyPostObject.CreatedAt
  - EasyPost._base.EasyPostObject.Id
  - EasyPost._base.EasyPostObject.Mode
  - EasyPost._base.EasyPostObject.UpdatedAt
  - EasyPost._base.EasyPostObject.Equals(System.Object)
  - EasyPost._base.EasyPostObject.GetHashCode
  - EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  - EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EasyPost.Models.Shared.BaseUser.ApiKeys
  commentId: P:EasyPost.Models.Shared.BaseUser.ApiKeys
  id: ApiKeys
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: ApiKeys
  nameWithType: BaseUser.ApiKeys
  fullName: EasyPost.Models.Shared.BaseUser.ApiKeys
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ApiKeys
    path: Models/Shared/BaseUser.cs
    startLine: 11
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("api_keys")]

      public List<ApiKey> ApiKeys { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{EasyPost.Models.API.ApiKey}
    content.vb: >-
      <JsonProperty("api_keys")>

      Public Property ApiKeys As List(Of ApiKey)
  overload: EasyPost.Models.Shared.BaseUser.ApiKeys*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: api_keys
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.Shared.BaseUser.Balance
  commentId: P:EasyPost.Models.Shared.BaseUser.Balance
  id: Balance
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: Balance
  nameWithType: BaseUser.Balance
  fullName: EasyPost.Models.Shared.BaseUser.Balance
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Balance
    path: Models/Shared/BaseUser.cs
    startLine: 13
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("balance")]

      public string Balance { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("balance")>

      Public Property Balance As String
  overload: EasyPost.Models.Shared.BaseUser.Balance*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: balance
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.Shared.BaseUser.Children
  commentId: P:EasyPost.Models.Shared.BaseUser.Children
  id: Children
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: BaseUser.Children
  fullName: EasyPost.Models.Shared.BaseUser.Children
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Children
    path: Models/Shared/BaseUser.cs
    startLine: 15
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("children")]

      public List<User> Children { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{EasyPost.Models.API.User}
    content.vb: >-
      <JsonProperty("children")>

      Public Property Children As List(Of User)
  overload: EasyPost.Models.Shared.BaseUser.Children*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: children
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.Shared.BaseUser.Email
  commentId: P:EasyPost.Models.Shared.BaseUser.Email
  id: Email
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: BaseUser.Email
  fullName: EasyPost.Models.Shared.BaseUser.Email
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Email
    path: Models/Shared/BaseUser.cs
    startLine: 17
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("email")]

      public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("email")>

      Public Property Email As String
  overload: EasyPost.Models.Shared.BaseUser.Email*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: email
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.Shared.BaseUser.Name
  commentId: P:EasyPost.Models.Shared.BaseUser.Name
  id: Name
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BaseUser.Name
  fullName: EasyPost.Models.Shared.BaseUser.Name
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Name
    path: Models/Shared/BaseUser.cs
    startLine: 19
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("name")]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("name")>

      Public Property Name As String
  overload: EasyPost.Models.Shared.BaseUser.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.Shared.BaseUser.ParentId
  commentId: P:EasyPost.Models.Shared.BaseUser.ParentId
  id: ParentId
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: ParentId
  nameWithType: BaseUser.ParentId
  fullName: EasyPost.Models.Shared.BaseUser.ParentId
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ParentId
    path: Models/Shared/BaseUser.cs
    startLine: 21
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("parent_id")]

      public string ParentId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("parent_id")>

      Public Property ParentId As String
  overload: EasyPost.Models.Shared.BaseUser.ParentId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: parent_id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.Shared.BaseUser.Password
  commentId: P:EasyPost.Models.Shared.BaseUser.Password
  id: Password
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: BaseUser.Password
  fullName: EasyPost.Models.Shared.BaseUser.Password
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Password
    path: Models/Shared/BaseUser.cs
    startLine: 23
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("password")]

      public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("password")>

      Public Property Password As String
  overload: EasyPost.Models.Shared.BaseUser.Password*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: password
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.Shared.BaseUser.PasswordConfirmation
  commentId: P:EasyPost.Models.Shared.BaseUser.PasswordConfirmation
  id: PasswordConfirmation
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: PasswordConfirmation
  nameWithType: BaseUser.PasswordConfirmation
  fullName: EasyPost.Models.Shared.BaseUser.PasswordConfirmation
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PasswordConfirmation
    path: Models/Shared/BaseUser.cs
    startLine: 25
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("password_confirmation")]

      public string PasswordConfirmation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("password_confirmation")>

      Public Property PasswordConfirmation As String
  overload: EasyPost.Models.Shared.BaseUser.PasswordConfirmation*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: password_confirmation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.Shared.BaseUser.PhoneNumber
  commentId: P:EasyPost.Models.Shared.BaseUser.PhoneNumber
  id: PhoneNumber
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: PhoneNumber
  nameWithType: BaseUser.PhoneNumber
  fullName: EasyPost.Models.Shared.BaseUser.PhoneNumber
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PhoneNumber
    path: Models/Shared/BaseUser.cs
    startLine: 27
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("phone_number")]

      public string PhoneNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("phone_number")>

      Public Property PhoneNumber As String
  overload: EasyPost.Models.Shared.BaseUser.PhoneNumber*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: phone_number
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.Shared.BaseUser.PricePerShipment
  commentId: P:EasyPost.Models.Shared.BaseUser.PricePerShipment
  id: PricePerShipment
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: PricePerShipment
  nameWithType: BaseUser.PricePerShipment
  fullName: EasyPost.Models.Shared.BaseUser.PricePerShipment
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PricePerShipment
    path: Models/Shared/BaseUser.cs
    startLine: 29
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("price_per_shipment")]

      public string PricePerShipment { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("price_per_shipment")>

      Public Property PricePerShipment As String
  overload: EasyPost.Models.Shared.BaseUser.PricePerShipment*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: price_per_shipment
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.Shared.BaseUser.RechargeAmount
  commentId: P:EasyPost.Models.Shared.BaseUser.RechargeAmount
  id: RechargeAmount
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: RechargeAmount
  nameWithType: BaseUser.RechargeAmount
  fullName: EasyPost.Models.Shared.BaseUser.RechargeAmount
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: RechargeAmount
    path: Models/Shared/BaseUser.cs
    startLine: 31
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("recharge_amount")]

      public string RechargeAmount { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("recharge_amount")>

      Public Property RechargeAmount As String
  overload: EasyPost.Models.Shared.BaseUser.RechargeAmount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: recharge_amount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.Shared.BaseUser.RechargeThreshold
  commentId: P:EasyPost.Models.Shared.BaseUser.RechargeThreshold
  id: RechargeThreshold
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: RechargeThreshold
  nameWithType: BaseUser.RechargeThreshold
  fullName: EasyPost.Models.Shared.BaseUser.RechargeThreshold
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: RechargeThreshold
    path: Models/Shared/BaseUser.cs
    startLine: 33
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("recharge_threshold")]

      public string RechargeThreshold { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("recharge_threshold")>

      Public Property RechargeThreshold As String
  overload: EasyPost.Models.Shared.BaseUser.RechargeThreshold*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: recharge_threshold
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasyPost.Models.Shared.BaseUser.SecondaryRechargeAmount
  commentId: P:EasyPost.Models.Shared.BaseUser.SecondaryRechargeAmount
  id: SecondaryRechargeAmount
  parent: EasyPost.Models.Shared.BaseUser
  langs:
  - csharp
  - vb
  name: SecondaryRechargeAmount
  nameWithType: BaseUser.SecondaryRechargeAmount
  fullName: EasyPost.Models.Shared.BaseUser.SecondaryRechargeAmount
  type: Property
  source:
    remote:
      path: EasyPost/Models/Shared/BaseUser.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: SecondaryRechargeAmount
    path: Models/Shared/BaseUser.cs
    startLine: 35
  assemblies:
  - EasyPost
  namespace: EasyPost.Models.Shared
  syntax:
    content: >-
      [JsonProperty("secondary_recharge_amount")]

      public string SecondaryRechargeAmount { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("secondary_recharge_amount")>

      Public Property SecondaryRechargeAmount As String
  overload: EasyPost.Models.Shared.BaseUser.SecondaryRechargeAmount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: secondary_recharge_amount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EasyPost.Models.Shared
  commentId: N:EasyPost.Models.Shared
  name: EasyPost.Models.Shared
  nameWithType: EasyPost.Models.Shared
  fullName: EasyPost.Models.Shared
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EasyPost._base.WithClient
  commentId: T:EasyPost._base.WithClient
  parent: EasyPost._base
  name: WithClient
  nameWithType: WithClient
  fullName: EasyPost._base.WithClient
- uid: EasyPost._base.EasyPostObject
  commentId: T:EasyPost._base.EasyPostObject
  parent: EasyPost._base
  name: EasyPostObject
  nameWithType: EasyPostObject
  fullName: EasyPost._base.EasyPostObject
- uid: EasyPost._base.IEasyPostObject
  commentId: T:EasyPost._base.IEasyPostObject
  parent: EasyPost._base
  name: IEasyPostObject
  nameWithType: IEasyPostObject
  fullName: EasyPost._base.IEasyPostObject
- uid: EasyPost._base.EasyPostObject.CreatedAt
  commentId: P:EasyPost._base.EasyPostObject.CreatedAt
  parent: EasyPost._base.EasyPostObject
  name: CreatedAt
  nameWithType: EasyPostObject.CreatedAt
  fullName: EasyPost._base.EasyPostObject.CreatedAt
- uid: EasyPost._base.EasyPostObject.Id
  commentId: P:EasyPost._base.EasyPostObject.Id
  parent: EasyPost._base.EasyPostObject
  name: Id
  nameWithType: EasyPostObject.Id
  fullName: EasyPost._base.EasyPostObject.Id
- uid: EasyPost._base.EasyPostObject.Mode
  commentId: P:EasyPost._base.EasyPostObject.Mode
  parent: EasyPost._base.EasyPostObject
  name: Mode
  nameWithType: EasyPostObject.Mode
  fullName: EasyPost._base.EasyPostObject.Mode
- uid: EasyPost._base.EasyPostObject.UpdatedAt
  commentId: P:EasyPost._base.EasyPostObject.UpdatedAt
  parent: EasyPost._base.EasyPostObject
  name: UpdatedAt
  nameWithType: EasyPostObject.UpdatedAt
  fullName: EasyPost._base.EasyPostObject.UpdatedAt
- uid: EasyPost._base.EasyPostObject.Equals(System.Object)
  commentId: M:EasyPost._base.EasyPostObject.Equals(System.Object)
  parent: EasyPost._base.EasyPostObject
  isExternal: true
  name: Equals(Object)
  nameWithType: EasyPostObject.Equals(Object)
  fullName: EasyPost._base.EasyPostObject.Equals(System.Object)
  spec.csharp:
  - uid: EasyPost._base.EasyPostObject.Equals(System.Object)
    name: Equals
    nameWithType: EasyPostObject.Equals
    fullName: EasyPost._base.EasyPostObject.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostObject.Equals(System.Object)
    name: Equals
    nameWithType: EasyPostObject.Equals
    fullName: EasyPost._base.EasyPostObject.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.EasyPostObject.GetHashCode
  commentId: M:EasyPost._base.EasyPostObject.GetHashCode
  parent: EasyPost._base.EasyPostObject
  name: GetHashCode()
  nameWithType: EasyPostObject.GetHashCode()
  fullName: EasyPost._base.EasyPostObject.GetHashCode()
  spec.csharp:
  - uid: EasyPost._base.EasyPostObject.GetHashCode
    name: GetHashCode
    nameWithType: EasyPostObject.GetHashCode
    fullName: EasyPost._base.EasyPostObject.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostObject.GetHashCode
    name: GetHashCode
    nameWithType: EasyPostObject.GetHashCode
    fullName: EasyPost._base.EasyPostObject.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.EasyPostObject
  isExternal: true
  name: Update<T>(Method, String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: EasyPostObject.Update<T>(Method, String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.EasyPostObject.Update<T>(RestSharp.Method, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: EasyPostObject.Update(Of T)(Method, String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.EasyPostObject.Update(Of T)(RestSharp.Method, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Update(Of T)(Method, String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Update<T>
    nameWithType: EasyPostObject.Update<T>
    fullName: EasyPost._base.EasyPostObject.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.EasyPostObject.Update``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Update(Of T)
    nameWithType: EasyPostObject.Update(Of T)
    fullName: EasyPost._base.EasyPostObject.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Create<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Create<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Create<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Create(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Create(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Create(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Create<T>
    nameWithType: WithClient.Create<T>
    fullName: EasyPost._base.WithClient.Create<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Create``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Create(Of T)
    nameWithType: WithClient.Create(Of T)
    fullName: EasyPost._base.WithClient.Create(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: CreateNoResponse(String, Dictionary<String, Object>, ApiVersion)
  nameWithType: WithClient.CreateNoResponse(String, Dictionary<String, Object>, ApiVersion)
  fullName: EasyPost._base.WithClient.CreateNoResponse(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.CreateNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  fullName.vb: EasyPost._base.WithClient.CreateNoResponse(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), EasyPost._base.ApiVersion)
  name.vb: CreateNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: CreateNoResponse
    nameWithType: WithClient.CreateNoResponse
    fullName: EasyPost._base.WithClient.CreateNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.CreateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: CreateNoResponse
    nameWithType: WithClient.CreateNoResponse
    fullName: EasyPost._base.WithClient.CreateNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Delete<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Delete<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Delete<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Delete(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Delete(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Delete(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Delete<T>
    nameWithType: WithClient.Delete<T>
    fullName: EasyPost._base.WithClient.Delete<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Delete(Of T)
    nameWithType: WithClient.Delete(Of T)
    fullName: EasyPost._base.WithClient.Delete(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: DeleteNoResponse(String, Dictionary<String, Object>, ApiVersion)
  nameWithType: WithClient.DeleteNoResponse(String, Dictionary<String, Object>, ApiVersion)
  fullName: EasyPost._base.WithClient.DeleteNoResponse(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.DeleteNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  fullName.vb: EasyPost._base.WithClient.DeleteNoResponse(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), EasyPost._base.ApiVersion)
  name.vb: DeleteNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: DeleteNoResponse
    nameWithType: WithClient.DeleteNoResponse
    fullName: EasyPost._base.WithClient.DeleteNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.DeleteNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: DeleteNoResponse
    nameWithType: WithClient.DeleteNoResponse
    fullName: EasyPost._base.WithClient.DeleteNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Get<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Get<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Get<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Get(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Get(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Get(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Get<T>
    nameWithType: WithClient.Get<T>
    fullName: EasyPost._base.WithClient.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Get(Of T)
    nameWithType: WithClient.Get(Of T)
    fullName: EasyPost._base.WithClient.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: List<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.List<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.List<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.List(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.List(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: List(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: List<T>
    nameWithType: WithClient.List<T>
    fullName: EasyPost._base.WithClient.List<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.List``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: List(Of T)
    nameWithType: WithClient.List(Of T)
    fullName: EasyPost._base.WithClient.List(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Request<T>(Method, String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Request<T>(Method, String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Request<T>(RestSharp.Method, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Request(Of T)(Method, String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Request(Of T)(RestSharp.Method, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Request(Of T)(Method, String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Request<T>
    nameWithType: WithClient.Request<T>
    fullName: EasyPost._base.WithClient.Request<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Request``1(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Request(Of T)
    nameWithType: WithClient.Request(Of T)
    fullName: EasyPost._base.WithClient.Request(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Request(Method, String, Dictionary<String, Object>, ApiVersion)
  nameWithType: WithClient.Request(Method, String, Dictionary<String, Object>, ApiVersion)
  fullName: EasyPost._base.WithClient.Request(RestSharp.Method, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Request(Method, String, Dictionary(Of String, Object), ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Request(RestSharp.Method, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), EasyPost._base.ApiVersion)
  name.vb: Request(Method, String, Dictionary(Of String, Object), ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: Request
    nameWithType: WithClient.Request
    fullName: EasyPost._base.WithClient.Request
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Request(RestSharp.Method,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: Request
    nameWithType: WithClient.Request
    fullName: EasyPost._base.WithClient.Request
  - name: (
    nameWithType: (
    fullName: (
  - uid: RestSharp.Method
    name: Method
    nameWithType: Method
    fullName: RestSharp.Method
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: Update<T>(String, Dictionary<String, Object>, String, ApiVersion)
  nameWithType: WithClient.Update<T>(String, Dictionary<String, Object>, String, ApiVersion)
  fullName: EasyPost._base.WithClient.Update<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.Update(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  fullName.vb: EasyPost._base.WithClient.Update(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, EasyPost._base.ApiVersion)
  name.vb: Update(Of T)(String, Dictionary(Of String, Object), String, ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Update<T>
    nameWithType: WithClient.Update<T>
    fullName: EasyPost._base.WithClient.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.Update``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,EasyPost._base.ApiVersion)
    name: Update(Of T)
    nameWithType: WithClient.Update(Of T)
    fullName: EasyPost._base.WithClient.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  commentId: M:EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
  parent: EasyPost._base.WithClient
  isExternal: true
  name: UpdateNoResponse(String, Dictionary<String, Object>, ApiVersion)
  nameWithType: WithClient.UpdateNoResponse(String, Dictionary<String, Object>, ApiVersion)
  fullName: EasyPost._base.WithClient.UpdateNoResponse(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>, EasyPost._base.ApiVersion)
  nameWithType.vb: WithClient.UpdateNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  fullName.vb: EasyPost._base.WithClient.UpdateNoResponse(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object), EasyPost._base.ApiVersion)
  name.vb: UpdateNoResponse(String, Dictionary(Of String, Object), ApiVersion)
  spec.csharp:
  - uid: EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: UpdateNoResponse
    nameWithType: WithClient.UpdateNoResponse
    fullName: EasyPost._base.WithClient.UpdateNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost._base.WithClient.UpdateNoResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},EasyPost._base.ApiVersion)
    name: UpdateNoResponse
    nameWithType: WithClient.UpdateNoResponse
    fullName: EasyPost._base.WithClient.UpdateNoResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EasyPost._base.ApiVersion
    name: ApiVersion
    nameWithType: ApiVersion
    fullName: EasyPost._base.ApiVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasyPost._base
  commentId: N:EasyPost._base
  name: EasyPost._base
  nameWithType: EasyPost._base
  fullName: EasyPost._base
- uid: EasyPost.Models.Shared.BaseUser.ApiKeys*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.ApiKeys
  name: ApiKeys
  nameWithType: BaseUser.ApiKeys
  fullName: EasyPost.Models.Shared.BaseUser.ApiKeys
- uid: System.Collections.Generic.List{EasyPost.Models.API.ApiKey}
  commentId: T:System.Collections.Generic.List{EasyPost.Models.API.ApiKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ApiKey>
  nameWithType: List<ApiKey>
  fullName: System.Collections.Generic.List<EasyPost.Models.API.ApiKey>
  nameWithType.vb: List(Of ApiKey)
  fullName.vb: System.Collections.Generic.List(Of EasyPost.Models.API.ApiKey)
  name.vb: List(Of ApiKey)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EasyPost.Models.API.ApiKey
    name: ApiKey
    nameWithType: ApiKey
    fullName: EasyPost.Models.API.ApiKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EasyPost.Models.API.ApiKey
    name: ApiKey
    nameWithType: ApiKey
    fullName: EasyPost.Models.API.ApiKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EasyPost.Models.Shared.BaseUser.Balance*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.Balance
  name: Balance
  nameWithType: BaseUser.Balance
  fullName: EasyPost.Models.Shared.BaseUser.Balance
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EasyPost.Models.Shared.BaseUser.Children*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.Children
  name: Children
  nameWithType: BaseUser.Children
  fullName: EasyPost.Models.Shared.BaseUser.Children
- uid: System.Collections.Generic.List{EasyPost.Models.API.User}
  commentId: T:System.Collections.Generic.List{EasyPost.Models.API.User}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<User>
  nameWithType: List<User>
  fullName: System.Collections.Generic.List<EasyPost.Models.API.User>
  nameWithType.vb: List(Of User)
  fullName.vb: System.Collections.Generic.List(Of EasyPost.Models.API.User)
  name.vb: List(Of User)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EasyPost.Models.API.User
    name: User
    nameWithType: User
    fullName: EasyPost.Models.API.User
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EasyPost.Models.API.User
    name: User
    nameWithType: User
    fullName: EasyPost.Models.API.User
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Models.Shared.BaseUser.Email*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.Email
  name: Email
  nameWithType: BaseUser.Email
  fullName: EasyPost.Models.Shared.BaseUser.Email
- uid: EasyPost.Models.Shared.BaseUser.Name*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.Name
  name: Name
  nameWithType: BaseUser.Name
  fullName: EasyPost.Models.Shared.BaseUser.Name
- uid: EasyPost.Models.Shared.BaseUser.ParentId*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.ParentId
  name: ParentId
  nameWithType: BaseUser.ParentId
  fullName: EasyPost.Models.Shared.BaseUser.ParentId
- uid: EasyPost.Models.Shared.BaseUser.Password*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.Password
  name: Password
  nameWithType: BaseUser.Password
  fullName: EasyPost.Models.Shared.BaseUser.Password
- uid: EasyPost.Models.Shared.BaseUser.PasswordConfirmation*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.PasswordConfirmation
  name: PasswordConfirmation
  nameWithType: BaseUser.PasswordConfirmation
  fullName: EasyPost.Models.Shared.BaseUser.PasswordConfirmation
- uid: EasyPost.Models.Shared.BaseUser.PhoneNumber*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.PhoneNumber
  name: PhoneNumber
  nameWithType: BaseUser.PhoneNumber
  fullName: EasyPost.Models.Shared.BaseUser.PhoneNumber
- uid: EasyPost.Models.Shared.BaseUser.PricePerShipment*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.PricePerShipment
  name: PricePerShipment
  nameWithType: BaseUser.PricePerShipment
  fullName: EasyPost.Models.Shared.BaseUser.PricePerShipment
- uid: EasyPost.Models.Shared.BaseUser.RechargeAmount*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.RechargeAmount
  name: RechargeAmount
  nameWithType: BaseUser.RechargeAmount
  fullName: EasyPost.Models.Shared.BaseUser.RechargeAmount
- uid: EasyPost.Models.Shared.BaseUser.RechargeThreshold*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.RechargeThreshold
  name: RechargeThreshold
  nameWithType: BaseUser.RechargeThreshold
  fullName: EasyPost.Models.Shared.BaseUser.RechargeThreshold
- uid: EasyPost.Models.Shared.BaseUser.SecondaryRechargeAmount*
  commentId: Overload:EasyPost.Models.Shared.BaseUser.SecondaryRechargeAmount
  name: SecondaryRechargeAmount
  nameWithType: BaseUser.SecondaryRechargeAmount
  fullName: EasyPost.Models.Shared.BaseUser.SecondaryRechargeAmount
