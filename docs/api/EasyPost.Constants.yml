### YamlMime:ManagedReference
items:
- uid: EasyPost.Constants
  commentId: T:EasyPost.Constants
  id: Constants
  parent: EasyPost
  children:
  - EasyPost.Constants.EasyPostExceptionType(System.Net.HttpStatusCode)
  - EasyPost.Constants.GetEasyPostExceptionType(System.Int32)
  - EasyPost.Constants.GetEasyPostExceptionType(System.Net.HttpStatusCode)
  langs:
  - csharp
  - vb
  name: Constants
  nameWithType: Constants
  fullName: EasyPost.Constants
  type: Class
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Constants
    path: Constants.cs
    startLine: 8
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public static class Constants
    content.vb: Public Module Constants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EasyPost.Constants.EasyPostExceptionType(System.Net.HttpStatusCode)
  commentId: M:EasyPost.Constants.EasyPostExceptionType(System.Net.HttpStatusCode)
  id: EasyPostExceptionType(System.Net.HttpStatusCode)
  isExtensionMethod: true
  parent: EasyPost.Constants
  langs:
  - csharp
  - vb
  name: EasyPostExceptionType(HttpStatusCode)
  nameWithType: Constants.EasyPostExceptionType(HttpStatusCode)
  fullName: EasyPost.Constants.EasyPostExceptionType(System.Net.HttpStatusCode)
  type: Method
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: EasyPostExceptionType
    path: Constants.cs
    startLine: 39
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public static Type EasyPostExceptionType(this HttpStatusCode statusCode)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
    return:
      type: System.Type
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EasyPostExceptionType(statusCode As HttpStatusCode) As Type
  overload: EasyPost.Constants.EasyPostExceptionType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EasyPost.Constants.GetEasyPostExceptionType(System.Int32)
  commentId: M:EasyPost.Constants.GetEasyPostExceptionType(System.Int32)
  id: GetEasyPostExceptionType(System.Int32)
  parent: EasyPost.Constants
  langs:
  - csharp
  - vb
  name: GetEasyPostExceptionType(Int32)
  nameWithType: Constants.GetEasyPostExceptionType(Int32)
  fullName: EasyPost.Constants.GetEasyPostExceptionType(System.Int32)
  type: Method
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: GetEasyPostExceptionType
    path: Constants.cs
    startLine: 41
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public static Type GetEasyPostExceptionType(int statusCode)
    parameters:
    - id: statusCode
      type: System.Int32
    return:
      type: System.Type
    content.vb: Public Shared Function GetEasyPostExceptionType(statusCode As Integer) As Type
  overload: EasyPost.Constants.GetEasyPostExceptionType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EasyPost.Constants.GetEasyPostExceptionType(System.Net.HttpStatusCode)
  commentId: M:EasyPost.Constants.GetEasyPostExceptionType(System.Net.HttpStatusCode)
  id: GetEasyPostExceptionType(System.Net.HttpStatusCode)
  parent: EasyPost.Constants
  langs:
  - csharp
  - vb
  name: GetEasyPostExceptionType(HttpStatusCode)
  nameWithType: Constants.GetEasyPostExceptionType(HttpStatusCode)
  fullName: EasyPost.Constants.GetEasyPostExceptionType(System.Net.HttpStatusCode)
  type: Method
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: GetEasyPostExceptionType
    path: Constants.cs
    startLine: 64
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public static Type GetEasyPostExceptionType(HttpStatusCode statusCode)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
    return:
      type: System.Type
    content.vb: Public Shared Function GetEasyPostExceptionType(statusCode As HttpStatusCode) As Type
  overload: EasyPost.Constants.GetEasyPostExceptionType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EasyPost
  commentId: N:EasyPost
  name: EasyPost
  nameWithType: EasyPost
  fullName: EasyPost
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasyPost.Constants.EasyPostExceptionType*
  commentId: Overload:EasyPost.Constants.EasyPostExceptionType
  name: EasyPostExceptionType
  nameWithType: Constants.EasyPostExceptionType
  fullName: EasyPost.Constants.EasyPostExceptionType
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: EasyPost.Constants.GetEasyPostExceptionType*
  commentId: Overload:EasyPost.Constants.GetEasyPostExceptionType
  name: GetEasyPostExceptionType
  nameWithType: Constants.GetEasyPostExceptionType
  fullName: EasyPost.Constants.GetEasyPostExceptionType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
