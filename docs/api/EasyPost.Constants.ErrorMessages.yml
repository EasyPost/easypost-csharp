### YamlMime:ManagedReference
items:
- uid: EasyPost.Constants.ErrorMessages
  commentId: T:EasyPost.Constants.ErrorMessages
  id: Constants.ErrorMessages
  parent: EasyPost
  children:
  - EasyPost.Constants.ErrorMessages.ApiDidNotReturnErrorDetails
  - EasyPost.Constants.ErrorMessages.CouldNotPassClient
  - EasyPost.Constants.ErrorMessages.InvalidApiKeyType
  - EasyPost.Constants.ErrorMessages.InvalidParameter
  - EasyPost.Constants.ErrorMessages.InvalidWebhookSignature
  - EasyPost.Constants.ErrorMessages.JsonDeserializationError
  - EasyPost.Constants.ErrorMessages.JsonNoDataToDeserialize
  - EasyPost.Constants.ErrorMessages.JsonSerializationError
  - EasyPost.Constants.ErrorMessages.MissingProperty
  - EasyPost.Constants.ErrorMessages.MissingRequiredParameter
  - EasyPost.Constants.ErrorMessages.NoObjectFound
  - EasyPost.Constants.ErrorMessages.NoPaymentMethods
  - EasyPost.Constants.ErrorMessages.NullObjectComparison
  - EasyPost.Constants.ErrorMessages.PaymentNotSetUp
  - EasyPost.Constants.ErrorMessages.UnexpectedHttpStatusCode
  langs:
  - csharp
  - vb
  name: Constants.ErrorMessages
  nameWithType: Constants.ErrorMessages
  fullName: EasyPost.Constants.ErrorMessages
  type: Class
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ErrorMessages
    path: Constants.cs
    startLine: 67
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public static class ErrorMessages
    content.vb: Public Module ErrorMessages
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EasyPost.Constants.ErrorMessages.InvalidApiKeyType
  commentId: F:EasyPost.Constants.ErrorMessages.InvalidApiKeyType
  id: InvalidApiKeyType
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: InvalidApiKeyType
  nameWithType: Constants.ErrorMessages.InvalidApiKeyType
  fullName: EasyPost.Constants.ErrorMessages.InvalidApiKeyType
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: InvalidApiKeyType
    path: Constants.cs
    startLine: 69
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public const string InvalidApiKeyType = "Invalid API key type."
    return:
      type: System.String
    content.vb: Public Const InvalidApiKeyType As String = "Invalid API key type."
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.InvalidParameter
  commentId: F:EasyPost.Constants.ErrorMessages.InvalidParameter
  id: InvalidParameter
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: InvalidParameter
  nameWithType: Constants.ErrorMessages.InvalidParameter
  fullName: EasyPost.Constants.ErrorMessages.InvalidParameter
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: InvalidParameter
    path: Constants.cs
    startLine: 70
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: 'public const string InvalidParameter = "Invalid parameter: {0}."'
    return:
      type: System.String
    content.vb: 'Public Const InvalidParameter As String = "Invalid parameter: {0}."'
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.InvalidWebhookSignature
  commentId: F:EasyPost.Constants.ErrorMessages.InvalidWebhookSignature
  id: InvalidWebhookSignature
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: InvalidWebhookSignature
  nameWithType: Constants.ErrorMessages.InvalidWebhookSignature
  fullName: EasyPost.Constants.ErrorMessages.InvalidWebhookSignature
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: InvalidWebhookSignature
    path: Constants.cs
    startLine: 71
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public const string InvalidWebhookSignature = "Webhook does not contain a valid HMAC signature."
    return:
      type: System.String
    content.vb: Public Const InvalidWebhookSignature As String = "Webhook does not contain a valid HMAC signature."
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.JsonDeserializationError
  commentId: F:EasyPost.Constants.ErrorMessages.JsonDeserializationError
  id: JsonDeserializationError
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: JsonDeserializationError
  nameWithType: Constants.ErrorMessages.JsonDeserializationError
  fullName: EasyPost.Constants.ErrorMessages.JsonDeserializationError
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: JsonDeserializationError
    path: Constants.cs
    startLine: 72
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public const string JsonDeserializationError = "Error deserializing JSON into object of type {0}."
    return:
      type: System.String
    content.vb: Public Const JsonDeserializationError As String = "Error deserializing JSON into object of type {0}."
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.JsonNoDataToDeserialize
  commentId: F:EasyPost.Constants.ErrorMessages.JsonNoDataToDeserialize
  id: JsonNoDataToDeserialize
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: JsonNoDataToDeserialize
  nameWithType: Constants.ErrorMessages.JsonNoDataToDeserialize
  fullName: EasyPost.Constants.ErrorMessages.JsonNoDataToDeserialize
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: JsonNoDataToDeserialize
    path: Constants.cs
    startLine: 73
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public const string JsonNoDataToDeserialize = "No data to deserialize."
    return:
      type: System.String
    content.vb: Public Const JsonNoDataToDeserialize As String = "No data to deserialize."
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.JsonSerializationError
  commentId: F:EasyPost.Constants.ErrorMessages.JsonSerializationError
  id: JsonSerializationError
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: JsonSerializationError
  nameWithType: Constants.ErrorMessages.JsonSerializationError
  fullName: EasyPost.Constants.ErrorMessages.JsonSerializationError
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: JsonSerializationError
    path: Constants.cs
    startLine: 74
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public const string JsonSerializationError = "Error serializing {0} object into JSON."
    return:
      type: System.String
    content.vb: Public Const JsonSerializationError As String = "Error serializing {0} object into JSON."
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.MissingProperty
  commentId: F:EasyPost.Constants.ErrorMessages.MissingProperty
  id: MissingProperty
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: MissingProperty
  nameWithType: Constants.ErrorMessages.MissingProperty
  fullName: EasyPost.Constants.ErrorMessages.MissingProperty
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: MissingProperty
    path: Constants.cs
    startLine: 75
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: 'public const string MissingProperty = "{0} object is missing attribute: {0}."'
    return:
      type: System.String
    content.vb: 'Public Const MissingProperty As String = "{0} object is missing attribute: {0}."'
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.MissingRequiredParameter
  commentId: F:EasyPost.Constants.ErrorMessages.MissingRequiredParameter
  id: MissingRequiredParameter
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: MissingRequiredParameter
  nameWithType: Constants.ErrorMessages.MissingRequiredParameter
  fullName: EasyPost.Constants.ErrorMessages.MissingRequiredParameter
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: MissingRequiredParameter
    path: Constants.cs
    startLine: 76
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: 'public const string MissingRequiredParameter = "Missing required parameter: {0}."'
    return:
      type: System.String
    content.vb: 'Public Const MissingRequiredParameter As String = "Missing required parameter: {0}."'
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.NoObjectFound
  commentId: F:EasyPost.Constants.ErrorMessages.NoObjectFound
  id: NoObjectFound
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: NoObjectFound
  nameWithType: Constants.ErrorMessages.NoObjectFound
  fullName: EasyPost.Constants.ErrorMessages.NoObjectFound
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: NoObjectFound
    path: Constants.cs
    startLine: 77
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public const string NoObjectFound = "No {0} found."
    return:
      type: System.String
    content.vb: Public Const NoObjectFound As String = "No {0} found."
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.NoPaymentMethods
  commentId: F:EasyPost.Constants.ErrorMessages.NoPaymentMethods
  id: NoPaymentMethods
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: NoPaymentMethods
  nameWithType: Constants.ErrorMessages.NoPaymentMethods
  fullName: EasyPost.Constants.ErrorMessages.NoPaymentMethods
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: NoPaymentMethods
    path: Constants.cs
    startLine: 78
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public const string NoPaymentMethods = "No payment methods are set up. Please add a payment method and try again."
    return:
      type: System.String
    content.vb: Public Const NoPaymentMethods As String = "No payment methods are set up. Please add a payment method and try again."
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.NullObjectComparison
  commentId: F:EasyPost.Constants.ErrorMessages.NullObjectComparison
  id: NullObjectComparison
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: NullObjectComparison
  nameWithType: Constants.ErrorMessages.NullObjectComparison
  fullName: EasyPost.Constants.ErrorMessages.NullObjectComparison
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: NullObjectComparison
    path: Constants.cs
    startLine: 79
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public const string NullObjectComparison = "Cannot compare null objects."
    return:
      type: System.String
    content.vb: Public Const NullObjectComparison As String = "Cannot compare null objects."
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.PaymentNotSetUp
  commentId: F:EasyPost.Constants.ErrorMessages.PaymentNotSetUp
  id: PaymentNotSetUp
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: PaymentNotSetUp
  nameWithType: Constants.ErrorMessages.PaymentNotSetUp
  fullName: EasyPost.Constants.ErrorMessages.PaymentNotSetUp
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: PaymentNotSetUp
    path: Constants.cs
    startLine: 80
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public const string PaymentNotSetUp = "This payment method is not set up."
    return:
      type: System.String
    content.vb: Public Const PaymentNotSetUp As String = "This payment method is not set up."
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.UnexpectedHttpStatusCode
  commentId: F:EasyPost.Constants.ErrorMessages.UnexpectedHttpStatusCode
  id: UnexpectedHttpStatusCode
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: UnexpectedHttpStatusCode
  nameWithType: Constants.ErrorMessages.UnexpectedHttpStatusCode
  fullName: EasyPost.Constants.ErrorMessages.UnexpectedHttpStatusCode
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: UnexpectedHttpStatusCode
    path: Constants.cs
    startLine: 81
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: 'public const string UnexpectedHttpStatusCode = "Unexpected HTTP status code: {0}."'
    return:
      type: System.String
    content.vb: 'Public Const UnexpectedHttpStatusCode As String = "Unexpected HTTP status code: {0}."'
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.ApiDidNotReturnErrorDetails
  commentId: F:EasyPost.Constants.ErrorMessages.ApiDidNotReturnErrorDetails
  id: ApiDidNotReturnErrorDetails
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: ApiDidNotReturnErrorDetails
  nameWithType: Constants.ErrorMessages.ApiDidNotReturnErrorDetails
  fullName: EasyPost.Constants.ErrorMessages.ApiDidNotReturnErrorDetails
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ApiDidNotReturnErrorDetails
    path: Constants.cs
    startLine: 82
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public const string ApiDidNotReturnErrorDetails = "API did not return error details."
    return:
      type: System.String
    content.vb: Public Const ApiDidNotReturnErrorDetails As String = "API did not return error details."
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EasyPost.Constants.ErrorMessages.CouldNotPassClient
  commentId: F:EasyPost.Constants.ErrorMessages.CouldNotPassClient
  id: CouldNotPassClient
  parent: EasyPost.Constants.ErrorMessages
  langs:
  - csharp
  - vb
  name: CouldNotPassClient
  nameWithType: Constants.ErrorMessages.CouldNotPassClient
  fullName: EasyPost.Constants.ErrorMessages.CouldNotPassClient
  type: Field
  source:
    remote:
      path: EasyPost/Constants.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CouldNotPassClient
    path: Constants.cs
    startLine: 83
  assemblies:
  - EasyPost
  namespace: EasyPost
  syntax:
    content: public const string CouldNotPassClient = "Could not pass client to {0}."
    return:
      type: System.String
    content.vb: Public Const CouldNotPassClient As String = "Could not pass client to {0}."
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EasyPost
  commentId: N:EasyPost
  name: EasyPost
  nameWithType: EasyPost
  fullName: EasyPost
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
