### YamlMime:ManagedReference
items:
- uid: EasyPost.Utilities.Enum
  commentId: T:EasyPost.Utilities.Enum
  id: Enum
  parent: EasyPost.Utilities
  children:
  - EasyPost.Utilities.Enum.#ctor(System.Int32)
  - EasyPost.Utilities.Enum.CompareTo(System.Object)
  - EasyPost.Utilities.Enum.Equals(System.Object)
  - EasyPost.Utilities.Enum.GetAll``1
  - EasyPost.Utilities.Enum.GetHashCode
  - EasyPost.Utilities.Enum.op_Equality(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  - EasyPost.Utilities.Enum.op_GreaterThan(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  - EasyPost.Utilities.Enum.op_GreaterThanOrEqual(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  - EasyPost.Utilities.Enum.op_Inequality(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  - EasyPost.Utilities.Enum.op_LessThan(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  - EasyPost.Utilities.Enum.op_LessThanOrEqual(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  - EasyPost.Utilities.Enum.ToString
  langs:
  - csharp
  - vb
  name: Enum
  nameWithType: Enum
  fullName: EasyPost.Utilities.Enum
  type: Class
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Enum
    path: Utilities/Enumeration.cs
    startLine: 18
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  summary: "\nA Java-like enum implementation for C#.\n"
  example: []
  syntax:
    content: 'public abstract class Enum : IComparable, IEnum'
    content.vb: >-
      Public MustInherit Class Enum

          Implements IComparable, IEnum
  inheritance:
  - System.Object
  derivedClasses:
  - EasyPost.Utilities.ValueEnum
  implements:
  - System.IComparable
  - EasyPost.Utilities.IEnum
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EasyPost.Utilities.Enum.#ctor(System.Int32)
  commentId: M:EasyPost.Utilities.Enum.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: EasyPost.Utilities.Enum
  langs:
  - csharp
  - vb
  name: Enum(Int32)
  nameWithType: Enum.Enum(Int32)
  fullName: EasyPost.Utilities.Enum.Enum(System.Int32)
  type: Constructor
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: .ctor
    path: Utilities/Enumeration.cs
    startLine: 23
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: protected Enum(int id)
    parameters:
    - id: id
      type: System.Int32
    content.vb: Protected Sub New(id As Integer)
  overload: EasyPost.Utilities.Enum.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EasyPost.Utilities.Enum.CompareTo(System.Object)
  commentId: M:EasyPost.Utilities.Enum.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: EasyPost.Utilities.Enum
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: Enum.CompareTo(Object)
  fullName: EasyPost.Utilities.Enum.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: CompareTo
    path: Utilities/Enumeration.cs
    startLine: 25
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: EasyPost.Utilities.Enum.CompareTo*
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EasyPost.Utilities.Enum.ToString
  commentId: M:EasyPost.Utilities.Enum.ToString
  id: ToString
  parent: EasyPost.Utilities.Enum
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Enum.ToString()
  fullName: EasyPost.Utilities.Enum.ToString()
  type: Method
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ToString
    path: Utilities/Enumeration.cs
    startLine: 27
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: EasyPost.Utilities.Enum.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EasyPost.Utilities.Enum.Equals(System.Object)
  commentId: M:EasyPost.Utilities.Enum.Equals(System.Object)
  id: Equals(System.Object)
  parent: EasyPost.Utilities.Enum
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Enum.Equals(Object)
  fullName: EasyPost.Utilities.Enum.Equals(System.Object)
  type: Method
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Equals
    path: Utilities/Enumeration.cs
    startLine: 29
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: EasyPost.Utilities.Enum.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EasyPost.Utilities.Enum.GetHashCode
  commentId: M:EasyPost.Utilities.Enum.GetHashCode
  id: GetHashCode
  parent: EasyPost.Utilities.Enum
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Enum.GetHashCode()
  fullName: EasyPost.Utilities.Enum.GetHashCode()
  type: Method
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: GetHashCode
    path: Utilities/Enumeration.cs
    startLine: 49
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: EasyPost.Utilities.Enum.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EasyPost.Utilities.Enum.op_Equality(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  commentId: M:EasyPost.Utilities.Enum.op_Equality(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  id: op_Equality(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  parent: EasyPost.Utilities.Enum
  langs:
  - csharp
  - vb
  name: Equality(Enum, Enum)
  nameWithType: Enum.Equality(Enum, Enum)
  fullName: EasyPost.Utilities.Enum.Equality(EasyPost.Utilities.Enum, EasyPost.Utilities.Enum)
  type: Operator
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: op_Equality
    path: Utilities/Enumeration.cs
    startLine: 58
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public static bool operator ==(Enum one, Enum two)
    parameters:
    - id: one
      type: EasyPost.Utilities.Enum
    - id: two
      type: EasyPost.Utilities.Enum
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(one As  Enum, two As  Enum) As Boolean
  overload: EasyPost.Utilities.Enum.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EasyPost.Utilities.Enum.op_Inequality(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  commentId: M:EasyPost.Utilities.Enum.op_Inequality(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  id: op_Inequality(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  parent: EasyPost.Utilities.Enum
  langs:
  - csharp
  - vb
  name: Inequality(Enum, Enum)
  nameWithType: Enum.Inequality(Enum, Enum)
  fullName: EasyPost.Utilities.Enum.Inequality(EasyPost.Utilities.Enum, EasyPost.Utilities.Enum)
  type: Operator
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: op_Inequality
    path: Utilities/Enumeration.cs
    startLine: 75
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public static bool operator !=(Enum one, Enum two)
    parameters:
    - id: one
      type: EasyPost.Utilities.Enum
    - id: two
      type: EasyPost.Utilities.Enum
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(one As  Enum, two As  Enum) As Boolean
  overload: EasyPost.Utilities.Enum.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EasyPost.Utilities.Enum.GetAll``1
  commentId: M:EasyPost.Utilities.Enum.GetAll``1
  id: GetAll``1
  parent: EasyPost.Utilities.Enum
  langs:
  - csharp
  - vb
  name: GetAll<T>()
  nameWithType: Enum.GetAll<T>()
  fullName: EasyPost.Utilities.Enum.GetAll<T>()
  type: Method
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: GetAll
    path: Utilities/Enumeration.cs
    startLine: 77
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: >-
      public static IEnumerable<T> GetAll<T>()

          where T : IEnum
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Shared Function GetAll(Of T As IEnum) As IEnumerable(Of T)
  overload: EasyPost.Utilities.Enum.GetAll*
  nameWithType.vb: Enum.GetAll(Of T)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EasyPost.Utilities.Enum.GetAll(Of T)()
  name.vb: GetAll(Of T)()
- uid: EasyPost.Utilities.Enum.op_LessThan(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  commentId: M:EasyPost.Utilities.Enum.op_LessThan(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  id: op_LessThan(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  parent: EasyPost.Utilities.Enum
  langs:
  - csharp
  - vb
  name: LessThan(Enum, Enum)
  nameWithType: Enum.LessThan(Enum, Enum)
  fullName: EasyPost.Utilities.Enum.LessThan(EasyPost.Utilities.Enum, EasyPost.Utilities.Enum)
  type: Operator
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: op_LessThan
    path: Utilities/Enumeration.cs
    startLine: 86
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public static bool operator <(Enum left, Enum right)
    parameters:
    - id: left
      type: EasyPost.Utilities.Enum
    - id: right
      type: EasyPost.Utilities.Enum
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <(left As  Enum, right As  Enum) As Boolean
  overload: EasyPost.Utilities.Enum.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EasyPost.Utilities.Enum.op_LessThanOrEqual(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  commentId: M:EasyPost.Utilities.Enum.op_LessThanOrEqual(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  id: op_LessThanOrEqual(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  parent: EasyPost.Utilities.Enum
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Enum, Enum)
  nameWithType: Enum.LessThanOrEqual(Enum, Enum)
  fullName: EasyPost.Utilities.Enum.LessThanOrEqual(EasyPost.Utilities.Enum, EasyPost.Utilities.Enum)
  type: Operator
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: op_LessThanOrEqual
    path: Utilities/Enumeration.cs
    startLine: 88
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public static bool operator <=(Enum left, Enum right)
    parameters:
    - id: left
      type: EasyPost.Utilities.Enum
    - id: right
      type: EasyPost.Utilities.Enum
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <=(left As  Enum, right As  Enum) As Boolean
  overload: EasyPost.Utilities.Enum.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EasyPost.Utilities.Enum.op_GreaterThan(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  commentId: M:EasyPost.Utilities.Enum.op_GreaterThan(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  id: op_GreaterThan(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  parent: EasyPost.Utilities.Enum
  langs:
  - csharp
  - vb
  name: GreaterThan(Enum, Enum)
  nameWithType: Enum.GreaterThan(Enum, Enum)
  fullName: EasyPost.Utilities.Enum.GreaterThan(EasyPost.Utilities.Enum, EasyPost.Utilities.Enum)
  type: Operator
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: op_GreaterThan
    path: Utilities/Enumeration.cs
    startLine: 90
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public static bool operator>(Enum left, Enum right)
    parameters:
    - id: left
      type: EasyPost.Utilities.Enum
    - id: right
      type: EasyPost.Utilities.Enum
    return:
      type: System.Boolean
    content.vb: Public Shared Operator>(left As  Enum, right As  Enum) As Boolean
  overload: EasyPost.Utilities.Enum.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EasyPost.Utilities.Enum.op_GreaterThanOrEqual(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  commentId: M:EasyPost.Utilities.Enum.op_GreaterThanOrEqual(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  id: op_GreaterThanOrEqual(EasyPost.Utilities.Enum,EasyPost.Utilities.Enum)
  parent: EasyPost.Utilities.Enum
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Enum, Enum)
  nameWithType: Enum.GreaterThanOrEqual(Enum, Enum)
  fullName: EasyPost.Utilities.Enum.GreaterThanOrEqual(EasyPost.Utilities.Enum, EasyPost.Utilities.Enum)
  type: Operator
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: op_GreaterThanOrEqual
    path: Utilities/Enumeration.cs
    startLine: 92
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public static bool operator >=(Enum left, Enum right)
    parameters:
    - id: left
      type: EasyPost.Utilities.Enum
    - id: right
      type: EasyPost.Utilities.Enum
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >=(left As  Enum, right As  Enum) As Boolean
  overload: EasyPost.Utilities.Enum.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EasyPost.Utilities
  commentId: N:EasyPost.Utilities
  name: EasyPost.Utilities
  nameWithType: EasyPost.Utilities
  fullName: EasyPost.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: EasyPost.Utilities.IEnum
  commentId: T:EasyPost.Utilities.IEnum
  parent: EasyPost.Utilities
  name: IEnum
  nameWithType: IEnum
  fullName: EasyPost.Utilities.IEnum
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasyPost.Utilities.Enum.#ctor*
  commentId: Overload:EasyPost.Utilities.Enum.#ctor
  name: Enum
  nameWithType: Enum.Enum
  fullName: EasyPost.Utilities.Enum.Enum
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EasyPost.Utilities.Enum.CompareTo*
  commentId: Overload:EasyPost.Utilities.Enum.CompareTo
  name: CompareTo
  nameWithType: Enum.CompareTo
  fullName: EasyPost.Utilities.Enum.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Utilities.Enum.ToString*
  commentId: Overload:EasyPost.Utilities.Enum.ToString
  name: ToString
  nameWithType: Enum.ToString
  fullName: EasyPost.Utilities.Enum.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Utilities.Enum.Equals*
  commentId: Overload:EasyPost.Utilities.Enum.Equals
  name: Equals
  nameWithType: Enum.Equals
  fullName: EasyPost.Utilities.Enum.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Utilities.Enum.GetHashCode*
  commentId: Overload:EasyPost.Utilities.Enum.GetHashCode
  name: GetHashCode
  nameWithType: Enum.GetHashCode
  fullName: EasyPost.Utilities.Enum.GetHashCode
- uid: EasyPost.Utilities.Enum.op_Equality*
  commentId: Overload:EasyPost.Utilities.Enum.op_Equality
  name: Equality
  nameWithType: Enum.Equality
  fullName: EasyPost.Utilities.Enum.Equality
- uid: EasyPost.Utilities.Enum
  commentId: T:EasyPost.Utilities.Enum
  parent: EasyPost.Utilities
  name: Enum
  nameWithType: Enum
  fullName: EasyPost.Utilities.Enum
- uid: EasyPost.Utilities.Enum.op_Inequality*
  commentId: Overload:EasyPost.Utilities.Enum.op_Inequality
  name: Inequality
  nameWithType: Enum.Inequality
  fullName: EasyPost.Utilities.Enum.Inequality
- uid: EasyPost.Utilities.Enum.GetAll*
  commentId: Overload:EasyPost.Utilities.Enum.GetAll
  name: GetAll
  nameWithType: Enum.GetAll
  fullName: EasyPost.Utilities.Enum.GetAll
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EasyPost.Utilities.Enum.op_LessThan*
  commentId: Overload:EasyPost.Utilities.Enum.op_LessThan
  name: LessThan
  nameWithType: Enum.LessThan
  fullName: EasyPost.Utilities.Enum.LessThan
- uid: EasyPost.Utilities.Enum.op_LessThanOrEqual*
  commentId: Overload:EasyPost.Utilities.Enum.op_LessThanOrEqual
  name: LessThanOrEqual
  nameWithType: Enum.LessThanOrEqual
  fullName: EasyPost.Utilities.Enum.LessThanOrEqual
- uid: EasyPost.Utilities.Enum.op_GreaterThan*
  commentId: Overload:EasyPost.Utilities.Enum.op_GreaterThan
  name: GreaterThan
  nameWithType: Enum.GreaterThan
  fullName: EasyPost.Utilities.Enum.GreaterThan
- uid: EasyPost.Utilities.Enum.op_GreaterThanOrEqual*
  commentId: Overload:EasyPost.Utilities.Enum.op_GreaterThanOrEqual
  name: GreaterThanOrEqual
  nameWithType: Enum.GreaterThanOrEqual
  fullName: EasyPost.Utilities.Enum.GreaterThanOrEqual
