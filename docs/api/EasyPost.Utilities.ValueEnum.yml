### YamlMime:ManagedReference
items:
- uid: EasyPost.Utilities.ValueEnum
  commentId: T:EasyPost.Utilities.ValueEnum
  id: ValueEnum
  parent: EasyPost.Utilities
  children:
  - EasyPost.Utilities.ValueEnum.#ctor(System.Int32,System.Object)
  - EasyPost.Utilities.ValueEnum.Equals(System.Object)
  - EasyPost.Utilities.ValueEnum.GetHashCode
  - EasyPost.Utilities.ValueEnum.ToString
  langs:
  - csharp
  - vb
  name: ValueEnum
  nameWithType: ValueEnum
  fullName: EasyPost.Utilities.ValueEnum
  type: Class
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ValueEnum
    path: Utilities/Enumeration.cs
    startLine: 98
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  summary: "\nAn enum that stores a value internally.\n"
  example: []
  syntax:
    content: 'public abstract class ValueEnum : Enum, IComparable, IEnum'
    content.vb: >-
      Public MustInherit Class ValueEnum

          Inherits

           Enum  Implements IComparable, IEnum
  inheritance:
  - System.Object
  - EasyPost.Utilities.Enum
  derivedClasses:
  - EasyPost._base.ApiVersion
  - EasyPost.Models.API.PaymentMethod.Priority
  - EasyPost.Models.API.PaymentMethodType
  - EasyPost.Models.API.SmartrateAccuracy
  implements:
  - System.IComparable
  - EasyPost.Utilities.IEnum
  inheritedMembers:
  - EasyPost.Utilities.Enum.CompareTo(System.Object)
  - EasyPost.Utilities.Enum.GetAll``1
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EasyPost.Utilities.ValueEnum.#ctor(System.Int32,System.Object)
  commentId: M:EasyPost.Utilities.ValueEnum.#ctor(System.Int32,System.Object)
  id: '#ctor(System.Int32,System.Object)'
  parent: EasyPost.Utilities.ValueEnum
  langs:
  - csharp
  - vb
  name: ValueEnum(Int32, Object)
  nameWithType: ValueEnum.ValueEnum(Int32, Object)
  fullName: EasyPost.Utilities.ValueEnum.ValueEnum(System.Int32, System.Object)
  type: Constructor
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: .ctor
    path: Utilities/Enumeration.cs
    startLine: 102
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: protected ValueEnum(int id, object value)
    parameters:
    - id: id
      type: System.Int32
    - id: value
      type: System.Object
    content.vb: Protected Sub New(id As Integer, value As Object)
  overload: EasyPost.Utilities.ValueEnum.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EasyPost.Utilities.ValueEnum.ToString
  commentId: M:EasyPost.Utilities.ValueEnum.ToString
  id: ToString
  parent: EasyPost.Utilities.ValueEnum
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ValueEnum.ToString()
  fullName: EasyPost.Utilities.ValueEnum.ToString()
  type: Method
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: ToString
    path: Utilities/Enumeration.cs
    startLine: 105
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: EasyPost.Utilities.Enum.ToString
  overload: EasyPost.Utilities.ValueEnum.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EasyPost.Utilities.ValueEnum.Equals(System.Object)
  commentId: M:EasyPost.Utilities.ValueEnum.Equals(System.Object)
  id: Equals(System.Object)
  parent: EasyPost.Utilities.ValueEnum
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ValueEnum.Equals(Object)
  fullName: EasyPost.Utilities.ValueEnum.Equals(System.Object)
  type: Method
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: Equals
    path: Utilities/Enumeration.cs
    startLine: 107
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: EasyPost.Utilities.Enum.Equals(System.Object)
  overload: EasyPost.Utilities.ValueEnum.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EasyPost.Utilities.ValueEnum.GetHashCode
  commentId: M:EasyPost.Utilities.ValueEnum.GetHashCode
  id: GetHashCode
  parent: EasyPost.Utilities.ValueEnum
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ValueEnum.GetHashCode()
  fullName: EasyPost.Utilities.ValueEnum.GetHashCode()
  type: Method
  source:
    remote:
      path: EasyPost/Utilities/Enumeration.cs
      branch: docs
      repo: git@github.com:EasyPost/easypost-csharp.git
    id: GetHashCode
    path: Utilities/Enumeration.cs
    startLine: 123
  assemblies:
  - EasyPost
  namespace: EasyPost.Utilities
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: EasyPost.Utilities.Enum.GetHashCode
  overload: EasyPost.Utilities.ValueEnum.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EasyPost.Utilities
  commentId: N:EasyPost.Utilities
  name: EasyPost.Utilities
  nameWithType: EasyPost.Utilities
  fullName: EasyPost.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EasyPost.Utilities.Enum
  commentId: T:EasyPost.Utilities.Enum
  parent: EasyPost.Utilities
  name: Enum
  nameWithType: Enum
  fullName: EasyPost.Utilities.Enum
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: EasyPost.Utilities.IEnum
  commentId: T:EasyPost.Utilities.IEnum
  parent: EasyPost.Utilities
  name: IEnum
  nameWithType: IEnum
  fullName: EasyPost.Utilities.IEnum
- uid: EasyPost.Utilities.Enum.CompareTo(System.Object)
  commentId: M:EasyPost.Utilities.Enum.CompareTo(System.Object)
  parent: EasyPost.Utilities.Enum
  isExternal: true
  name: CompareTo(Object)
  nameWithType: Enum.CompareTo(Object)
  fullName: EasyPost.Utilities.Enum.CompareTo(System.Object)
  spec.csharp:
  - uid: EasyPost.Utilities.Enum.CompareTo(System.Object)
    name: CompareTo
    nameWithType: Enum.CompareTo
    fullName: EasyPost.Utilities.Enum.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost.Utilities.Enum.CompareTo(System.Object)
    name: CompareTo
    nameWithType: Enum.CompareTo
    fullName: EasyPost.Utilities.Enum.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Utilities.Enum.GetAll``1
  commentId: M:EasyPost.Utilities.Enum.GetAll``1
  parent: EasyPost.Utilities.Enum
  name: GetAll<T>()
  nameWithType: Enum.GetAll<T>()
  fullName: EasyPost.Utilities.Enum.GetAll<T>()
  nameWithType.vb: Enum.GetAll(Of T)()
  fullName.vb: EasyPost.Utilities.Enum.GetAll(Of T)()
  name.vb: GetAll(Of T)()
  spec.csharp:
  - uid: EasyPost.Utilities.Enum.GetAll``1
    name: GetAll<T>
    nameWithType: Enum.GetAll<T>
    fullName: EasyPost.Utilities.Enum.GetAll<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost.Utilities.Enum.GetAll``1
    name: GetAll(Of T)
    nameWithType: Enum.GetAll(Of T)
    fullName: EasyPost.Utilities.Enum.GetAll(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasyPost.Utilities.ValueEnum.#ctor*
  commentId: Overload:EasyPost.Utilities.ValueEnum.#ctor
  name: ValueEnum
  nameWithType: ValueEnum.ValueEnum
  fullName: EasyPost.Utilities.ValueEnum.ValueEnum
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EasyPost.Utilities.Enum.ToString
  commentId: M:EasyPost.Utilities.Enum.ToString
  parent: EasyPost.Utilities.Enum
  name: ToString()
  nameWithType: Enum.ToString()
  fullName: EasyPost.Utilities.Enum.ToString()
  spec.csharp:
  - uid: EasyPost.Utilities.Enum.ToString
    name: ToString
    nameWithType: Enum.ToString
    fullName: EasyPost.Utilities.Enum.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost.Utilities.Enum.ToString
    name: ToString
    nameWithType: Enum.ToString
    fullName: EasyPost.Utilities.Enum.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Utilities.ValueEnum.ToString*
  commentId: Overload:EasyPost.Utilities.ValueEnum.ToString
  name: ToString
  nameWithType: ValueEnum.ToString
  fullName: EasyPost.Utilities.ValueEnum.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EasyPost.Utilities.Enum.Equals(System.Object)
  commentId: M:EasyPost.Utilities.Enum.Equals(System.Object)
  parent: EasyPost.Utilities.Enum
  isExternal: true
  name: Equals(Object)
  nameWithType: Enum.Equals(Object)
  fullName: EasyPost.Utilities.Enum.Equals(System.Object)
  spec.csharp:
  - uid: EasyPost.Utilities.Enum.Equals(System.Object)
    name: Equals
    nameWithType: Enum.Equals
    fullName: EasyPost.Utilities.Enum.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost.Utilities.Enum.Equals(System.Object)
    name: Equals
    nameWithType: Enum.Equals
    fullName: EasyPost.Utilities.Enum.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Utilities.ValueEnum.Equals*
  commentId: Overload:EasyPost.Utilities.ValueEnum.Equals
  name: Equals
  nameWithType: ValueEnum.Equals
  fullName: EasyPost.Utilities.ValueEnum.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EasyPost.Utilities.Enum.GetHashCode
  commentId: M:EasyPost.Utilities.Enum.GetHashCode
  parent: EasyPost.Utilities.Enum
  name: GetHashCode()
  nameWithType: Enum.GetHashCode()
  fullName: EasyPost.Utilities.Enum.GetHashCode()
  spec.csharp:
  - uid: EasyPost.Utilities.Enum.GetHashCode
    name: GetHashCode
    nameWithType: Enum.GetHashCode
    fullName: EasyPost.Utilities.Enum.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EasyPost.Utilities.Enum.GetHashCode
    name: GetHashCode
    nameWithType: Enum.GetHashCode
    fullName: EasyPost.Utilities.Enum.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EasyPost.Utilities.ValueEnum.GetHashCode*
  commentId: Overload:EasyPost.Utilities.ValueEnum.GetHashCode
  name: GetHashCode
  nameWithType: ValueEnum.GetHashCode
  fullName: EasyPost.Utilities.ValueEnum.GetHashCode
