name: CI

on:
  push:
    branches: [ master ]
  pull_request: ~

jobs:
  lint:
    runs-on: windows-2019
    steps:
      - name: Install dotnet-format
        run: dotnet tool install -g dotnet-format
      - uses: actions/checkout@v2
      - name: Check dotnet Style
        run: dotnet-format --check --exclude /
  NET_Tests:
    # derived from https://dev.to/felipetofoli/github-actions-for-net-full-framework-build-and-test-299h
    runs-on: windows-2019
    strategy:
      matrix:
        dotnet-version: [ 'Net35', 'Net40', 'NetCore31' ]
    steps:
      - uses: actions/checkout@v2
        # Set the project name, based on .NET version currently selected
      - name: Set up variables
        id: test_project
        run: echo "::set-output name=test_file::EasyPost.Tests.${{ matrix.dotnet-version }}"
        # install MSBuild, used to build the test project
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
        # install NuGet.exe to restore required NuGet packages
      - name: Setup Nuget
        uses: NuGet/setup-nuget@v1.0.5
        # install Visual Studio's console test application, to execute tests
      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1
        # Restore required NuGet packages
      - name: Restore NuGet Packages
        run: nuget restore EasyPost.sln
        # Build the test project
      - name: Build Solution
        run: msbuild ${{ steps.test_project.outputs.test_file }}\${{ steps.test_project.outputs.test_file }}.csproj /p:platform="Any CPU" /p:configuration="Test" /p:outputPath="bin/Test" /p:target="Rebuild" -restore
        # Run the tests
      - name: Run Tests
        run: vstest.console.exe ${{ steps.test_project.outputs.test_file }}\bin\Test\${{ steps.test_project.outputs.test_file }}.dll
