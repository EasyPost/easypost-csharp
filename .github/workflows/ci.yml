name: CI

on:
  push:
    branches: [ master ]
  pull_request: ~

jobs:
  linux_net_core:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # use the latest minor release of each .NET Core version
        # list of available versions: 
        # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-Readme.md#net-core-sdk
        dotnet-version: ['3.1.x', '5.0.x']
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        if: always()
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        if: always()
        run: dotnet build --configuration Test --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
  windows_net_core:
    # will migrate to windows-latest when that points to windows-2022
    # https://github.com/actions/virtual-environments/issues/4856
    runs-on: windows-2019
    strategy:
      matrix:
        # use the latest minor release of each .NET Core version
        # list of available versions: 
        # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-Readme.md#net-core-sdk
        dotnet-version: [ '3.1.x', '5.0.x' ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        if: always()
        run: dotnet build --configuration Test --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
  windows_net:
    # Test our .NET 3.5 support (Windows-specific)
    # https://dev.to/felipetofoli/github-actions-for-net-full-framework-build-and-test-299h
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v1
      - name: Setup MSBuild
        if: always()
        uses: microsoft/setup-msbuild@v1.1
      - name: Setup Nuget
        uses: NuGet/setup-nuget@v1.0.5
      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1
      - run: cd $GITHUB_WORKSPACE
      - name: Restore NuGet Packages
        run: nuget restore EasyPost.sln
      - name: Build Solution
        run: msbuild EasyPost.sln /p:platform="Any CPU" /p:configuration="Release" /p:outputPath="bin/Release" /p:target="Rebuild"
      - name: Run Tests
        run: vstest.console.exe .\tests\EasyPost.Tests\bin\Release\EasyPost.Tests.dll